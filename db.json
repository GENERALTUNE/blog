{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/material-x/source/style.less","path":"style.less","modified":0,"renderable":1},{"_id":"themes/material-x/source/fonts/Monaco.ttf","path":"fonts/Monaco.ttf","modified":0,"renderable":1},{"_id":"themes/material-x/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/material-x/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/material-x/source/js/volantis.js","path":"js/volantis.js","modified":0,"renderable":1},{"_id":"themes/material-x/source/fonts/Skranji-Regular.ttf","path":"fonts/Skranji-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/material-x/source/fonts/Ubuntu-Regular.ttf","path":"fonts/Ubuntu-Regular.ttf","modified":0,"renderable":1}],"Cache":[{"_id":"themes/material-x/.gitignore","hash":"f875b6524d4c61e5de0a1d9efdec1fe451d7bc07","modified":1562383792949},{"_id":"themes/material-x/LICENSE","hash":"13b0862f4ed1914abe887a47df2c3ca5adfa8f3f","modified":1562383792949},{"_id":"themes/material-x/README.md","hash":"b497d2c298d6ca35c5ccf9793baa0ceab77b64bf","modified":1562383792949},{"_id":"themes/material-x/_config.yml","hash":"5744ea3b23627d5b9b745f43dc741be757304b08","modified":1562383792949},{"_id":"source/_posts/20161226.md","hash":"f889148cdf1858835952ee2e3ce23445f12f8a9c","modified":1562125949680},{"_id":"source/_posts/20161227.md","hash":"54080b5169325a5bc6920c32d56ae2cdef6215f3","modified":1562125949680},{"_id":"source/_posts/20170103.md","hash":"bff8221428b241129f9d43cf6d4ad48df1a4a32d","modified":1562125949680},{"_id":"source/_posts/20170104.md","hash":"03a326ccfa68d25145441faad2923bd86f04a823","modified":1562125949680},{"_id":"source/_posts/20170115.md","hash":"6470d5668d756f98f2026c919a3896e298a4cc81","modified":1562125949680},{"_id":"source/_posts/20170116.md","hash":"89d15a84cc1a36493a58fad5788b3fe592328e82","modified":1562125949680},{"_id":"source/_posts/20170117.md","hash":"d87750026319423df408dc143dee1d3d669eb045","modified":1562125949684},{"_id":"source/_posts/20170119.md","hash":"c82fd124d069918a02e0e4e4bfd28ca336f1116c","modified":1562125949684},{"_id":"source/_posts/20170122.md","hash":"ca871bfd42031850c48a0b138cce4a5cda31f844","modified":1562125949684},{"_id":"source/_posts/20170124.md","hash":"a466a7f66d08d1c1b9490c4550703a111a26952e","modified":1562125949684},{"_id":"source/_posts/20170210.md","hash":"57db088261cd531040e9b622ad08e5f0ca546606","modified":1562125949684},{"_id":"source/_posts/20170212.md","hash":"f1e5e59350208a4550d76e295658ff8ff437f506","modified":1562125949684},{"_id":"source/_posts/20170220.md","hash":"827b148509370b25b08919ac73c07cd24aecdf0e","modified":1562125949684},{"_id":"source/_posts/algorithm-tips.md","hash":"285fd111e420933645158ad5bd2bb2f18ddab1e2","modified":1562125949684},{"_id":"source/_posts/china_open_source20170515.md","hash":"5d48f6e05e742f4162938868ea68c4e699178b67","modified":1562125949684},{"_id":"source/_posts/css_学习笔记20170801.md","hash":"bc6db80b8e7ae16266f8f265416fb6cb57c2ffc6","modified":1562125949684},{"_id":"source/_posts/csslayout.md","hash":"a5a2262c68caa49cebd997b28b6bb3712203bbf0","modified":1562125949684},{"_id":"source/_posts/css总结.md","hash":"afbb695e8af1fd244108206d0759f6193f495264","modified":1562125949684},{"_id":"source/_posts/deeplearning.md","hash":"73a112c19e4747bf58df8d38325757db9efb9fc3","modified":1562125949684},{"_id":"source/_posts/docker-user-tips.md","hash":"1e16f4e850305a47609a29ccd7e1f84db123c8cb","modified":1562125949684},{"_id":"source/_posts/famous_internet_people20170428.md","hash":"9f2a89315b99cb2c0207f6d0678827d2dc9e84ca","modified":1562125949684},{"_id":"source/_posts/git-tips.md","hash":"63803a1447fbeb49c5e0249a73aae393f763e381","modified":1562125949684},{"_id":"source/_posts/hello-world.md","hash":"963345c56bdc45dde716ed607a4630f0eda29f95","modified":1562125949684},{"_id":"source/_posts/interview-tips.md","hash":"336131b9644d309521d13a0f6084fe1ab36bd195","modified":1562125949684},{"_id":"source/_posts/javascript-tips.md","hash":"d7bc38dc51c0580fc62a79f641c9a656613d9df2","modified":1562125949684},{"_id":"source/_posts/linux-help-compress.md","hash":"6fdbd9c98a5085cb89ca8d94598efea50291e86b","modified":1562125949684},{"_id":"source/_posts/linux-tips.md","hash":"7577351d423e411b2e22d30f3ea01ff1bdbd80ec","modified":1562125949684},{"_id":"source/_posts/nc-note.md","hash":"da461d8649a9cf1d26448538728b26495ea0b703","modified":1562125949684},{"_id":"source/_posts/nice-sites.md","hash":"87b6e0040df7725d6401dd0c6f30231c29dc9a75","modified":1562125949684},{"_id":"source/_posts/nice_front_sites20170731.md","hash":"a45b45390b2b87bfea748b6df05d5fc22715ee42","modified":1562125949684},{"_id":"source/_posts/nice_sites_20170519.md","hash":"82d4b32fbe835c75fddbe1fe0131beb68080973c","modified":1562125949684},{"_id":"source/_posts/pageoptimization.md","hash":"80ebc54a6abde81e48069eaa5e2d981c4e057438","modified":1562125949684},{"_id":"source/_posts/react-source-tips.md","hash":"e6c43bdf94828ad1f102258aa57337d8c9e9407c","modified":1562125949684},{"_id":"source/_posts/recommendationsystemengineer.md","hash":"72f62a460c93ae83bfe6229e340fa73ac8f4d800","modified":1562125949684},{"_id":"source/_posts/scala.md","hash":"ff0f6d72aac6cb5a9f5df29bf91a72e20bb22965","modified":1562125949684},{"_id":"source/_posts/shell-command.md","hash":"8e9f048994ad35d0c5e435cec7b63800341ab080","modified":1562125949684},{"_id":"source/_posts/song_lyric_20170330.md","hash":"8aa69e457a4b4fb18526c114a1523d53e8d8f90c","modified":1562125949684},{"_id":"source/_posts/summitmeeting.md","hash":"147ced9c062727a5a72e8c82bf4881fd174c7c97","modified":1562125949684},{"_id":"source/_posts/ubuntu_tips20171115.md","hash":"af0cd46f2b1b7f5b80ef2e6f581bc6220ae6b88d","modified":1562125949684},{"_id":"source/_posts/unix_note_20170316.md","hash":"7f23d41828debc09a299addf9cb97dd796501a2e","modified":1562125949684},{"_id":"source/_posts/vue.md","hash":"28cbc6b198672d1422839cf3c51b76374ddebb45","modified":1562125949684},{"_id":"source/_posts/w3c-tips.md","hash":"322b64c9f4ec8aa644a4e919f5cbd6def838093b","modified":1562125949684},{"_id":"source/_posts/web-performance-improvement.md","hash":"0f62cc2b21c5a06938d7eed66f4ff16e439a4fa8","modified":1562125949684},{"_id":"source/_posts/平安夜的这一天.md","hash":"ce21a07993d9538af6239a9a0ceff13e3c5d0744","modified":1562125949684},{"_id":"source/_posts/日记20161225.md","hash":"8bddf29c5a6c9fe692a2fc6294d02945c153a82d","modified":1562125949684},{"_id":"source/_posts/日记20170417.md","hash":"847854295ae4282b45cfba4c8150a9821051fac3","modified":1562125949684},{"_id":"source/_posts/日记20171120.md","hash":"85f7ad6823c91a08e49ef1be938639e2a678d878","modified":1562125949684},{"_id":"source/_posts/星期五-平安夜前一天.md","hash":"bb07b14e696572a438b78901452ab5c2e55f0177","modified":1562125949684},{"_id":"source/_posts/星期四.md","hash":"4f4d6c789fbfd95c714e2da4df480cb4337c72a4","modified":1562125949684},{"_id":"source/_posts/编程笔记20170313.md","hash":"9da7389f56d697dff53d586d8fc4f3377075b43f","modified":1562125949684},{"_id":"themes/material-x/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1562383792921},{"_id":"themes/material-x/.git/config","hash":"57e9f5fc632dd7924ac6e6a3d0e415e0e01f7891","modified":1562383792921},{"_id":"themes/material-x/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1562383672645},{"_id":"themes/material-x/.git/index","hash":"8794720f8bae32a63ef456aa497b07c4e384b1dd","modified":1562383792965},{"_id":"themes/material-x/.git/packed-refs","hash":"e6e3f3631c6543e63e6b1f69531c56e4fb6daf1b","modified":1562383792921},{"_id":"themes/material-x/languages/en.yml","hash":"3e0c3b617f282ca66d7cff444c9671ea7bb1a503","modified":1562383792949},{"_id":"themes/material-x/languages/zh-CN.yml","hash":"c3a9d3831f1cef9edd2429b4766c359e21673dde","modified":1562383792949},{"_id":"themes/material-x/languages/zh-HK.yml","hash":"fb5510c20171654d2ebc1ac780a1d6cc596fbd37","modified":1562383792949},{"_id":"themes/material-x/languages/zh-TW.yml","hash":"b8bc7643f790c9da2ec6741af5eeca3dc2e0417a","modified":1562383792949},{"_id":"themes/material-x/layout/archive.ejs","hash":"6b36ef79379f65952df9f27475f73d191d22657e","modified":1562383792953},{"_id":"themes/material-x/layout/category.ejs","hash":"ff5b299f7b0f3668174314c57ffe0389891399a6","modified":1562383792953},{"_id":"themes/material-x/layout/index.ejs","hash":"03ba528ba647d8ad184a2dd08e1c2c3ac4dd7baa","modified":1562383792953},{"_id":"themes/material-x/layout/layout.ejs","hash":"9c262bfa12dd43d434d86deea6adf8dfdf46d5b4","modified":1562383792953},{"_id":"themes/material-x/layout/links.ejs","hash":"65fa60924151666fbb814b958ec9b5b231ab0ab9","modified":1562383792953},{"_id":"themes/material-x/layout/list.ejs","hash":"3466d6dede7aab729b2986c145d95154af0856f2","modified":1562383792953},{"_id":"themes/material-x/layout/page.ejs","hash":"3dd6f14881ac16a8ceb48a1d9f9f5d0377cd082c","modified":1562383792953},{"_id":"themes/material-x/layout/post.ejs","hash":"3dd6f14881ac16a8ceb48a1d9f9f5d0377cd082c","modified":1562383792953},{"_id":"themes/material-x/layout/tag.ejs","hash":"ddbfca0cb18d9ceb47611fa3c7e8a8b5ecf31085","modified":1562383792953},{"_id":"themes/material-x/source/style.less","hash":"bd90f674eca5279de970627ce19f20fd784c293a","modified":1562383792965},{"_id":"themes/material-x/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1562383672645},{"_id":"themes/material-x/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1562383672645},{"_id":"themes/material-x/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1562383672645},{"_id":"themes/material-x/.git/logs/HEAD","hash":"eb32ae62e95ae6505185c840110ed53aeda4063e","modified":1562383792921},{"_id":"themes/material-x/.github/ISSUE_TEMPLATE/------.md","hash":"cc03dbf4326b9cd0f5a8a024bf6bb622334eca3f","modified":1562383792949},{"_id":"themes/material-x/layout/_cover/search.ejs","hash":"c5c79e41c43efadf41ffc2393152b89213351d00","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/author.ejs","hash":"cebe5d05c7588fb206c64b414b0bad2fca39a7cb","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/categories.ejs","hash":"4b5a6cd4a55742b5963dcd63c3bd9fb8534ba178","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/counter.ejs","hash":"7a22e5cec94673edcb084680df445aa7d800ca2e","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/date.ejs","hash":"0ef066dc7247464359a85d9c39010c1e7e9ffb1d","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/music.ejs","hash":"1ac33225b2dfc4d5498a86266f97082a8bf135ec","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/share.ejs","hash":"96cac09c9906283f454039a9f5c0302104338e64","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/tags.ejs","hash":"ca10c85f988b96f332d09d20016c78974cbc925d","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/thumbnail.ejs","hash":"99f3e0438be97f9462d9a9189117260d811da2e1","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/title.ejs","hash":"58f30ee662f22f55ef9191e06390229beda20694","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/top.ejs","hash":"e4e8bf49173f757ed19ed49d07e0db03f146e989","modified":1562383792949},{"_id":"themes/material-x/layout/_meta/updated.ejs","hash":"2d6e1e234721b930308caf61d2d086213f2389e4","modified":1562383792949},{"_id":"themes/material-x/layout/_partial/archive.ejs","hash":"ca70dd02c7efb4067c453e8a9414bd3f203db926","modified":1562383792949},{"_id":"themes/material-x/layout/_partial/article.ejs","hash":"f7e366529355d06cfd4070ed9fae994be09abd25","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/categories.ejs","hash":"12b2fca703fa56da7a85045bf17499845c3fe5bb","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/cover.ejs","hash":"61430899b26806df450ab75e021534b482ad7746","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/footer.ejs","hash":"ea1e86c615aa8cc6a3f6d073223e9c229a135a26","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/head.ejs","hash":"d4fefdaf1b311daa5a9df2e34fd78320272c505f","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/header.ejs","hash":"846d5496b7a26120ca92e038860707fa70bcaa30","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/mathjax.ejs","hash":"a51a072654643ecf850f813a31dd40d746f8ab96","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/meta.ejs","hash":"9d6a39dd84cc14c31a3fc36e9e0e5ee1f168e53f","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/post.ejs","hash":"6e7a5e3c2894778d8476d01603ab1790f7ccfe00","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/scripts.ejs","hash":"03026fb8f6d18b70f6af6dae2f434ddca98d9813","modified":1562383792953},{"_id":"themes/material-x/layout/_partial/side.ejs","hash":"da987d6feed88023241ea3ee33f390fc47b5c179","modified":1562383792953},{"_id":"themes/material-x/layout/_third-party/aplayer.ejs","hash":"9260682432e0a80261435b4bd27ccf16b8d96fed","modified":1562383792953},{"_id":"themes/material-x/layout/_third-party/clipboard.ejs","hash":"628a0ff18fecc3c866070517aad19366c00f417c","modified":1562383792953},{"_id":"themes/material-x/layout/_third-party/comments.ejs","hash":"e0805f203c7527a852a414ddd21425af4fed0218","modified":1562383792953},{"_id":"themes/material-x/layout/_third-party/fancybox.ejs","hash":"a840db5c132ded3be61e748ef1feadae1435465d","modified":1562383792953},{"_id":"themes/material-x/layout/_third-party/share.ejs","hash":"5b2a57aac6df2be654e45104177a9382641d7584","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/author.ejs","hash":"630967f53c7f8df561022a6230f4791b2c1fde95","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/category.ejs","hash":"a4b3059bb77841a0569243b2ef474ba1fd67ca3a","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/grid.ejs","hash":"33372405602c2bd6dcff42011d14998e5a2b2b70","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/header.ejs","hash":"d542654385da91d26c0647aae0155a7c3fe14d1d","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/list.ejs","hash":"2ce0d61c140852c84d6f0e52b063b0403836be37","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/music.ejs","hash":"a02103653676ab8016b2c4e93c7cd402d4a889bc","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/plain.ejs","hash":"27737e8f046ee3e8907a3ebb86e9800d405a7f4a","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/related_posts.ejs","hash":"aaf497403902a6bd2066c3a7de9b99170914daa4","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/tagcloud.ejs","hash":"b81b89ee0f62768e0cc97cfb2442cdb903ca559a","modified":1562383792953},{"_id":"themes/material-x/layout/_widget/toc.ejs","hash":"dd5f82c8965da414d96d935645fc27f9f3f05566","modified":1562383792953},{"_id":"themes/material-x/source/fonts/Monaco.ttf","hash":"d4de9305ce9e916ece179c3ab3b1faf80cc52bbb","modified":1562383792953},{"_id":"themes/material-x/source/js/app.js","hash":"20ba53cc54035dd091605508155ce54f8491f34e","modified":1562383792961},{"_id":"themes/material-x/source/js/search.js","hash":"603215c3ae9d2f3c019753dd6c9d228302505bb3","modified":1562383792961},{"_id":"themes/material-x/source/less/_archive.less","hash":"13503b9ef5d45782ad44af3b7509191da5824284","modified":1562383792965},{"_id":"themes/material-x/source/less/_article.less","hash":"98b835a7bb513a88ec4e5f163923b262eacb640d","modified":1562383792965},{"_id":"themes/material-x/source/less/_base.less","hash":"f56fe042567bc149eed3b29fe09618c60b0d6733","modified":1562383792965},{"_id":"themes/material-x/source/less/_color.less","hash":"95b8a3a4d51a13ef231a498d916aa026470663dd","modified":1562383792965},{"_id":"themes/material-x/source/less/_defines.less","hash":"59912db57e6051debd70487848501e6ad0a016ed","modified":1562383792965},{"_id":"themes/material-x/source/less/_fonts.less","hash":"0d98499e28ecce54c3e2a2f4f09011c24c4307e9","modified":1562383792965},{"_id":"themes/material-x/source/less/_footer.less","hash":"f53de1b635591582ec9b1ec74249a622fc2cb8fa","modified":1562383792965},{"_id":"themes/material-x/source/less/_header.less","hash":"9bb49870c459318e1dbb1302ad35645befbf9896","modified":1562383792965},{"_id":"themes/material-x/source/less/_layout.less","hash":"d44abc94ffe5e4f70ecc8e5861ae05fb49f1da88","modified":1562383792965},{"_id":"themes/material-x/source/less/_links.less","hash":"13d1ba7fa0a43b00dee925160c108f01eb212285","modified":1562383792965},{"_id":"themes/material-x/source/less/_main.less","hash":"a4898d344e60c08249750b5eca3c6dbd11e2a4e3","modified":1562383792965},{"_id":"themes/material-x/source/less/_normalize.less","hash":"f092813604db20a84c62ef889411598e78d14599","modified":1562383792965},{"_id":"themes/material-x/source/less/_pagination.less","hash":"165e2c369faf70858b731bb6d483d8991259887e","modified":1562383792965},{"_id":"themes/material-x/source/less/_search.less","hash":"7d8470699ed21c63ad6281d5934cadead109d97c","modified":1562383792965},{"_id":"themes/material-x/source/less/_side.less","hash":"85b5a080defb327d4739356ec872b4e6346c12d2","modified":1562383792965},{"_id":"themes/material-x/source/less/_toc.less","hash":"6d8c644aebe6fd6d9b657bd2b037ab4296fe80b1","modified":1562383792965},{"_id":"themes/material-x/source/less/_tog.less","hash":"73e72c4efd04a8721a87002de1a8a0201e1f5564","modified":1562383792965},{"_id":"themes/material-x/source/less/_typo.less","hash":"6a93f9fab3e1dfac4dc80dd77bf6b1223b5fb058","modified":1562383792965},{"_id":"themes/material-x/.git/refs/heads/master","hash":"fddac67bd9033ea47aabc6619c1773deb3256755","modified":1562383792921},{"_id":"themes/material-x/source/js/volantis.js","hash":"28fcd2db5a696d2f327eb53d95e711c3f2574240","modified":1562383792965},{"_id":"themes/material-x/.git/objects/pack/pack-49bcddfe2d4d685b7b3d747af9373398ae74fbc7.idx","hash":"d7fd532551e371a1febc5f440a83f011a4943589","modified":1562383792801},{"_id":"themes/material-x/source/fonts/Skranji-Regular.ttf","hash":"485dc033e34a5a92a45ffe5839514f0471b18208","modified":1562383792957},{"_id":"themes/material-x/.git/logs/refs/heads/master","hash":"eb32ae62e95ae6505185c840110ed53aeda4063e","modified":1562383792921},{"_id":"themes/material-x/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1562383792921},{"_id":"themes/material-x/source/fonts/Ubuntu-Regular.ttf","hash":"b100b2ed912a91e4d0a7c5f5309fe8ad7b3a2dd8","modified":1562383792961},{"_id":"themes/material-x/.git/logs/refs/remotes/origin/HEAD","hash":"eb32ae62e95ae6505185c840110ed53aeda4063e","modified":1562383792921},{"_id":"themes/material-x/.git/objects/pack/pack-49bcddfe2d4d685b7b3d747af9373398ae74fbc7.pack","hash":"f5f8ed310177a80ef10b00d78e6b20bbd023b7b7","modified":1562383792801},{"_id":"public/2018/03/08/summitmeeting/index.html","hash":"305eb8d344c13fb6c51ff7387486fc44bd33a11f","modified":1562383891023},{"_id":"public/2018/03/01/docker-user-tips/index.html","hash":"0df0aca3c9df14c34530e0cc7b8b162491135921","modified":1562383891023},{"_id":"public/2018/03/01/csslayout/index.html","hash":"ec1b56ed9ae09d0f4c241b76920445f8be256459","modified":1562383891024},{"_id":"public/2018/02/25/pageoptimization/index.html","hash":"dda892fce54cadd56a9eb93ec6c5880c49ea4157","modified":1562383891024},{"_id":"public/2018/02/07/interview-tips/index.html","hash":"163b480faada7c35b9ff91a0fce5d5844050816a","modified":1562383891024},{"_id":"public/2018/01/19/react-source-tips/index.html","hash":"f902f835c2a201157f8ab207dc1f40795a5c8875","modified":1562383891024},{"_id":"public/2018/01/15/hello-world/index.html","hash":"11c94d9bf0ed49715ad06737a17201d5984fc384","modified":1562383891024},{"_id":"public/2018/01/13/shell-command/index.html","hash":"da471173087b683fc48a1ae9141c9194990a39ed","modified":1562383891024},{"_id":"public/2018/01/11/algorithm-tips/index.html","hash":"4d789d859d7fbbb9d270d87d5bd2633208f693d0","modified":1562383891024},{"_id":"public/2018/01/11/w3c-tips/index.html","hash":"b90550d78c9a550014151d3dc4c5b64b5bbc3b2c","modified":1562383891024},{"_id":"public/2018/01/10/git-tips/index.html","hash":"5779fc6590b5c23f42b66830b2805a4bc47a6655","modified":1562383891025},{"_id":"public/2018/01/09/linux-tips/index.html","hash":"674159c2d9218746612ed26ffd8c8ab6384d2be7","modified":1562383891025},{"_id":"public/2018/01/09/javascript-tips/index.html","hash":"98b29fa574dfa73fad3e308e2fa784f52454e325","modified":1562383891025},{"_id":"public/2017/12/05/vue/index.html","hash":"646114d53092c5a9204c9c8685e3d164d37ec0ee","modified":1562383891025},{"_id":"public/2017/12/03/scala/index.html","hash":"c16d4fad6b9ec13c7dd9373f380f70171e42e74f","modified":1562383891025},{"_id":"public/2017/12/01/nice-sites/index.html","hash":"2508270c694053b2aedf179d77ecea3bfbf307d1","modified":1562383891025},{"_id":"public/2017/11/25/web-performance-improvement/index.html","hash":"59523e689dff442a251ff913f60985319aca5261","modified":1562383891025},{"_id":"public/2017/11/23/nc-note/index.html","hash":"5ae3ebd7e29c692fe06a6145523d24d387be5564","modified":1562383891025},{"_id":"public/2017/11/21/linux-help-compress/index.html","hash":"9e5fc7e0f9cdc74f423c70a10b474ec5d261b962","modified":1562383891025},{"_id":"public/2017/11/20/recommendationsystemengineer/index.html","hash":"4195104ba9634416160f201c5a79402e63fa2d0e","modified":1562383891025},{"_id":"public/2017/11/20/日记20171120/index.html","hash":"389cee48010d210a289d8c086df0aba35cc84ea4","modified":1562383891025},{"_id":"public/2017/11/20/deeplearning/index.html","hash":"8f902da364551ad4e8b268366730c24e42ad2d3c","modified":1562383891025},{"_id":"public/2017/11/15/ubuntu_tips20171115/index.html","hash":"7075e20691c4fde9ff55844c0a583d7885c6e614","modified":1562383891025},{"_id":"public/2017/10/30/css总结/index.html","hash":"a2d19835345926898224a1519665723d872012b8","modified":1562383891026},{"_id":"public/2017/08/01/css_学习笔记20170801/index.html","hash":"14a9bdf1f6e4d02c3e6e7325f4e7c0490f65dcd9","modified":1562383891026},{"_id":"public/2017/07/31/nice_front_sites20170731/index.html","hash":"af32c7e4117c5479151f17e01510f1c58aebcb8f","modified":1562383891026},{"_id":"public/2017/05/19/nice_sites_20170519/index.html","hash":"725f72e2e618ff61bd151aca9482b3f2ef17b1ae","modified":1562383891026},{"_id":"public/2017/05/15/china_open_source20170515/index.html","hash":"3992f7cdcc06fec7110f470b72f2f63b1157427b","modified":1562383891026},{"_id":"public/2017/04/28/famous_internet_people20170428/index.html","hash":"2d27e06aa6e541052a25f8a4c624032c424a7eab","modified":1562383891026},{"_id":"public/2017/04/17/日记20170417/index.html","hash":"c424a9ff8b73b55868a1587b4dbe851784df81d6","modified":1562383891026},{"_id":"public/2017/03/30/song_lyric_20170330/index.html","hash":"5f450935ef460b1603cea9b3316f2abca9d4e1bf","modified":1562383891026},{"_id":"public/2017/03/16/unix_note_20170316/index.html","hash":"180a202f70a4205248f21198bbce1eff14a66f55","modified":1562383891026},{"_id":"public/2017/03/13/编程笔记20170313/index.html","hash":"b94e6bd75b7bfe799e770624fe63c43e1987a284","modified":1562383891026},{"_id":"public/2017/02/20/20170220/index.html","hash":"2686e5f4cf521c4717f0d9726009dc99e98d400f","modified":1562383891026},{"_id":"public/2017/02/12/20170212/index.html","hash":"2f620ff892f1293c320c7831d389fb8d8e1de3d6","modified":1562383891026},{"_id":"public/2017/02/10/20170210/index.html","hash":"947618b71deef64f6f2b40a792cd37fdd3f7e866","modified":1562383891026},{"_id":"public/2017/01/24/20170124/index.html","hash":"5d9e37f8be84e49d3ec24d6ba39bbcc42f50c474","modified":1562383891027},{"_id":"public/2017/01/22/20170122/index.html","hash":"ce1b062c811870cbfe935fe05264640c5b5ba454","modified":1562383891027},{"_id":"public/2017/01/19/20170119/index.html","hash":"6782f1936f1574cc50e2dae368e57bf2be222047","modified":1562383891027},{"_id":"public/2017/01/17/20170117/index.html","hash":"572ae8f1390399740176a8d5979853a030f6f426","modified":1562383891027},{"_id":"public/2017/01/16/20170116/index.html","hash":"ac2c8c5bcc98ebbfd86030c159027d6325460ae6","modified":1562383891027},{"_id":"public/2017/01/15/20170115/index.html","hash":"f9eb93a51b1ba292c04ce4d30accd91d1d7b64b0","modified":1562383891027},{"_id":"public/2017/01/04/20170104/index.html","hash":"f23f3969773468d8d493f9e8782368123e74db13","modified":1562383891027},{"_id":"public/2017/01/03/20170103/index.html","hash":"ab2de2c4600f26744e9502b1b12dc63194ba0cd7","modified":1562383891027},{"_id":"public/2016/12/27/20161227/index.html","hash":"f75e7be7cc2bca2914bbcb0be59064096c51c07d","modified":1562383891027},{"_id":"public/2016/12/26/20161226/index.html","hash":"28c19f41c8826f0cc7e47ebb2911133418d38e8d","modified":1562383891027},{"_id":"public/2016/12/25/日记20161225/index.html","hash":"16ae0cdc7aa4ee195d1d0a6eebbb38de0eb62310","modified":1562383891027},{"_id":"public/2016/12/24/平安夜的这一天/index.html","hash":"38cb1c1befd73c33c6e04996fbaf600badb77677","modified":1562383891027},{"_id":"public/2016/12/23/星期五-平安夜前一天/index.html","hash":"c598ed85e66ed25b827f53222c0983ab1d076c1a","modified":1562383891027},{"_id":"public/2016/12/22/星期四/index.html","hash":"eebd9712af74eceaed367558f5d10806d4702e11","modified":1562383891028},{"_id":"public/archives/index.html","hash":"d2ee8ad264c60ca003d7050ac5319cb0a2e5e9c4","modified":1562383891028},{"_id":"public/archives/page/2/index.html","hash":"d2ee8ad264c60ca003d7050ac5319cb0a2e5e9c4","modified":1562383891028},{"_id":"public/archives/page/3/index.html","hash":"d2ee8ad264c60ca003d7050ac5319cb0a2e5e9c4","modified":1562383891028},{"_id":"public/archives/page/4/index.html","hash":"d2ee8ad264c60ca003d7050ac5319cb0a2e5e9c4","modified":1562383891028},{"_id":"public/archives/page/5/index.html","hash":"d2ee8ad264c60ca003d7050ac5319cb0a2e5e9c4","modified":1562383891028},{"_id":"public/archives/2016/index.html","hash":"9785082290913f3a406cadadc56da788262073b9","modified":1562383891028},{"_id":"public/archives/2016/12/index.html","hash":"b10b3cc4b33f6ff55f3a5eb60bfbeea38c2740bb","modified":1562383891028},{"_id":"public/archives/2017/index.html","hash":"d0649d93a9f2ed59f78b02f6313d30499d989eea","modified":1562383891028},{"_id":"public/archives/2017/page/2/index.html","hash":"9dec840f3e43961f14c93ae9d188e339fd049cd4","modified":1562383891028},{"_id":"public/archives/2017/page/3/index.html","hash":"465be0465d08eb9d819f259e7ea0c1565a031192","modified":1562383891028},{"_id":"public/archives/2017/page/4/index.html","hash":"d4114e5e68ca9fe2e8cab2237ea98696f5b9d274","modified":1562383891028},{"_id":"public/archives/2017/01/index.html","hash":"7e12281eb7a1af912b9fec854dc32a4d6facc98b","modified":1562383891028},{"_id":"public/archives/2017/02/index.html","hash":"5b535bb701aab3a0ee84d74d9a0e848747f908a3","modified":1562383891029},{"_id":"public/archives/2017/03/index.html","hash":"b9c83a89a8a2e504a982d91306e927aaf4f4f775","modified":1562383891029},{"_id":"public/archives/2017/04/index.html","hash":"2395ca8dcc810d844ac14ad344efa62aba48a063","modified":1562383891029},{"_id":"public/archives/2017/05/index.html","hash":"4c2df3a975bcf74227bd4654280d35137ead669a","modified":1562383891029},{"_id":"public/archives/2017/07/index.html","hash":"12b26fc81f45dc7ae5702dca5b088bd407333b82","modified":1562383891029},{"_id":"public/archives/2017/08/index.html","hash":"40f50a3a6ab182d42c5dc59ddf16783c49fbf0eb","modified":1562383891029},{"_id":"public/archives/2017/10/index.html","hash":"5ada20791e6c77f328651d42089958ef76514860","modified":1562383891029},{"_id":"public/archives/2017/11/index.html","hash":"0e7b46a15b93b39b0ba095d0317e1ce540bfb1cd","modified":1562383891029},{"_id":"public/archives/2017/12/index.html","hash":"b070feb1ce7dacd1bf5b47a96879bbd2ddc7dd51","modified":1562383891029},{"_id":"public/archives/2018/index.html","hash":"e5557b53cbf65e5974444e2ea3f570e5c02efc32","modified":1562383891029},{"_id":"public/archives/2018/page/2/index.html","hash":"51259121268b478bd366a74b1c27ccb865931c51","modified":1562383891029},{"_id":"public/archives/2018/01/index.html","hash":"670107be0ebbe4eaa1b79c8d954d01f432c1e743","modified":1562383891029},{"_id":"public/archives/2018/02/index.html","hash":"94728448aa3a819b119730a16cbdcb69cb82c6e4","modified":1562383891029},{"_id":"public/archives/2018/03/index.html","hash":"ff5cd5935a107872eab9ffd0402062a42ad2f9a7","modified":1562383891030},{"_id":"public/index.html","hash":"cf6fbc9f111999da6621e108ff4fc9a9d507bfa7","modified":1562383891030},{"_id":"public/page/2/index.html","hash":"358fe3f48b3101e853b7eeeb2c83738289556bfd","modified":1562383891030},{"_id":"public/page/3/index.html","hash":"a869f00db21e8fd41048883a99557fc2b6a26331","modified":1562383891030},{"_id":"public/page/4/index.html","hash":"80d99b166a9c1a56e429149382316b5ba2a2e882","modified":1562383891030},{"_id":"public/page/5/index.html","hash":"b5ed234394fcf102e370f8eee27721e8f8f8e9fc","modified":1562383891030},{"_id":"public/tags/日志-感悟-生活/index.html","hash":"f9a84c15d1b163edc6b326ae8a606dc3cec51001","modified":1562383891030},{"_id":"public/style.less","hash":"bd90f674eca5279de970627ce19f20fd784c293a","modified":1562383891033},{"_id":"public/fonts/Monaco.ttf","hash":"d4de9305ce9e916ece179c3ab3b1faf80cc52bbb","modified":1562383891033},{"_id":"public/js/app.js","hash":"20ba53cc54035dd091605508155ce54f8491f34e","modified":1562383891040},{"_id":"public/js/search.js","hash":"603215c3ae9d2f3c019753dd6c9d228302505bb3","modified":1562383891040},{"_id":"public/js/volantis.js","hash":"28fcd2db5a696d2f327eb53d95e711c3f2574240","modified":1562383891040},{"_id":"public/fonts/Skranji-Regular.ttf","hash":"485dc033e34a5a92a45ffe5839514f0471b18208","modified":1562383891042},{"_id":"public/fonts/Ubuntu-Regular.ttf","hash":"b100b2ed912a91e4d0a7c5f5309fe8ad7b3a2dd8","modified":1562383891045}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"值得注意的一天","date":"2016-12-26T02:32:32.000Z","_content":"\n1. ### 今天是北京市每两个月一次的小汽车摇号的日子(特别希望能够摇中 ^.^)\n2. ### 今天是坚持走路上下班满一个月的日子(从11.26开始到今天，每天早上1.25h + 晚上 1.25h = 2.5h   2.5h x 30 = 75h 哇 一个月我已经坚持走路75个小时了)\n3. ### 今天早上终于暂时抢到一张回家的站票。。。\n\n - [ ] 摇号未中。。\n - [X] 一如既往 \n\n -----\n\n - [X] 星期一上班好没有精神 \n - [ ] 希望星期二能好一点 \n\n ---------\n`    var a = 1;\n    var b = 2;\n\n    function c (){\n      console.log(a,b);\n    }; \n`\n\n -------------\n## 收到小表妹送的仙人球  cactus\n![图片一](/myblog/img/cactus.jpg)\n![图片二](/myblog/img/cactusb.jpg)\n","source":"_posts/20161226.md","raw":"---\ntitle: 值得注意的一天\ndate: 2016-12-26 10:32:32\ntags:\n---\n\n1. ### 今天是北京市每两个月一次的小汽车摇号的日子(特别希望能够摇中 ^.^)\n2. ### 今天是坚持走路上下班满一个月的日子(从11.26开始到今天，每天早上1.25h + 晚上 1.25h = 2.5h   2.5h x 30 = 75h 哇 一个月我已经坚持走路75个小时了)\n3. ### 今天早上终于暂时抢到一张回家的站票。。。\n\n - [ ] 摇号未中。。\n - [X] 一如既往 \n\n -----\n\n - [X] 星期一上班好没有精神 \n - [ ] 希望星期二能好一点 \n\n ---------\n`    var a = 1;\n    var b = 2;\n\n    function c (){\n      console.log(a,b);\n    }; \n`\n\n -------------\n## 收到小表妹送的仙人球  cactus\n![图片一](/myblog/img/cactus.jpg)\n![图片二](/myblog/img/cactusb.jpg)\n","slug":"20161226","published":1,"updated":"2019-07-03T03:52:29.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zl600002oi8lxdsam1f","content":"<ol>\n<li><h3 id=\"今天是北京市每两个月一次的小汽车摇号的日子-特别希望能够摇中\"><a href=\"#今天是北京市每两个月一次的小汽车摇号的日子-特别希望能够摇中\" class=\"headerlink\" title=\"今天是北京市每两个月一次的小汽车摇号的日子(特别希望能够摇中 ^.^)\"></a>今天是北京市每两个月一次的小汽车摇号的日子(特别希望能够摇中 ^.^)</h3></li>\n<li><h3 id=\"今天是坚持走路上下班满一个月的日子-从11-26开始到今天，每天早上1-25h-晚上-1-25h-2-5h-2-5h-x-30-75h-哇-一个月我已经坚持走路75个小时了\"><a href=\"#今天是坚持走路上下班满一个月的日子-从11-26开始到今天，每天早上1-25h-晚上-1-25h-2-5h-2-5h-x-30-75h-哇-一个月我已经坚持走路75个小时了\" class=\"headerlink\" title=\"今天是坚持走路上下班满一个月的日子(从11.26开始到今天，每天早上1.25h + 晚上 1.25h = 2.5h   2.5h x 30 = 75h 哇 一个月我已经坚持走路75个小时了)\"></a>今天是坚持走路上下班满一个月的日子(从11.26开始到今天，每天早上1.25h + 晚上 1.25h = 2.5h   2.5h x 30 = 75h 哇 一个月我已经坚持走路75个小时了)</h3></li>\n<li><h3 id=\"今天早上终于暂时抢到一张回家的站票。。。\"><a href=\"#今天早上终于暂时抢到一张回家的站票。。。\" class=\"headerlink\" title=\"今天早上终于暂时抢到一张回家的站票。。。\"></a>今天早上终于暂时抢到一张回家的站票。。。</h3><ul>\n<li><input disabled type=\"checkbox\"> 摇号未中。。</li>\n<li><input checked disabled type=\"checkbox\"> 一如既往 </li>\n</ul>\n<hr>\n<ul>\n<li><input checked disabled type=\"checkbox\"> 星期一上班好没有精神 </li>\n<li><input disabled type=\"checkbox\"> 希望星期二能好一点 </li>\n</ul>\n<hr>\n<p>`    var a = 1;<br> var b = 2;</p>\n<p> function c (){<br>   console.log(a,b);<br> };<br>`</p>\n<hr>\n<h2 id=\"收到小表妹送的仙人球-cactus\"><a href=\"#收到小表妹送的仙人球-cactus\" class=\"headerlink\" title=\"收到小表妹送的仙人球  cactus\"></a>收到小表妹送的仙人球  cactus</h2><p><img src=\"/myblog/img/cactus.jpg\" alt=\"图片一\"><br><img src=\"/myblog/img/cactusb.jpg\" alt=\"图片二\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><h3 id=\"今天是北京市每两个月一次的小汽车摇号的日子-特别希望能够摇中\"><a href=\"#今天是北京市每两个月一次的小汽车摇号的日子-特别希望能够摇中\" class=\"headerlink\" title=\"今天是北京市每两个月一次的小汽车摇号的日子(特别希望能够摇中 ^.^)\"></a>今天是北京市每两个月一次的小汽车摇号的日子(特别希望能够摇中 ^.^)</h3></li>\n<li><h3 id=\"今天是坚持走路上下班满一个月的日子-从11-26开始到今天，每天早上1-25h-晚上-1-25h-2-5h-2-5h-x-30-75h-哇-一个月我已经坚持走路75个小时了\"><a href=\"#今天是坚持走路上下班满一个月的日子-从11-26开始到今天，每天早上1-25h-晚上-1-25h-2-5h-2-5h-x-30-75h-哇-一个月我已经坚持走路75个小时了\" class=\"headerlink\" title=\"今天是坚持走路上下班满一个月的日子(从11.26开始到今天，每天早上1.25h + 晚上 1.25h = 2.5h   2.5h x 30 = 75h 哇 一个月我已经坚持走路75个小时了)\"></a>今天是坚持走路上下班满一个月的日子(从11.26开始到今天，每天早上1.25h + 晚上 1.25h = 2.5h   2.5h x 30 = 75h 哇 一个月我已经坚持走路75个小时了)</h3></li>\n<li><h3 id=\"今天早上终于暂时抢到一张回家的站票。。。\"><a href=\"#今天早上终于暂时抢到一张回家的站票。。。\" class=\"headerlink\" title=\"今天早上终于暂时抢到一张回家的站票。。。\"></a>今天早上终于暂时抢到一张回家的站票。。。</h3><ul>\n<li><input disabled type=\"checkbox\"> 摇号未中。。</li>\n<li><input checked disabled type=\"checkbox\"> 一如既往 </li>\n</ul>\n<hr>\n<ul>\n<li><input checked disabled type=\"checkbox\"> 星期一上班好没有精神 </li>\n<li><input disabled type=\"checkbox\"> 希望星期二能好一点 </li>\n</ul>\n<hr>\n<p>`    var a = 1;<br> var b = 2;</p>\n<p> function c (){<br>   console.log(a,b);<br> };<br>`</p>\n<hr>\n<h2 id=\"收到小表妹送的仙人球-cactus\"><a href=\"#收到小表妹送的仙人球-cactus\" class=\"headerlink\" title=\"收到小表妹送的仙人球  cactus\"></a>收到小表妹送的仙人球  cactus</h2><p><img src=\"/myblog/img/cactus.jpg\" alt=\"图片一\"><br><img src=\"/myblog/img/cactusb.jpg\" alt=\"图片二\"></p>\n</li>\n</ol>\n"},{"title":"2017年的第三天","date":"2017-01-03T02:03:41.000Z","_content":"\n## 2016年是生命中感觉过得最快的一年\n*今年休闲时间有很多是在国图度过*\n![国图](/myblog/img/guotu.jpg)\n*今年又滑了一次雪*\n![滑雪一](/myblog/img/huaxue1.jpg)\n![滑雪二](/myblog/img/huaxue2.jpg)\n![滑雪三](/myblog/img/huaxue3.jpg)\n![滑雪四](/myblog/img/huaxue4.jpg)\n","source":"_posts/20170103.md","raw":"---\ntitle: 2017年的第三天\ndate: 2017-01-03 10:03:41\ntags:\n---\n\n## 2016年是生命中感觉过得最快的一年\n*今年休闲时间有很多是在国图度过*\n![国图](/myblog/img/guotu.jpg)\n*今年又滑了一次雪*\n![滑雪一](/myblog/img/huaxue1.jpg)\n![滑雪二](/myblog/img/huaxue2.jpg)\n![滑雪三](/myblog/img/huaxue3.jpg)\n![滑雪四](/myblog/img/huaxue4.jpg)\n","slug":"20170103","published":1,"updated":"2019-07-03T03:52:29.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlb00012oi8q0d6pmws","content":"<h2 id=\"2016年是生命中感觉过得最快的一年\"><a href=\"#2016年是生命中感觉过得最快的一年\" class=\"headerlink\" title=\"2016年是生命中感觉过得最快的一年\"></a>2016年是生命中感觉过得最快的一年</h2><p><em>今年休闲时间有很多是在国图度过</em><br><img src=\"/myblog/img/guotu.jpg\" alt=\"国图\"><br><em>今年又滑了一次雪</em><br><img src=\"/myblog/img/huaxue1.jpg\" alt=\"滑雪一\"><br><img src=\"/myblog/img/huaxue2.jpg\" alt=\"滑雪二\"><br><img src=\"/myblog/img/huaxue3.jpg\" alt=\"滑雪三\"><br><img src=\"/myblog/img/huaxue4.jpg\" alt=\"滑雪四\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2016年是生命中感觉过得最快的一年\"><a href=\"#2016年是生命中感觉过得最快的一年\" class=\"headerlink\" title=\"2016年是生命中感觉过得最快的一年\"></a>2016年是生命中感觉过得最快的一年</h2><p><em>今年休闲时间有很多是在国图度过</em><br><img src=\"/myblog/img/guotu.jpg\" alt=\"国图\"><br><em>今年又滑了一次雪</em><br><img src=\"/myblog/img/huaxue1.jpg\" alt=\"滑雪一\"><br><img src=\"/myblog/img/huaxue2.jpg\" alt=\"滑雪二\"><br><img src=\"/myblog/img/huaxue3.jpg\" alt=\"滑雪三\"><br><img src=\"/myblog/img/huaxue4.jpg\" alt=\"滑雪四\"></p>\n"},{"title":"无题","date":"2017-01-04T02:53:46.000Z","_content":"","source":"_posts/20170104.md","raw":"---\ntitle: 无题\ndate: 2017-01-04 10:53:46\ntags:\n---\n","slug":"20170104","published":1,"updated":"2019-07-03T03:52:29.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlc00022oi8wate2jss","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"还有几天就要2017了","date":"2016-12-27T06:26:41.000Z","_content":"\n### 2016年是感觉过得最快的一年\n也许真的是上年纪了，感觉时间过得越来越快。\n-------------\n\n","source":"_posts/20161227.md","raw":"---\ntitle: 还有几天就要2017了\ndate: 2016-12-27 14:26:41\ntags: 日志  感悟 生活\n---\n\n### 2016年是感觉过得最快的一年\n也许真的是上年纪了，感觉时间过得越来越快。\n-------------\n\n","slug":"20161227","published":1,"updated":"2019-07-03T03:52:29.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zld00032oi89n5ty6gk","content":"<h3 id=\"2016年是感觉过得最快的一年\"><a href=\"#2016年是感觉过得最快的一年\" class=\"headerlink\" title=\"2016年是感觉过得最快的一年\"></a>2016年是感觉过得最快的一年</h3><h2 id=\"也许真的是上年纪了，感觉时间过得越来越快。\"><a href=\"#也许真的是上年纪了，感觉时间过得越来越快。\" class=\"headerlink\" title=\"也许真的是上年纪了，感觉时间过得越来越快。\"></a>也许真的是上年纪了，感觉时间过得越来越快。</h2>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"2016年是感觉过得最快的一年\"><a href=\"#2016年是感觉过得最快的一年\" class=\"headerlink\" title=\"2016年是感觉过得最快的一年\"></a>2016年是感觉过得最快的一年</h3><h2 id=\"也许真的是上年纪了，感觉时间过得越来越快。\"><a href=\"#也许真的是上年纪了，感觉时间过得越来越快。\" class=\"headerlink\" title=\"也许真的是上年纪了，感觉时间过得越来越快。\"></a>也许真的是上年纪了，感觉时间过得越来越快。</h2>"},{"title":"未雪","date":"2017-01-16T13:19:54.000Z","_content":"\n## 今天早上貌似要下雪  结果没有下大就停了\n\n\n1. 最近看了下微信小程序的开发  以后可以做一个小demo出来\n2. 周末看了一本  叫做 《Linux 就是这个范儿》的书觉得很不错  以后需要多多研究一下Linux\n3. 神经网络也需要多看看","source":"_posts/20170116.md","raw":"---\ntitle: 未雪\ndate: 2017-01-16 21:19:54\ntags:\n---\n\n## 今天早上貌似要下雪  结果没有下大就停了\n\n\n1. 最近看了下微信小程序的开发  以后可以做一个小demo出来\n2. 周末看了一本  叫做 《Linux 就是这个范儿》的书觉得很不错  以后需要多多研究一下Linux\n3. 神经网络也需要多看看","slug":"20170116","published":1,"updated":"2019-07-03T03:52:29.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zle00042oi8grf7hduv","content":"<h2 id=\"今天早上貌似要下雪-结果没有下大就停了\"><a href=\"#今天早上貌似要下雪-结果没有下大就停了\" class=\"headerlink\" title=\"今天早上貌似要下雪  结果没有下大就停了\"></a>今天早上貌似要下雪  结果没有下大就停了</h2><ol>\n<li>最近看了下微信小程序的开发  以后可以做一个小demo出来</li>\n<li>周末看了一本  叫做 《Linux 就是这个范儿》的书觉得很不错  以后需要多多研究一下Linux</li>\n<li>神经网络也需要多看看</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"今天早上貌似要下雪-结果没有下大就停了\"><a href=\"#今天早上貌似要下雪-结果没有下大就停了\" class=\"headerlink\" title=\"今天早上貌似要下雪  结果没有下大就停了\"></a>今天早上貌似要下雪  结果没有下大就停了</h2><ol>\n<li>最近看了下微信小程序的开发  以后可以做一个小demo出来</li>\n<li>周末看了一本  叫做 《Linux 就是这个范儿》的书觉得很不错  以后需要多多研究一下Linux</li>\n<li>神经网络也需要多看看</li>\n</ol>\n"},{"title":"离歌","date":"2017-01-15T12:39:13.000Z","_content":"\n## 离歌\n\n一开始我只相信   伟大的是感情\n最后我无力的看清  强悍的是命运\n\n\n周末突然发现信乐团的歌都很有张力\n\n1. One Night in BeiJIng\n2. 离歌\n3. 死了都要爱\n\n","source":"_posts/20170115.md","raw":"---\ntitle: 离歌\ndate: 2017-01-15 20:39:13\ntags:\n---\n\n## 离歌\n\n一开始我只相信   伟大的是感情\n最后我无力的看清  强悍的是命运\n\n\n周末突然发现信乐团的歌都很有张力\n\n1. One Night in BeiJIng\n2. 离歌\n3. 死了都要爱\n\n","slug":"20170115","published":1,"updated":"2019-07-03T03:52:29.680Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlh00062oi8ordz9fif","content":"<h2 id=\"离歌\"><a href=\"#离歌\" class=\"headerlink\" title=\"离歌\"></a>离歌</h2><p>一开始我只相信   伟大的是感情<br>最后我无力的看清  强悍的是命运</p>\n<p>周末突然发现信乐团的歌都很有张力</p>\n<ol>\n<li>One Night in BeiJIng</li>\n<li>离歌</li>\n<li>死了都要爱</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"离歌\"><a href=\"#离歌\" class=\"headerlink\" title=\"离歌\"></a>离歌</h2><p>一开始我只相信   伟大的是感情<br>最后我无力的看清  强悍的是命运</p>\n<p>周末突然发现信乐团的歌都很有张力</p>\n<ol>\n<li>One Night in BeiJIng</li>\n<li>离歌</li>\n<li>死了都要爱</li>\n</ol>\n"},{"title":"人工智能","date":"2017-01-17T09:26:11.000Z","_content":"考虑到人工智能如此受关注，斯坦福大学的专家最近撰写的一份智能研究报告得出结论：“现在到2030年人工智能可能会出现越来越有用的应用，有可能给我们的社会和经济带来深远的积极影响，”也就不足为奇了。此文着重介绍15个知名度最大的开源人工智能项目。\n\n1. Caffe\n\nCaffe是加州大学伯克利分校攻读博士学位者的杰作，这是一种深度学习框架，基于表达式架构和可扩展代码。速度快是它赖以成名的特点，因而在研究人员和企业用户当中都备受欢迎。据官方网站声称，仅仅使用一个英伟达K40 GPU，它在短短一天内就能够处理6000多万个图像。它由伯克利视觉和学习中心(BVLC)管理，英伟达和亚马逊等公司提供了拨款，支持它的发展。\n\n相关链接：http://caffe.berkeleyvision.org\n\n2. CNTK\n\nCNTK的全称是计算网络工具包，它是微软的开源人工智能工具之一。它声称拥有出众的性能，无论在只有一个CPU的系统上运行，还是在拥有多个GPU的多台机器上运行，都是如此。微软主要用它来研究语音识别，但是它同样适用于其他应用领域，比如机器翻译、图像识别、图像字幕、文本处理、语言理解和语言建模。\n\n相关链接：https://www.cntk.ai\n\n3. Deeplearning4j\n\nDeeplearning4j是一种面向Java虚拟机(JVM)的开源深度学习库。它在分布式环境中运行，可与Hadoop和Apache Spark整合起来。它让用户可以配置深度神经网络，与Java、Scala及其他JVM语言兼容。\n\n该项目由一家名为Skymind的商业公司管理，该公司提供收费的支持、培训和Deeplearning4j的企业发行版。\n\n相关链接：http://deeplearning4j.org\n\n4. 分布式机器学习工具包\n\n与CNTK一样，分布式机器学习工具包(DMTK)是微软的开源人工智能工具之一。它是为大数据应用领域设计，旨在更快地训练人工智能系统。它包括三大部分：DMTK框架、LightLDA主题模型算法以及分布式(Multisense)单词嵌入算法。微软声称，在8个集群机器上，它能够“针对拥有1000多亿个权标的文档集合，训练拥有100万个主题和1000万个单词词汇表(共有10万亿个参数)的主题模型，”这个成绩是其他工具无法比拟的，这也证明了DMTK的速度有多快。\n\n相关链接：http://www.dmtk.io\n\n5. H2O\n\nH2O更加专注于人工智能在企业领域的应用，而不是在研究领域的应用，它的用户包括诸多大公司：第一资本、思科、尼尔森Catalina、贝宝及Transamerica。它声称让任何人都可以使用机器学习和预测分析的强大功能，解决业务问题。它可用于预测建模、风险及欺诈分析、保险分析、广告技术、医疗保健和客户情报。\n\n它有两种开源版本：标准的H2O和Sparkling Water，后者与Apache Spark集成起来。它还提供收费的企业支持。\n\n相关链接：http://www.h2o.ai\n\n6.  Mahout\n\nMahout是Apache基金会下面的一个项目，是一种开源机器学习框架。据官方网站声称，它提供三种主要的特性：用于构建可扩展算法的编程环境、面向Spark和H2O等工具的预制算法，以及名为Samsara的向量数学试验环境。使用Mahout的公司包括：Adobe、埃森哲、Foursquare、英特尔、领英、推特、雅虎及其他许多公司。可通过官方网站上所列的第三方获得专业支持。\n\n相关链接：http://mahout.apache.org\n\n7. MLlib\n\nApache Spark以速度快著称，它已成为最流行的大数据处理工具之一。MLlib是Spark的可扩展机器学习库。它与Hadoop整合起来，可与NumPy和R协同操作。它包括一大批机器学习算法，可用于分类、回归、决策树、推荐、聚类、主题建模、特性转换、模型评估、机器学习管道构建、机器学习持久性、生存分析、频繁项集、顺序模式挖掘、分布式线性代数和统计。\n\n相关链接：https://spark.apache.org/mllib/\n\n8. NuPIC\n\nNuPIC由一家名为Numenta的公司管理，这是一种开源人工智能项目，基于一种名为分层式即时记忆(即HTM)的理论。实际上，HTM试图建立一种模仿人类大脑新皮层而建的计算机系统。目的在于制造“处理许多认知任务时接近或胜过人类表现”的机器。\n\n除了开源许可证外，Numenta还提供采用商业许可证的NuPic，它还提供作为它技术底层的专利方面的许可证。\n\n相关链接：http://numenta.org\n\n9. OpenNN\n\nOpenNN为深入了解人工智能的研究人员和开发人员而设计，这是一种用于实现神经网络的C++编程库。主要特性包括：深度架构和卓越性能。官方网站上有全面的说明文档，包括解释神经网络基础知识的入门教程。可通过Artelnics获得OpenNN的收费支持，总部位于西班牙的这家公司主攻预测分析。\n\n相关链接：http://www.opennn.net\n\n10. OpenCyc\n\nOpenCyc由一家名为Cycorp的公司开发，它让用户可以访问Cyc知识库和常识推理引擎。它包括239000多个术语、约2093000个三元组以及大约69000个owl:sameAs链接(指向外部语义数据命名空间)。它用于丰富域名建模、语义数据整合、文本理解、特定领域专家系统和游戏人工智能。这家公司还提供Cyc的另外两个版本：一个是非开源免费版本，面向研究人员;另一个面向企业用户，需要收费。\n\n相关链接：http://www.cyc.com/platform/opencyc/\n\n11. Oryx 2\n\nOryx 2建立在Apache Spark和Kafka上，这是一种专门的应用开发框架，面向大规模的机器学习。它使用了一种独特的lambda架构，有三个层次。开发人员可使用Oryx 2来构建新的应用程序，它还包括一些预制应用程序，处理常见的大数据任务，比如协作过滤、分类、回归和聚类。大数据工具厂商Cloudera建立了最初的Oryx 1项目，一直大力参与持续开发工作。\n\n相关链接：http://oryx.io\n\n12. PredictionIO\n\n今年2月份，Salesforce收购了PredictionIO，后来在7月份， 它把该平台连同商标一起捐献给了Apache基金会，该基金会将它列为孵化器项目。所以，虽然Salesforce使用PredictionIO技术来完善自己的机器学习功能，但是开源版本方面的工作也会继续下去。它可以帮助用户构建拥有机器学习功能的预测引擎，这些功能可用来部署实时响应动态查询的Web服务。\n\n相关链接：https://prediction.io\n\n13. SystemML\n\nSystemML最初由IBM开发，现在它是Apache旗下的一个大数据项目。它提供了一种高度可扩展的平台，可以实施用R或类似Python的语法编写的高级运算和算法。企业已经在用它来跟踪汽车维修方面的客户服务，引导机场客流量，或者将社交媒体数据与银行客户联系起来。它可以在Spark或Hadoop上运行。\n\n相关链接：http://systemml.apache.org\n\n14. TensorFlow\n\nTensorFlow是谷歌的开源人工智能工具之一。它提供了用于数字计算的库，使用数据流图。它可以在众多不同的搭载单一或多个CPU和GPU的系统上运行，甚至可以在移动设备上运行。它拥有深度灵活性、真正的可移植性、自动差分功能，并支持Python和C++。官方网站上列有非常丰富的教程和实用文章，可供有兴趣使用或扩展其功能的开发人员或研究人员使用。\n\n相关链接：https://www.tensorflow.org\n\n15. Torch\n\nTorch自称是“一种科学计算框架，广泛支持把GPU放在首位的机器学习算法。”这里的重点在于灵活性和速度。此外，很容易与众多方面的软件包结合使用：机器学习、计算机视觉、信号处理、并行处理、图像、视频、音频和网络。它依赖一种名为LuaJIT的脚本语言，这种语言基于Lua。\n\n相关链接：http://torch.ch\n\n\n","source":"_posts/20170117.md","raw":"---\ntitle: 人工智能\ndate: 2017-01-17 17:26:11\ntags:\n---\n考虑到人工智能如此受关注，斯坦福大学的专家最近撰写的一份智能研究报告得出结论：“现在到2030年人工智能可能会出现越来越有用的应用，有可能给我们的社会和经济带来深远的积极影响，”也就不足为奇了。此文着重介绍15个知名度最大的开源人工智能项目。\n\n1. Caffe\n\nCaffe是加州大学伯克利分校攻读博士学位者的杰作，这是一种深度学习框架，基于表达式架构和可扩展代码。速度快是它赖以成名的特点，因而在研究人员和企业用户当中都备受欢迎。据官方网站声称，仅仅使用一个英伟达K40 GPU，它在短短一天内就能够处理6000多万个图像。它由伯克利视觉和学习中心(BVLC)管理，英伟达和亚马逊等公司提供了拨款，支持它的发展。\n\n相关链接：http://caffe.berkeleyvision.org\n\n2. CNTK\n\nCNTK的全称是计算网络工具包，它是微软的开源人工智能工具之一。它声称拥有出众的性能，无论在只有一个CPU的系统上运行，还是在拥有多个GPU的多台机器上运行，都是如此。微软主要用它来研究语音识别，但是它同样适用于其他应用领域，比如机器翻译、图像识别、图像字幕、文本处理、语言理解和语言建模。\n\n相关链接：https://www.cntk.ai\n\n3. Deeplearning4j\n\nDeeplearning4j是一种面向Java虚拟机(JVM)的开源深度学习库。它在分布式环境中运行，可与Hadoop和Apache Spark整合起来。它让用户可以配置深度神经网络，与Java、Scala及其他JVM语言兼容。\n\n该项目由一家名为Skymind的商业公司管理，该公司提供收费的支持、培训和Deeplearning4j的企业发行版。\n\n相关链接：http://deeplearning4j.org\n\n4. 分布式机器学习工具包\n\n与CNTK一样，分布式机器学习工具包(DMTK)是微软的开源人工智能工具之一。它是为大数据应用领域设计，旨在更快地训练人工智能系统。它包括三大部分：DMTK框架、LightLDA主题模型算法以及分布式(Multisense)单词嵌入算法。微软声称，在8个集群机器上，它能够“针对拥有1000多亿个权标的文档集合，训练拥有100万个主题和1000万个单词词汇表(共有10万亿个参数)的主题模型，”这个成绩是其他工具无法比拟的，这也证明了DMTK的速度有多快。\n\n相关链接：http://www.dmtk.io\n\n5. H2O\n\nH2O更加专注于人工智能在企业领域的应用，而不是在研究领域的应用，它的用户包括诸多大公司：第一资本、思科、尼尔森Catalina、贝宝及Transamerica。它声称让任何人都可以使用机器学习和预测分析的强大功能，解决业务问题。它可用于预测建模、风险及欺诈分析、保险分析、广告技术、医疗保健和客户情报。\n\n它有两种开源版本：标准的H2O和Sparkling Water，后者与Apache Spark集成起来。它还提供收费的企业支持。\n\n相关链接：http://www.h2o.ai\n\n6.  Mahout\n\nMahout是Apache基金会下面的一个项目，是一种开源机器学习框架。据官方网站声称，它提供三种主要的特性：用于构建可扩展算法的编程环境、面向Spark和H2O等工具的预制算法，以及名为Samsara的向量数学试验环境。使用Mahout的公司包括：Adobe、埃森哲、Foursquare、英特尔、领英、推特、雅虎及其他许多公司。可通过官方网站上所列的第三方获得专业支持。\n\n相关链接：http://mahout.apache.org\n\n7. MLlib\n\nApache Spark以速度快著称，它已成为最流行的大数据处理工具之一。MLlib是Spark的可扩展机器学习库。它与Hadoop整合起来，可与NumPy和R协同操作。它包括一大批机器学习算法，可用于分类、回归、决策树、推荐、聚类、主题建模、特性转换、模型评估、机器学习管道构建、机器学习持久性、生存分析、频繁项集、顺序模式挖掘、分布式线性代数和统计。\n\n相关链接：https://spark.apache.org/mllib/\n\n8. NuPIC\n\nNuPIC由一家名为Numenta的公司管理，这是一种开源人工智能项目，基于一种名为分层式即时记忆(即HTM)的理论。实际上，HTM试图建立一种模仿人类大脑新皮层而建的计算机系统。目的在于制造“处理许多认知任务时接近或胜过人类表现”的机器。\n\n除了开源许可证外，Numenta还提供采用商业许可证的NuPic，它还提供作为它技术底层的专利方面的许可证。\n\n相关链接：http://numenta.org\n\n9. OpenNN\n\nOpenNN为深入了解人工智能的研究人员和开发人员而设计，这是一种用于实现神经网络的C++编程库。主要特性包括：深度架构和卓越性能。官方网站上有全面的说明文档，包括解释神经网络基础知识的入门教程。可通过Artelnics获得OpenNN的收费支持，总部位于西班牙的这家公司主攻预测分析。\n\n相关链接：http://www.opennn.net\n\n10. OpenCyc\n\nOpenCyc由一家名为Cycorp的公司开发，它让用户可以访问Cyc知识库和常识推理引擎。它包括239000多个术语、约2093000个三元组以及大约69000个owl:sameAs链接(指向外部语义数据命名空间)。它用于丰富域名建模、语义数据整合、文本理解、特定领域专家系统和游戏人工智能。这家公司还提供Cyc的另外两个版本：一个是非开源免费版本，面向研究人员;另一个面向企业用户，需要收费。\n\n相关链接：http://www.cyc.com/platform/opencyc/\n\n11. Oryx 2\n\nOryx 2建立在Apache Spark和Kafka上，这是一种专门的应用开发框架，面向大规模的机器学习。它使用了一种独特的lambda架构，有三个层次。开发人员可使用Oryx 2来构建新的应用程序，它还包括一些预制应用程序，处理常见的大数据任务，比如协作过滤、分类、回归和聚类。大数据工具厂商Cloudera建立了最初的Oryx 1项目，一直大力参与持续开发工作。\n\n相关链接：http://oryx.io\n\n12. PredictionIO\n\n今年2月份，Salesforce收购了PredictionIO，后来在7月份， 它把该平台连同商标一起捐献给了Apache基金会，该基金会将它列为孵化器项目。所以，虽然Salesforce使用PredictionIO技术来完善自己的机器学习功能，但是开源版本方面的工作也会继续下去。它可以帮助用户构建拥有机器学习功能的预测引擎，这些功能可用来部署实时响应动态查询的Web服务。\n\n相关链接：https://prediction.io\n\n13. SystemML\n\nSystemML最初由IBM开发，现在它是Apache旗下的一个大数据项目。它提供了一种高度可扩展的平台，可以实施用R或类似Python的语法编写的高级运算和算法。企业已经在用它来跟踪汽车维修方面的客户服务，引导机场客流量，或者将社交媒体数据与银行客户联系起来。它可以在Spark或Hadoop上运行。\n\n相关链接：http://systemml.apache.org\n\n14. TensorFlow\n\nTensorFlow是谷歌的开源人工智能工具之一。它提供了用于数字计算的库，使用数据流图。它可以在众多不同的搭载单一或多个CPU和GPU的系统上运行，甚至可以在移动设备上运行。它拥有深度灵活性、真正的可移植性、自动差分功能，并支持Python和C++。官方网站上列有非常丰富的教程和实用文章，可供有兴趣使用或扩展其功能的开发人员或研究人员使用。\n\n相关链接：https://www.tensorflow.org\n\n15. Torch\n\nTorch自称是“一种科学计算框架，广泛支持把GPU放在首位的机器学习算法。”这里的重点在于灵活性和速度。此外，很容易与众多方面的软件包结合使用：机器学习、计算机视觉、信号处理、并行处理、图像、视频、音频和网络。它依赖一种名为LuaJIT的脚本语言，这种语言基于Lua。\n\n相关链接：http://torch.ch\n\n\n","slug":"20170117","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zli00072oi8hotbuwd8","content":"<p>考虑到人工智能如此受关注，斯坦福大学的专家最近撰写的一份智能研究报告得出结论：“现在到2030年人工智能可能会出现越来越有用的应用，有可能给我们的社会和经济带来深远的积极影响，”也就不足为奇了。此文着重介绍15个知名度最大的开源人工智能项目。</p>\n<ol>\n<li>Caffe</li>\n</ol>\n<p>Caffe是加州大学伯克利分校攻读博士学位者的杰作，这是一种深度学习框架，基于表达式架构和可扩展代码。速度快是它赖以成名的特点，因而在研究人员和企业用户当中都备受欢迎。据官方网站声称，仅仅使用一个英伟达K40 GPU，它在短短一天内就能够处理6000多万个图像。它由伯克利视觉和学习中心(BVLC)管理，英伟达和亚马逊等公司提供了拨款，支持它的发展。</p>\n<p>相关链接：<a href=\"http://caffe.berkeleyvision.org\" target=\"_blank\" rel=\"noopener\">http://caffe.berkeleyvision.org</a></p>\n<ol start=\"2\">\n<li>CNTK</li>\n</ol>\n<p>CNTK的全称是计算网络工具包，它是微软的开源人工智能工具之一。它声称拥有出众的性能，无论在只有一个CPU的系统上运行，还是在拥有多个GPU的多台机器上运行，都是如此。微软主要用它来研究语音识别，但是它同样适用于其他应用领域，比如机器翻译、图像识别、图像字幕、文本处理、语言理解和语言建模。</p>\n<p>相关链接：<a href=\"https://www.cntk.ai\" target=\"_blank\" rel=\"noopener\">https://www.cntk.ai</a></p>\n<ol start=\"3\">\n<li>Deeplearning4j</li>\n</ol>\n<p>Deeplearning4j是一种面向Java虚拟机(JVM)的开源深度学习库。它在分布式环境中运行，可与Hadoop和Apache Spark整合起来。它让用户可以配置深度神经网络，与Java、Scala及其他JVM语言兼容。</p>\n<p>该项目由一家名为Skymind的商业公司管理，该公司提供收费的支持、培训和Deeplearning4j的企业发行版。</p>\n<p>相关链接：<a href=\"http://deeplearning4j.org\" target=\"_blank\" rel=\"noopener\">http://deeplearning4j.org</a></p>\n<ol start=\"4\">\n<li>分布式机器学习工具包</li>\n</ol>\n<p>与CNTK一样，分布式机器学习工具包(DMTK)是微软的开源人工智能工具之一。它是为大数据应用领域设计，旨在更快地训练人工智能系统。它包括三大部分：DMTK框架、LightLDA主题模型算法以及分布式(Multisense)单词嵌入算法。微软声称，在8个集群机器上，它能够“针对拥有1000多亿个权标的文档集合，训练拥有100万个主题和1000万个单词词汇表(共有10万亿个参数)的主题模型，”这个成绩是其他工具无法比拟的，这也证明了DMTK的速度有多快。</p>\n<p>相关链接：<a href=\"http://www.dmtk.io\" target=\"_blank\" rel=\"noopener\">http://www.dmtk.io</a></p>\n<ol start=\"5\">\n<li>H2O</li>\n</ol>\n<p>H2O更加专注于人工智能在企业领域的应用，而不是在研究领域的应用，它的用户包括诸多大公司：第一资本、思科、尼尔森Catalina、贝宝及Transamerica。它声称让任何人都可以使用机器学习和预测分析的强大功能，解决业务问题。它可用于预测建模、风险及欺诈分析、保险分析、广告技术、医疗保健和客户情报。</p>\n<p>它有两种开源版本：标准的H2O和Sparkling Water，后者与Apache Spark集成起来。它还提供收费的企业支持。</p>\n<p>相关链接：<a href=\"http://www.h2o.ai\" target=\"_blank\" rel=\"noopener\">http://www.h2o.ai</a></p>\n<ol start=\"6\">\n<li>Mahout</li>\n</ol>\n<p>Mahout是Apache基金会下面的一个项目，是一种开源机器学习框架。据官方网站声称，它提供三种主要的特性：用于构建可扩展算法的编程环境、面向Spark和H2O等工具的预制算法，以及名为Samsara的向量数学试验环境。使用Mahout的公司包括：Adobe、埃森哲、Foursquare、英特尔、领英、推特、雅虎及其他许多公司。可通过官方网站上所列的第三方获得专业支持。</p>\n<p>相关链接：<a href=\"http://mahout.apache.org\" target=\"_blank\" rel=\"noopener\">http://mahout.apache.org</a></p>\n<ol start=\"7\">\n<li>MLlib</li>\n</ol>\n<p>Apache Spark以速度快著称，它已成为最流行的大数据处理工具之一。MLlib是Spark的可扩展机器学习库。它与Hadoop整合起来，可与NumPy和R协同操作。它包括一大批机器学习算法，可用于分类、回归、决策树、推荐、聚类、主题建模、特性转换、模型评估、机器学习管道构建、机器学习持久性、生存分析、频繁项集、顺序模式挖掘、分布式线性代数和统计。</p>\n<p>相关链接：<a href=\"https://spark.apache.org/mllib/\" target=\"_blank\" rel=\"noopener\">https://spark.apache.org/mllib/</a></p>\n<ol start=\"8\">\n<li>NuPIC</li>\n</ol>\n<p>NuPIC由一家名为Numenta的公司管理，这是一种开源人工智能项目，基于一种名为分层式即时记忆(即HTM)的理论。实际上，HTM试图建立一种模仿人类大脑新皮层而建的计算机系统。目的在于制造“处理许多认知任务时接近或胜过人类表现”的机器。</p>\n<p>除了开源许可证外，Numenta还提供采用商业许可证的NuPic，它还提供作为它技术底层的专利方面的许可证。</p>\n<p>相关链接：<a href=\"http://numenta.org\" target=\"_blank\" rel=\"noopener\">http://numenta.org</a></p>\n<ol start=\"9\">\n<li>OpenNN</li>\n</ol>\n<p>OpenNN为深入了解人工智能的研究人员和开发人员而设计，这是一种用于实现神经网络的C++编程库。主要特性包括：深度架构和卓越性能。官方网站上有全面的说明文档，包括解释神经网络基础知识的入门教程。可通过Artelnics获得OpenNN的收费支持，总部位于西班牙的这家公司主攻预测分析。</p>\n<p>相关链接：<a href=\"http://www.opennn.net\" target=\"_blank\" rel=\"noopener\">http://www.opennn.net</a></p>\n<ol start=\"10\">\n<li>OpenCyc</li>\n</ol>\n<p>OpenCyc由一家名为Cycorp的公司开发，它让用户可以访问Cyc知识库和常识推理引擎。它包括239000多个术语、约2093000个三元组以及大约69000个owl:sameAs链接(指向外部语义数据命名空间)。它用于丰富域名建模、语义数据整合、文本理解、特定领域专家系统和游戏人工智能。这家公司还提供Cyc的另外两个版本：一个是非开源免费版本，面向研究人员;另一个面向企业用户，需要收费。</p>\n<p>相关链接：<a href=\"http://www.cyc.com/platform/opencyc/\" target=\"_blank\" rel=\"noopener\">http://www.cyc.com/platform/opencyc/</a></p>\n<ol start=\"11\">\n<li>Oryx 2</li>\n</ol>\n<p>Oryx 2建立在Apache Spark和Kafka上，这是一种专门的应用开发框架，面向大规模的机器学习。它使用了一种独特的lambda架构，有三个层次。开发人员可使用Oryx 2来构建新的应用程序，它还包括一些预制应用程序，处理常见的大数据任务，比如协作过滤、分类、回归和聚类。大数据工具厂商Cloudera建立了最初的Oryx 1项目，一直大力参与持续开发工作。</p>\n<p>相关链接：<a href=\"http://oryx.io\" target=\"_blank\" rel=\"noopener\">http://oryx.io</a></p>\n<ol start=\"12\">\n<li>PredictionIO</li>\n</ol>\n<p>今年2月份，Salesforce收购了PredictionIO，后来在7月份， 它把该平台连同商标一起捐献给了Apache基金会，该基金会将它列为孵化器项目。所以，虽然Salesforce使用PredictionIO技术来完善自己的机器学习功能，但是开源版本方面的工作也会继续下去。它可以帮助用户构建拥有机器学习功能的预测引擎，这些功能可用来部署实时响应动态查询的Web服务。</p>\n<p>相关链接：<a href=\"https://prediction.io\" target=\"_blank\" rel=\"noopener\">https://prediction.io</a></p>\n<ol start=\"13\">\n<li>SystemML</li>\n</ol>\n<p>SystemML最初由IBM开发，现在它是Apache旗下的一个大数据项目。它提供了一种高度可扩展的平台，可以实施用R或类似Python的语法编写的高级运算和算法。企业已经在用它来跟踪汽车维修方面的客户服务，引导机场客流量，或者将社交媒体数据与银行客户联系起来。它可以在Spark或Hadoop上运行。</p>\n<p>相关链接：<a href=\"http://systemml.apache.org\" target=\"_blank\" rel=\"noopener\">http://systemml.apache.org</a></p>\n<ol start=\"14\">\n<li>TensorFlow</li>\n</ol>\n<p>TensorFlow是谷歌的开源人工智能工具之一。它提供了用于数字计算的库，使用数据流图。它可以在众多不同的搭载单一或多个CPU和GPU的系统上运行，甚至可以在移动设备上运行。它拥有深度灵活性、真正的可移植性、自动差分功能，并支持Python和C++。官方网站上列有非常丰富的教程和实用文章，可供有兴趣使用或扩展其功能的开发人员或研究人员使用。</p>\n<p>相关链接：<a href=\"https://www.tensorflow.org\" target=\"_blank\" rel=\"noopener\">https://www.tensorflow.org</a></p>\n<ol start=\"15\">\n<li>Torch</li>\n</ol>\n<p>Torch自称是“一种科学计算框架，广泛支持把GPU放在首位的机器学习算法。”这里的重点在于灵活性和速度。此外，很容易与众多方面的软件包结合使用：机器学习、计算机视觉、信号处理、并行处理、图像、视频、音频和网络。它依赖一种名为LuaJIT的脚本语言，这种语言基于Lua。</p>\n<p>相关链接：<a href=\"http://torch.ch\" target=\"_blank\" rel=\"noopener\">http://torch.ch</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>考虑到人工智能如此受关注，斯坦福大学的专家最近撰写的一份智能研究报告得出结论：“现在到2030年人工智能可能会出现越来越有用的应用，有可能给我们的社会和经济带来深远的积极影响，”也就不足为奇了。此文着重介绍15个知名度最大的开源人工智能项目。</p>\n<ol>\n<li>Caffe</li>\n</ol>\n<p>Caffe是加州大学伯克利分校攻读博士学位者的杰作，这是一种深度学习框架，基于表达式架构和可扩展代码。速度快是它赖以成名的特点，因而在研究人员和企业用户当中都备受欢迎。据官方网站声称，仅仅使用一个英伟达K40 GPU，它在短短一天内就能够处理6000多万个图像。它由伯克利视觉和学习中心(BVLC)管理，英伟达和亚马逊等公司提供了拨款，支持它的发展。</p>\n<p>相关链接：<a href=\"http://caffe.berkeleyvision.org\" target=\"_blank\" rel=\"noopener\">http://caffe.berkeleyvision.org</a></p>\n<ol start=\"2\">\n<li>CNTK</li>\n</ol>\n<p>CNTK的全称是计算网络工具包，它是微软的开源人工智能工具之一。它声称拥有出众的性能，无论在只有一个CPU的系统上运行，还是在拥有多个GPU的多台机器上运行，都是如此。微软主要用它来研究语音识别，但是它同样适用于其他应用领域，比如机器翻译、图像识别、图像字幕、文本处理、语言理解和语言建模。</p>\n<p>相关链接：<a href=\"https://www.cntk.ai\" target=\"_blank\" rel=\"noopener\">https://www.cntk.ai</a></p>\n<ol start=\"3\">\n<li>Deeplearning4j</li>\n</ol>\n<p>Deeplearning4j是一种面向Java虚拟机(JVM)的开源深度学习库。它在分布式环境中运行，可与Hadoop和Apache Spark整合起来。它让用户可以配置深度神经网络，与Java、Scala及其他JVM语言兼容。</p>\n<p>该项目由一家名为Skymind的商业公司管理，该公司提供收费的支持、培训和Deeplearning4j的企业发行版。</p>\n<p>相关链接：<a href=\"http://deeplearning4j.org\" target=\"_blank\" rel=\"noopener\">http://deeplearning4j.org</a></p>\n<ol start=\"4\">\n<li>分布式机器学习工具包</li>\n</ol>\n<p>与CNTK一样，分布式机器学习工具包(DMTK)是微软的开源人工智能工具之一。它是为大数据应用领域设计，旨在更快地训练人工智能系统。它包括三大部分：DMTK框架、LightLDA主题模型算法以及分布式(Multisense)单词嵌入算法。微软声称，在8个集群机器上，它能够“针对拥有1000多亿个权标的文档集合，训练拥有100万个主题和1000万个单词词汇表(共有10万亿个参数)的主题模型，”这个成绩是其他工具无法比拟的，这也证明了DMTK的速度有多快。</p>\n<p>相关链接：<a href=\"http://www.dmtk.io\" target=\"_blank\" rel=\"noopener\">http://www.dmtk.io</a></p>\n<ol start=\"5\">\n<li>H2O</li>\n</ol>\n<p>H2O更加专注于人工智能在企业领域的应用，而不是在研究领域的应用，它的用户包括诸多大公司：第一资本、思科、尼尔森Catalina、贝宝及Transamerica。它声称让任何人都可以使用机器学习和预测分析的强大功能，解决业务问题。它可用于预测建模、风险及欺诈分析、保险分析、广告技术、医疗保健和客户情报。</p>\n<p>它有两种开源版本：标准的H2O和Sparkling Water，后者与Apache Spark集成起来。它还提供收费的企业支持。</p>\n<p>相关链接：<a href=\"http://www.h2o.ai\" target=\"_blank\" rel=\"noopener\">http://www.h2o.ai</a></p>\n<ol start=\"6\">\n<li>Mahout</li>\n</ol>\n<p>Mahout是Apache基金会下面的一个项目，是一种开源机器学习框架。据官方网站声称，它提供三种主要的特性：用于构建可扩展算法的编程环境、面向Spark和H2O等工具的预制算法，以及名为Samsara的向量数学试验环境。使用Mahout的公司包括：Adobe、埃森哲、Foursquare、英特尔、领英、推特、雅虎及其他许多公司。可通过官方网站上所列的第三方获得专业支持。</p>\n<p>相关链接：<a href=\"http://mahout.apache.org\" target=\"_blank\" rel=\"noopener\">http://mahout.apache.org</a></p>\n<ol start=\"7\">\n<li>MLlib</li>\n</ol>\n<p>Apache Spark以速度快著称，它已成为最流行的大数据处理工具之一。MLlib是Spark的可扩展机器学习库。它与Hadoop整合起来，可与NumPy和R协同操作。它包括一大批机器学习算法，可用于分类、回归、决策树、推荐、聚类、主题建模、特性转换、模型评估、机器学习管道构建、机器学习持久性、生存分析、频繁项集、顺序模式挖掘、分布式线性代数和统计。</p>\n<p>相关链接：<a href=\"https://spark.apache.org/mllib/\" target=\"_blank\" rel=\"noopener\">https://spark.apache.org/mllib/</a></p>\n<ol start=\"8\">\n<li>NuPIC</li>\n</ol>\n<p>NuPIC由一家名为Numenta的公司管理，这是一种开源人工智能项目，基于一种名为分层式即时记忆(即HTM)的理论。实际上，HTM试图建立一种模仿人类大脑新皮层而建的计算机系统。目的在于制造“处理许多认知任务时接近或胜过人类表现”的机器。</p>\n<p>除了开源许可证外，Numenta还提供采用商业许可证的NuPic，它还提供作为它技术底层的专利方面的许可证。</p>\n<p>相关链接：<a href=\"http://numenta.org\" target=\"_blank\" rel=\"noopener\">http://numenta.org</a></p>\n<ol start=\"9\">\n<li>OpenNN</li>\n</ol>\n<p>OpenNN为深入了解人工智能的研究人员和开发人员而设计，这是一种用于实现神经网络的C++编程库。主要特性包括：深度架构和卓越性能。官方网站上有全面的说明文档，包括解释神经网络基础知识的入门教程。可通过Artelnics获得OpenNN的收费支持，总部位于西班牙的这家公司主攻预测分析。</p>\n<p>相关链接：<a href=\"http://www.opennn.net\" target=\"_blank\" rel=\"noopener\">http://www.opennn.net</a></p>\n<ol start=\"10\">\n<li>OpenCyc</li>\n</ol>\n<p>OpenCyc由一家名为Cycorp的公司开发，它让用户可以访问Cyc知识库和常识推理引擎。它包括239000多个术语、约2093000个三元组以及大约69000个owl:sameAs链接(指向外部语义数据命名空间)。它用于丰富域名建模、语义数据整合、文本理解、特定领域专家系统和游戏人工智能。这家公司还提供Cyc的另外两个版本：一个是非开源免费版本，面向研究人员;另一个面向企业用户，需要收费。</p>\n<p>相关链接：<a href=\"http://www.cyc.com/platform/opencyc/\" target=\"_blank\" rel=\"noopener\">http://www.cyc.com/platform/opencyc/</a></p>\n<ol start=\"11\">\n<li>Oryx 2</li>\n</ol>\n<p>Oryx 2建立在Apache Spark和Kafka上，这是一种专门的应用开发框架，面向大规模的机器学习。它使用了一种独特的lambda架构，有三个层次。开发人员可使用Oryx 2来构建新的应用程序，它还包括一些预制应用程序，处理常见的大数据任务，比如协作过滤、分类、回归和聚类。大数据工具厂商Cloudera建立了最初的Oryx 1项目，一直大力参与持续开发工作。</p>\n<p>相关链接：<a href=\"http://oryx.io\" target=\"_blank\" rel=\"noopener\">http://oryx.io</a></p>\n<ol start=\"12\">\n<li>PredictionIO</li>\n</ol>\n<p>今年2月份，Salesforce收购了PredictionIO，后来在7月份， 它把该平台连同商标一起捐献给了Apache基金会，该基金会将它列为孵化器项目。所以，虽然Salesforce使用PredictionIO技术来完善自己的机器学习功能，但是开源版本方面的工作也会继续下去。它可以帮助用户构建拥有机器学习功能的预测引擎，这些功能可用来部署实时响应动态查询的Web服务。</p>\n<p>相关链接：<a href=\"https://prediction.io\" target=\"_blank\" rel=\"noopener\">https://prediction.io</a></p>\n<ol start=\"13\">\n<li>SystemML</li>\n</ol>\n<p>SystemML最初由IBM开发，现在它是Apache旗下的一个大数据项目。它提供了一种高度可扩展的平台，可以实施用R或类似Python的语法编写的高级运算和算法。企业已经在用它来跟踪汽车维修方面的客户服务，引导机场客流量，或者将社交媒体数据与银行客户联系起来。它可以在Spark或Hadoop上运行。</p>\n<p>相关链接：<a href=\"http://systemml.apache.org\" target=\"_blank\" rel=\"noopener\">http://systemml.apache.org</a></p>\n<ol start=\"14\">\n<li>TensorFlow</li>\n</ol>\n<p>TensorFlow是谷歌的开源人工智能工具之一。它提供了用于数字计算的库，使用数据流图。它可以在众多不同的搭载单一或多个CPU和GPU的系统上运行，甚至可以在移动设备上运行。它拥有深度灵活性、真正的可移植性、自动差分功能，并支持Python和C++。官方网站上列有非常丰富的教程和实用文章，可供有兴趣使用或扩展其功能的开发人员或研究人员使用。</p>\n<p>相关链接：<a href=\"https://www.tensorflow.org\" target=\"_blank\" rel=\"noopener\">https://www.tensorflow.org</a></p>\n<ol start=\"15\">\n<li>Torch</li>\n</ol>\n<p>Torch自称是“一种科学计算框架，广泛支持把GPU放在首位的机器学习算法。”这里的重点在于灵活性和速度。此外，很容易与众多方面的软件包结合使用：机器学习、计算机视觉、信号处理、并行处理、图像、视频、音频和网络。它依赖一种名为LuaJIT的脚本语言，这种语言基于Lua。</p>\n<p>相关链接：<a href=\"http://torch.ch\" target=\"_blank\" rel=\"noopener\">http://torch.ch</a></p>\n"},{"title":"互联网名人汇","date":"2017-01-19T09:17:31.000Z","_content":"\n## “互联网之父”\n\n1. Google 全球副总裁 Vint Cerf    TCP/IP 协议和互联网架构的联合设计者之一\n\n2. *理查德·马修·斯托曼（Richard Matthew Stallman, RMS，生于1953年），自由软件运动的精神领袖、GNU计划以及自由软件基金会（Free Software Foundation）的创立者、著名黑客。他的主要成就包括Emacs及后来的GNU Emacs，GNU C 编译器及GNU 调试器。 他所写作的GNU通用公共许可证（GNU GPL）是世上最广为采用的自由软件许可证，为copyleft观念开拓出一条崭新的道路。*\n3. Jon Skeet 个人名望：程序技术问答网站Stack Overflow总排名第一的大神，每月的问答量保持在425个左右。  个人简介/主要荣誉：谷歌软件工程师，代表作有《深入理解C#(C# In Depth)》。\n4. Jeff Dean 个人名望：谷歌搜索索引技术的幕后大脑。\n5. Doug Cutting 个人名望：开发出开源全文检索引擎工具包Lucene\n6. Anders Hejlsberg 个人名望：创造了Turbo Pascal。\n7.Adam D’Angelo 个人名望：问答SNS网站Quora的创办人之一。","source":"_posts/20170119.md","raw":"---\ntitle: 互联网名人汇\ndate: 2017-01-19 17:17:31\ntags:\n---\n\n## “互联网之父”\n\n1. Google 全球副总裁 Vint Cerf    TCP/IP 协议和互联网架构的联合设计者之一\n\n2. *理查德·马修·斯托曼（Richard Matthew Stallman, RMS，生于1953年），自由软件运动的精神领袖、GNU计划以及自由软件基金会（Free Software Foundation）的创立者、著名黑客。他的主要成就包括Emacs及后来的GNU Emacs，GNU C 编译器及GNU 调试器。 他所写作的GNU通用公共许可证（GNU GPL）是世上最广为采用的自由软件许可证，为copyleft观念开拓出一条崭新的道路。*\n3. Jon Skeet 个人名望：程序技术问答网站Stack Overflow总排名第一的大神，每月的问答量保持在425个左右。  个人简介/主要荣誉：谷歌软件工程师，代表作有《深入理解C#(C# In Depth)》。\n4. Jeff Dean 个人名望：谷歌搜索索引技术的幕后大脑。\n5. Doug Cutting 个人名望：开发出开源全文检索引擎工具包Lucene\n6. Anders Hejlsberg 个人名望：创造了Turbo Pascal。\n7.Adam D’Angelo 个人名望：问答SNS网站Quora的创办人之一。","slug":"20170119","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlj00082oi8jx43yfey","content":"<h2 id=\"“互联网之父”\"><a href=\"#“互联网之父”\" class=\"headerlink\" title=\"“互联网之父”\"></a>“互联网之父”</h2><ol>\n<li><p>Google 全球副总裁 Vint Cerf    TCP/IP 协议和互联网架构的联合设计者之一</p>\n</li>\n<li><p><em>理查德·马修·斯托曼（Richard Matthew Stallman, RMS，生于1953年），自由软件运动的精神领袖、GNU计划以及自由软件基金会（Free Software Foundation）的创立者、著名黑客。他的主要成就包括Emacs及后来的GNU Emacs，GNU C 编译器及GNU 调试器。 他所写作的GNU通用公共许可证（GNU GPL）是世上最广为采用的自由软件许可证，为copyleft观念开拓出一条崭新的道路。</em></p>\n</li>\n<li><p>Jon Skeet 个人名望：程序技术问答网站Stack Overflow总排名第一的大神，每月的问答量保持在425个左右。  个人简介/主要荣誉：谷歌软件工程师，代表作有《深入理解C#(C# In Depth)》。</p>\n</li>\n<li><p>Jeff Dean 个人名望：谷歌搜索索引技术的幕后大脑。</p>\n</li>\n<li><p>Doug Cutting 个人名望：开发出开源全文检索引擎工具包Lucene</p>\n</li>\n<li><p>Anders Hejlsberg 个人名望：创造了Turbo Pascal。</p>\n</li>\n<li><p>Adam D’Angelo 个人名望：问答SNS网站Quora的创办人之一。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"“互联网之父”\"><a href=\"#“互联网之父”\" class=\"headerlink\" title=\"“互联网之父”\"></a>“互联网之父”</h2><ol>\n<li><p>Google 全球副总裁 Vint Cerf    TCP/IP 协议和互联网架构的联合设计者之一</p>\n</li>\n<li><p><em>理查德·马修·斯托曼（Richard Matthew Stallman, RMS，生于1953年），自由软件运动的精神领袖、GNU计划以及自由软件基金会（Free Software Foundation）的创立者、著名黑客。他的主要成就包括Emacs及后来的GNU Emacs，GNU C 编译器及GNU 调试器。 他所写作的GNU通用公共许可证（GNU GPL）是世上最广为采用的自由软件许可证，为copyleft观念开拓出一条崭新的道路。</em></p>\n</li>\n<li><p>Jon Skeet 个人名望：程序技术问答网站Stack Overflow总排名第一的大神，每月的问答量保持在425个左右。  个人简介/主要荣誉：谷歌软件工程师，代表作有《深入理解C#(C# In Depth)》。</p>\n</li>\n<li><p>Jeff Dean 个人名望：谷歌搜索索引技术的幕后大脑。</p>\n</li>\n<li><p>Doug Cutting 个人名望：开发出开源全文检索引擎工具包Lucene</p>\n</li>\n<li><p>Anders Hejlsberg 个人名望：创造了Turbo Pascal。</p>\n</li>\n<li><p>Adam D’Angelo 个人名望：问答SNS网站Quora的创办人之一。</p>\n</li>\n</ol>\n"},{"title":"影子","date":"2017-01-22T13:49:53.000Z","_content":"\n##  昨天照了一张我的影子\n\n![影子](/myblog/img/shadow.jpg)\n","source":"_posts/20170122.md","raw":"---\ntitle: 影子\ndate: 2017-01-22 21:49:53\ntags:\n---\n\n##  昨天照了一张我的影子\n\n![影子](/myblog/img/shadow.jpg)\n","slug":"20170122","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlk000a2oi8jep67esw","content":"<h2 id=\"昨天照了一张我的影子\"><a href=\"#昨天照了一张我的影子\" class=\"headerlink\" title=\"昨天照了一张我的影子\"></a>昨天照了一张我的影子</h2><p><img src=\"/myblog/img/shadow.jpg\" alt=\"影子\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"昨天照了一张我的影子\"><a href=\"#昨天照了一张我的影子\" class=\"headerlink\" title=\"昨天照了一张我的影子\"></a>昨天照了一张我的影子</h2><p><img src=\"/myblog/img/shadow.jpg\" alt=\"影子\"></p>\n"},{"title":"2016年结束了，今晚坐上火车回去了","date":"2017-01-24T09:16:40.000Z","_content":"\n## 2016年是积淀的一年  2017或许也将是继续积淀的一年\n*希望2018年会是一个产出的年份*\n\n1. ................................\n2. ................................\n3. ...............................","source":"_posts/20170124.md","raw":"---\ntitle: 2016年结束了，今晚坐上火车回去了\ndate: 2017-01-24 17:16:40\ntags:\n---\n\n## 2016年是积淀的一年  2017或许也将是继续积淀的一年\n*希望2018年会是一个产出的年份*\n\n1. ................................\n2. ................................\n3. ...............................","slug":"20170124","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlm000b2oi82ejpl7qs","content":"<h2 id=\"2016年是积淀的一年-2017或许也将是继续积淀的一年\"><a href=\"#2016年是积淀的一年-2017或许也将是继续积淀的一年\" class=\"headerlink\" title=\"2016年是积淀的一年  2017或许也将是继续积淀的一年\"></a>2016年是积淀的一年  2017或许也将是继续积淀的一年</h2><p><em>希望2018年会是一个产出的年份</em></p>\n<ol>\n<li>…………………………..</li>\n<li>…………………………..</li>\n<li>………………………….</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"2016年是积淀的一年-2017或许也将是继续积淀的一年\"><a href=\"#2016年是积淀的一年-2017或许也将是继续积淀的一年\" class=\"headerlink\" title=\"2016年是积淀的一年  2017或许也将是继续积淀的一年\"></a>2016年是积淀的一年  2017或许也将是继续积淀的一年</h2><p><em>希望2018年会是一个产出的年份</em></p>\n<ol>\n<li>…………………………..</li>\n<li>…………………………..</li>\n<li>………………………….</li>\n</ol>\n"},{"title":"今天真是点背了","date":"2017-02-20T13:46:37.000Z","_content":"\n## 今天真是邪门了，手机坏了\n\nhttps://www.kaggle.com/\n\n数据挖掘和机器学习应用的顶级会议The Tenth ACM International Conference on Web Search and Data Mining （WSDM 2017）今年2月已经在英国剑桥圆满举行。正值WSDM十周年，会议上对WSDM的发展进行了回顾和展望。纵观过去十年的发展，WSDM已经成长为学术圈和工业界都十分倚重的经典跨界会议。不像KDD、WWW或者SIGIR，WSDM因为从最开始就由不少工业界的学术领导人发起并且长期引领，所以十分重视工业界的学术成果的展现。有不少经典的工业界文章在过去十年里，都是通过WSDM发表的。今年也不例外，因为WSDM的论文涵盖非常广泛的主题，而且一般的读者很难从浩如烟海的文献中即刻抓取到有用信息，这里笔者从80篇会议文章中精选出5篇有代表性的文章，为读者提供思路。\n\n1. Coursera (https://www.coursera.org/)\n2. edX (https://www.edx.org/)\n3. Udacity (https://www.udacity.com/)\n4. codecademy (https://www.codecademy.com/)\n5. 慕课网 (http://www.imooc.com/)\n6. 学堂在线 (https://www.xuetangx.com/)\n7. 学x在y分钟 (https://learnxinyminutes.com/)\n","source":"_posts/20170220.md","raw":"---\ntitle: 今天真是点背了 \ndate: 2017-02-20 21:46:37\ntags:\n---\n\n## 今天真是邪门了，手机坏了\n\nhttps://www.kaggle.com/\n\n数据挖掘和机器学习应用的顶级会议The Tenth ACM International Conference on Web Search and Data Mining （WSDM 2017）今年2月已经在英国剑桥圆满举行。正值WSDM十周年，会议上对WSDM的发展进行了回顾和展望。纵观过去十年的发展，WSDM已经成长为学术圈和工业界都十分倚重的经典跨界会议。不像KDD、WWW或者SIGIR，WSDM因为从最开始就由不少工业界的学术领导人发起并且长期引领，所以十分重视工业界的学术成果的展现。有不少经典的工业界文章在过去十年里，都是通过WSDM发表的。今年也不例外，因为WSDM的论文涵盖非常广泛的主题，而且一般的读者很难从浩如烟海的文献中即刻抓取到有用信息，这里笔者从80篇会议文章中精选出5篇有代表性的文章，为读者提供思路。\n\n1. Coursera (https://www.coursera.org/)\n2. edX (https://www.edx.org/)\n3. Udacity (https://www.udacity.com/)\n4. codecademy (https://www.codecademy.com/)\n5. 慕课网 (http://www.imooc.com/)\n6. 学堂在线 (https://www.xuetangx.com/)\n7. 学x在y分钟 (https://learnxinyminutes.com/)\n","slug":"20170220","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zln000c2oi8k8lgvfff","content":"<h2 id=\"今天真是邪门了，手机坏了\"><a href=\"#今天真是邪门了，手机坏了\" class=\"headerlink\" title=\"今天真是邪门了，手机坏了\"></a>今天真是邪门了，手机坏了</h2><p><a href=\"https://www.kaggle.com/\" target=\"_blank\" rel=\"noopener\">https://www.kaggle.com/</a></p>\n<p>数据挖掘和机器学习应用的顶级会议The Tenth ACM International Conference on Web Search and Data Mining （WSDM 2017）今年2月已经在英国剑桥圆满举行。正值WSDM十周年，会议上对WSDM的发展进行了回顾和展望。纵观过去十年的发展，WSDM已经成长为学术圈和工业界都十分倚重的经典跨界会议。不像KDD、WWW或者SIGIR，WSDM因为从最开始就由不少工业界的学术领导人发起并且长期引领，所以十分重视工业界的学术成果的展现。有不少经典的工业界文章在过去十年里，都是通过WSDM发表的。今年也不例外，因为WSDM的论文涵盖非常广泛的主题，而且一般的读者很难从浩如烟海的文献中即刻抓取到有用信息，这里笔者从80篇会议文章中精选出5篇有代表性的文章，为读者提供思路。</p>\n<ol>\n<li>Coursera (<a href=\"https://www.coursera.org/\" target=\"_blank\" rel=\"noopener\">https://www.coursera.org/</a>)</li>\n<li>edX (<a href=\"https://www.edx.org/\" target=\"_blank\" rel=\"noopener\">https://www.edx.org/</a>)</li>\n<li>Udacity (<a href=\"https://www.udacity.com/\" target=\"_blank\" rel=\"noopener\">https://www.udacity.com/</a>)</li>\n<li>codecademy (<a href=\"https://www.codecademy.com/\" target=\"_blank\" rel=\"noopener\">https://www.codecademy.com/</a>)</li>\n<li>慕课网 (<a href=\"http://www.imooc.com/\" target=\"_blank\" rel=\"noopener\">http://www.imooc.com/</a>)</li>\n<li>学堂在线 (<a href=\"https://www.xuetangx.com/\" target=\"_blank\" rel=\"noopener\">https://www.xuetangx.com/</a>)</li>\n<li>学x在y分钟 (<a href=\"https://learnxinyminutes.com/\" target=\"_blank\" rel=\"noopener\">https://learnxinyminutes.com/</a>)</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"今天真是邪门了，手机坏了\"><a href=\"#今天真是邪门了，手机坏了\" class=\"headerlink\" title=\"今天真是邪门了，手机坏了\"></a>今天真是邪门了，手机坏了</h2><p><a href=\"https://www.kaggle.com/\" target=\"_blank\" rel=\"noopener\">https://www.kaggle.com/</a></p>\n<p>数据挖掘和机器学习应用的顶级会议The Tenth ACM International Conference on Web Search and Data Mining （WSDM 2017）今年2月已经在英国剑桥圆满举行。正值WSDM十周年，会议上对WSDM的发展进行了回顾和展望。纵观过去十年的发展，WSDM已经成长为学术圈和工业界都十分倚重的经典跨界会议。不像KDD、WWW或者SIGIR，WSDM因为从最开始就由不少工业界的学术领导人发起并且长期引领，所以十分重视工业界的学术成果的展现。有不少经典的工业界文章在过去十年里，都是通过WSDM发表的。今年也不例外，因为WSDM的论文涵盖非常广泛的主题，而且一般的读者很难从浩如烟海的文献中即刻抓取到有用信息，这里笔者从80篇会议文章中精选出5篇有代表性的文章，为读者提供思路。</p>\n<ol>\n<li>Coursera (<a href=\"https://www.coursera.org/\" target=\"_blank\" rel=\"noopener\">https://www.coursera.org/</a>)</li>\n<li>edX (<a href=\"https://www.edx.org/\" target=\"_blank\" rel=\"noopener\">https://www.edx.org/</a>)</li>\n<li>Udacity (<a href=\"https://www.udacity.com/\" target=\"_blank\" rel=\"noopener\">https://www.udacity.com/</a>)</li>\n<li>codecademy (<a href=\"https://www.codecademy.com/\" target=\"_blank\" rel=\"noopener\">https://www.codecademy.com/</a>)</li>\n<li>慕课网 (<a href=\"http://www.imooc.com/\" target=\"_blank\" rel=\"noopener\">http://www.imooc.com/</a>)</li>\n<li>学堂在线 (<a href=\"https://www.xuetangx.com/\" target=\"_blank\" rel=\"noopener\">https://www.xuetangx.com/</a>)</li>\n<li>学x在y分钟 (<a href=\"https://learnxinyminutes.com/\" target=\"_blank\" rel=\"noopener\">https://learnxinyminutes.com/</a>)</li>\n</ol>\n"},{"title":"算法笔记","date":"2018-01-11T05:36:32.000Z","_content":"## 概述：R-B Tree，又称为“红黑树”\n红黑树的特性:\n（1）每个节点或者是黑色，或者是红色。\n（2）根节点是黑色。\n（3）每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]\n（4）如果一个节点是红色的，则它的子节点必须是黑色的。\n（5）从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。\n\n红黑树的操作：　左旋、右旋、添加、删除\n\n红黑树的应用比较广泛，主要是用它来存储有序的数据，它的时间复杂度是O(lgn)，效率非常之高。\n例如，Java集合中的TreeSet和TreeMap，C++ STL中的set、map，以及Linux虚拟内存的管理，都是通过红黑树去实现的。\n\n红黑树的时间复杂度为: O(lgn)\n下面通过“数学归纳法”对红黑树的时间复杂度进行证明。\n\n[java 中hashmap的实现](http://blog.csdn.net/carson_ho/article/details/79373134)\n\n## 加密算法(DES,AES,RSA,MD5,SHA1,Base64)比较和项目应用\n加密技术通常分为两大类:\"对称式\"和\"非对称式\"。\n\n### 对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\n\n### 非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为\"公钥\"和\"私钥\"，它们两个必需配对使用，否则不能打开加密文件。发送双方A,B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消 息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\n\n### 散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列(Hash)函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的\"散列\"或\"消息摘要\"(Message digest)。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\n\n \n\n### 对称性加密算法有：AES、DES、3DES\n用途：对称加密算法用来对敏感数据等信息进行加密\n\nDES（Data Encryption Standard）：数据加密标准，速度较快，适用于加密大量数据的场合。\n\n3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高。\n\nAES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高；AES是一个使用128为分组块的分组加密算法，分组块和128、192或256位的密钥一起作为输入，对4×4的字节数组上进行操作。众所周之AES是种十分高效的算法，尤其在8位架构中，这源于它面向字节的设计。AES 适用于8位的小型单片机或者普通的32位微处理器,并且适合用专门的硬件实现，硬件实现能够使其吞吐量（每秒可以到达的加密/解密bit数）达到十亿量级。同样，其也适用于RFID系统。\n\n \n\n### 非对称性算法有：RSA、DSA、ECC\n\nRSA：由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的。RSA在国外早已进入实用阶段，已研制出多种高速的RSA的专用芯片。\n\nDSA（Digital Signature Algorithm）：数字签名算法，是一种标准的 DSS（数字签名标准），严格来说不算加密算法。\n\nECC（Elliptic Curves Cryptography）：椭圆曲线密码编码学。ECC和RSA相比，具有多方面的绝对优势，主要有：抗攻击性强。相同的密钥长度，其抗攻击性要强很多倍。计算量小，处理速度快。ECC总的速度比RSA、DSA要快得多。存储空间占用小。ECC的密钥尺寸和系统参数与RSA、DSA相比要小得多，意味着它所占的存贮空间要小得多。这对于加密算法在IC卡上的应用具有特别重要的意义。带宽要求低。当对长消息进行加解密时，三类密码系统有相同的带宽要求，但应用于短消息时ECC带宽要求却低得多。带宽要求低使ECC在无线网络领域具有广泛的应用前景。\n\n \n\n散列算法（签名算法）有：MD5、SHA1、HMAC\n用途：主要用于验证，防止信息被修。具体用途如：文件校验、数字签名、鉴权协议\n\nMD5：MD5是一种不可逆的加密算法，目前是最牢靠的加密算法之一，尚没有能够逆运算的程序被开发出来，它对应任何字符串都可以加密成一段唯一的固定长度的代码。\n\nSHA1：是由NISTNSA设计为同DSA一起使用的，它对长度小于264的输入，产生长度为160bit的散列值，因此抗穷举(brute-force)性更好。SHA-1设计时基于和MD4相同原理,并且模仿了该算法。SHA-1是由美国标准技术局（NIST）颁布的国家标准，是一种应用最为广泛的Hash函数算法，也是目前最先进的加密技术，被政府部门和私营业主用来处理敏感的信息。而SHA-1基于MD5，MD5又基于MD4。\n\nHMAC：是密钥相关的哈希运算消息认证码（Hash-based Message Authentication Code）,HMAC运算利用哈希算法，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。也就是说HMAC是需要一个密钥的。所以，HMAC_SHA1也是需要一个密钥的，而SHA1不需要。\n\n \n\n### 其他常用算法：\n\nBase64：其实不是安全领域下的加密解密算法，只能算是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，对数据内容进行编码来适合传输(可以对img图像编码用于传输)。这是一种可逆的编码方式。编码后的数据是一个字符串，其中包含的字符为：A-Z、a-z、0-9、+、/，共64个字符(26 + 26 + 10 + 1 + 1 = 64，其实是65个字符，“=”是填充字符。Base64要求把每三个8Bit的字节转换为四个6Bit的字节(3*8 = 4*6 = 24)，然后把6Bit再添两位高位0，组成四个8Bit的字节，也就是说，转换后的字符串理论上将要比原来的长1/3。原文的字节最后不够3个的地方用0来补足，转换时Base64编码用=号来代替。这就是为什么有些Base64编码会以一个或两个等号结束的原因，中间是不可能出现等号的，但等号最多只有两个。其实不用\"=\"也不耽误解码，之所以用\"=\"，可能是考虑到多段编码后的Base64字符串拼起来也不会引起混淆。)\nBase64编码是从二进制到字符的过程，像一些中文字符用不同的编码转为二进制时，产生的二进制是不一样的，所以最终产生的Base64字符也不一样。例如\"上网\"对应utf-8格式的Base64编码是\"5LiK572R\"， 对应GB2312格式的Base64编码是\"yc/N+A==\"。\n标准的Base64并不适合直接放在URL里传输，因为URL编码器会把标准Base64中的“/”和“+”字符变为形如“%XX”的形式，而这些“%”号在存入数据库时还需要再进行转换，因为ANSI SQL中已将“%”号用作通配符。\n为解决此问题，可采用一种用于URL的改进Base64编码，它不在末尾填充'='号，并将标准Base64中的“+”和“/”分别改成了“-”和“_”，这样就免去了在URL编解码和数据库存储时所要作的转换，避免了编码信息长度在此过程中的增加，并统一了数据库、表单等处对象标识符的格式。\n另有一种用于正则表达式的改进Base64变种，它将“+”和“/”改成了“!”和“-”，因为“+”，“*”以及前面在IRCu中用到的“[”和“]”在正则表达式中都可能具有特殊含义。\n此外还有一些变种，它们将“+/”改为“_-”或“._”（用作编程语言中的标识符名称）或“.-”（用于XML中的Nmtoken）甚至“_:”（用于XML中的Name）。\n\n​HTTPS（全称：Hypertext Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL(SSL使用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。)，因此加密的详细内容就需要SSL。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间），提供了身份验证与加密通讯方法，现在它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。\n\n \n\n## 项目应用总结：\n1. 加密算法是可逆的，用来对敏感数据进行保护。散列算法(签名算法、哈希算法)是不可逆的，主要用于身份验证。\n2. 对称加密算法使用同一个密匙加密和解密，速度快，适合给大量数据加密。对称加密客户端和服务端使用同一个密匙，存在被抓包破解的风险。\n3. 非对称加密算法使用公钥加密，私钥解密，私钥签名，公钥验签。安全性比对称加密高，但速度较慢。非对称加密使用两个密匙，服务端和客户端密匙不一样，私钥放在服务端，黑客一般是拿不到的，安全性高。\n4. Base64不是安全领域下的加解密算法，只是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，特别适合在http，mime协议下的网络快速传输数据。UTF-8和GBK中文的Base64编码结果是不同的。采用Base64编码不仅比较简短，同时也具有不可读性，即所编码的数据不会被人用肉眼所直接看到，但这种方式很初级，很简单。Base64可以对图片文件进行编码传输。\n5. https协议广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。\n6. 大量数据加密建议采用对称加密算法，提高加解密速度；小量的机密数据，可以采用非对称加密算法。在实际的操作过程中，我们通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。\n7. MD5标准密钥长度128位（128位是指二进制位。二进制太长，所以一般都改写成16进制，每一位16进制数可以代替4位二进制数，所以128位二进制数写成16进制就变成了128/4=32位。16位加密就是从32位MD5散列中把中间16位提取出来）；sha1标准密钥长度160位(比MD5摘要长32位)，Base64转换后的字符串理论上将要比原来的长1/3。\n\n\n","source":"_posts/algorithm-tips.md","raw":"---\ntitle: 算法笔记\ndate: 2018-01-11 13:36:32\ntags:\n---\n## 概述：R-B Tree，又称为“红黑树”\n红黑树的特性:\n（1）每个节点或者是黑色，或者是红色。\n（2）根节点是黑色。\n（3）每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]\n（4）如果一个节点是红色的，则它的子节点必须是黑色的。\n（5）从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。\n\n红黑树的操作：　左旋、右旋、添加、删除\n\n红黑树的应用比较广泛，主要是用它来存储有序的数据，它的时间复杂度是O(lgn)，效率非常之高。\n例如，Java集合中的TreeSet和TreeMap，C++ STL中的set、map，以及Linux虚拟内存的管理，都是通过红黑树去实现的。\n\n红黑树的时间复杂度为: O(lgn)\n下面通过“数学归纳法”对红黑树的时间复杂度进行证明。\n\n[java 中hashmap的实现](http://blog.csdn.net/carson_ho/article/details/79373134)\n\n## 加密算法(DES,AES,RSA,MD5,SHA1,Base64)比较和项目应用\n加密技术通常分为两大类:\"对称式\"和\"非对称式\"。\n\n### 对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\n\n### 非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为\"公钥\"和\"私钥\"，它们两个必需配对使用，否则不能打开加密文件。发送双方A,B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消 息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\n\n### 散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列(Hash)函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的\"散列\"或\"消息摘要\"(Message digest)。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\n\n \n\n### 对称性加密算法有：AES、DES、3DES\n用途：对称加密算法用来对敏感数据等信息进行加密\n\nDES（Data Encryption Standard）：数据加密标准，速度较快，适用于加密大量数据的场合。\n\n3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高。\n\nAES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高；AES是一个使用128为分组块的分组加密算法，分组块和128、192或256位的密钥一起作为输入，对4×4的字节数组上进行操作。众所周之AES是种十分高效的算法，尤其在8位架构中，这源于它面向字节的设计。AES 适用于8位的小型单片机或者普通的32位微处理器,并且适合用专门的硬件实现，硬件实现能够使其吞吐量（每秒可以到达的加密/解密bit数）达到十亿量级。同样，其也适用于RFID系统。\n\n \n\n### 非对称性算法有：RSA、DSA、ECC\n\nRSA：由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的。RSA在国外早已进入实用阶段，已研制出多种高速的RSA的专用芯片。\n\nDSA（Digital Signature Algorithm）：数字签名算法，是一种标准的 DSS（数字签名标准），严格来说不算加密算法。\n\nECC（Elliptic Curves Cryptography）：椭圆曲线密码编码学。ECC和RSA相比，具有多方面的绝对优势，主要有：抗攻击性强。相同的密钥长度，其抗攻击性要强很多倍。计算量小，处理速度快。ECC总的速度比RSA、DSA要快得多。存储空间占用小。ECC的密钥尺寸和系统参数与RSA、DSA相比要小得多，意味着它所占的存贮空间要小得多。这对于加密算法在IC卡上的应用具有特别重要的意义。带宽要求低。当对长消息进行加解密时，三类密码系统有相同的带宽要求，但应用于短消息时ECC带宽要求却低得多。带宽要求低使ECC在无线网络领域具有广泛的应用前景。\n\n \n\n散列算法（签名算法）有：MD5、SHA1、HMAC\n用途：主要用于验证，防止信息被修。具体用途如：文件校验、数字签名、鉴权协议\n\nMD5：MD5是一种不可逆的加密算法，目前是最牢靠的加密算法之一，尚没有能够逆运算的程序被开发出来，它对应任何字符串都可以加密成一段唯一的固定长度的代码。\n\nSHA1：是由NISTNSA设计为同DSA一起使用的，它对长度小于264的输入，产生长度为160bit的散列值，因此抗穷举(brute-force)性更好。SHA-1设计时基于和MD4相同原理,并且模仿了该算法。SHA-1是由美国标准技术局（NIST）颁布的国家标准，是一种应用最为广泛的Hash函数算法，也是目前最先进的加密技术，被政府部门和私营业主用来处理敏感的信息。而SHA-1基于MD5，MD5又基于MD4。\n\nHMAC：是密钥相关的哈希运算消息认证码（Hash-based Message Authentication Code）,HMAC运算利用哈希算法，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。也就是说HMAC是需要一个密钥的。所以，HMAC_SHA1也是需要一个密钥的，而SHA1不需要。\n\n \n\n### 其他常用算法：\n\nBase64：其实不是安全领域下的加密解密算法，只能算是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，对数据内容进行编码来适合传输(可以对img图像编码用于传输)。这是一种可逆的编码方式。编码后的数据是一个字符串，其中包含的字符为：A-Z、a-z、0-9、+、/，共64个字符(26 + 26 + 10 + 1 + 1 = 64，其实是65个字符，“=”是填充字符。Base64要求把每三个8Bit的字节转换为四个6Bit的字节(3*8 = 4*6 = 24)，然后把6Bit再添两位高位0，组成四个8Bit的字节，也就是说，转换后的字符串理论上将要比原来的长1/3。原文的字节最后不够3个的地方用0来补足，转换时Base64编码用=号来代替。这就是为什么有些Base64编码会以一个或两个等号结束的原因，中间是不可能出现等号的，但等号最多只有两个。其实不用\"=\"也不耽误解码，之所以用\"=\"，可能是考虑到多段编码后的Base64字符串拼起来也不会引起混淆。)\nBase64编码是从二进制到字符的过程，像一些中文字符用不同的编码转为二进制时，产生的二进制是不一样的，所以最终产生的Base64字符也不一样。例如\"上网\"对应utf-8格式的Base64编码是\"5LiK572R\"， 对应GB2312格式的Base64编码是\"yc/N+A==\"。\n标准的Base64并不适合直接放在URL里传输，因为URL编码器会把标准Base64中的“/”和“+”字符变为形如“%XX”的形式，而这些“%”号在存入数据库时还需要再进行转换，因为ANSI SQL中已将“%”号用作通配符。\n为解决此问题，可采用一种用于URL的改进Base64编码，它不在末尾填充'='号，并将标准Base64中的“+”和“/”分别改成了“-”和“_”，这样就免去了在URL编解码和数据库存储时所要作的转换，避免了编码信息长度在此过程中的增加，并统一了数据库、表单等处对象标识符的格式。\n另有一种用于正则表达式的改进Base64变种，它将“+”和“/”改成了“!”和“-”，因为“+”，“*”以及前面在IRCu中用到的“[”和“]”在正则表达式中都可能具有特殊含义。\n此外还有一些变种，它们将“+/”改为“_-”或“._”（用作编程语言中的标识符名称）或“.-”（用于XML中的Nmtoken）甚至“_:”（用于XML中的Name）。\n\n​HTTPS（全称：Hypertext Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL(SSL使用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。)，因此加密的详细内容就需要SSL。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间），提供了身份验证与加密通讯方法，现在它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。\n\n \n\n## 项目应用总结：\n1. 加密算法是可逆的，用来对敏感数据进行保护。散列算法(签名算法、哈希算法)是不可逆的，主要用于身份验证。\n2. 对称加密算法使用同一个密匙加密和解密，速度快，适合给大量数据加密。对称加密客户端和服务端使用同一个密匙，存在被抓包破解的风险。\n3. 非对称加密算法使用公钥加密，私钥解密，私钥签名，公钥验签。安全性比对称加密高，但速度较慢。非对称加密使用两个密匙，服务端和客户端密匙不一样，私钥放在服务端，黑客一般是拿不到的，安全性高。\n4. Base64不是安全领域下的加解密算法，只是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，特别适合在http，mime协议下的网络快速传输数据。UTF-8和GBK中文的Base64编码结果是不同的。采用Base64编码不仅比较简短，同时也具有不可读性，即所编码的数据不会被人用肉眼所直接看到，但这种方式很初级，很简单。Base64可以对图片文件进行编码传输。\n5. https协议广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。\n6. 大量数据加密建议采用对称加密算法，提高加解密速度；小量的机密数据，可以采用非对称加密算法。在实际的操作过程中，我们通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。\n7. MD5标准密钥长度128位（128位是指二进制位。二进制太长，所以一般都改写成16进制，每一位16进制数可以代替4位二进制数，所以128位二进制数写成16进制就变成了128/4=32位。16位加密就是从32位MD5散列中把中间16位提取出来）；sha1标准密钥长度160位(比MD5摘要长32位)，Base64转换后的字符串理论上将要比原来的长1/3。\n\n\n","slug":"algorithm-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlo000d2oi8lz1ury05","content":"<h2 id=\"概述：R-B-Tree，又称为“红黑树”\"><a href=\"#概述：R-B-Tree，又称为“红黑树”\" class=\"headerlink\" title=\"概述：R-B Tree，又称为“红黑树”\"></a>概述：R-B Tree，又称为“红黑树”</h2><p>红黑树的特性:<br>（1）每个节点或者是黑色，或者是红色。<br>（2）根节点是黑色。<br>（3）每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]<br>（4）如果一个节点是红色的，则它的子节点必须是黑色的。<br>（5）从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。</p>\n<p>红黑树的操作：　左旋、右旋、添加、删除</p>\n<p>红黑树的应用比较广泛，主要是用它来存储有序的数据，它的时间复杂度是O(lgn)，效率非常之高。<br>例如，Java集合中的TreeSet和TreeMap，C++ STL中的set、map，以及Linux虚拟内存的管理，都是通过红黑树去实现的。</p>\n<p>红黑树的时间复杂度为: O(lgn)<br>下面通过“数学归纳法”对红黑树的时间复杂度进行证明。</p>\n<p><a href=\"http://blog.csdn.net/carson_ho/article/details/79373134\" target=\"_blank\" rel=\"noopener\">java 中hashmap的实现</a></p>\n<h2 id=\"加密算法-DES-AES-RSA-MD5-SHA1-Base64-比较和项目应用\"><a href=\"#加密算法-DES-AES-RSA-MD5-SHA1-Base64-比较和项目应用\" class=\"headerlink\" title=\"加密算法(DES,AES,RSA,MD5,SHA1,Base64)比较和项目应用\"></a>加密算法(DES,AES,RSA,MD5,SHA1,Base64)比较和项目应用</h2><p>加密技术通常分为两大类:”对称式”和”非对称式”。</p>\n<h3 id=\"对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\"><a href=\"#对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\" class=\"headerlink\" title=\"对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\"></a>对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。</h3><h3 id=\"非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A-B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消-息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\"><a href=\"#非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A-B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消-息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\" class=\"headerlink\" title=\"非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A,B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消 息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\"></a>非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A,B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消 息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。</h3><h3 id=\"散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列-Hash-函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”-Message-digest-。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\"><a href=\"#散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列-Hash-函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”-Message-digest-。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\" class=\"headerlink\" title=\"散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列(Hash)函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”(Message digest)。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\"></a>散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列(Hash)函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”(Message digest)。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。</h3><h3 id=\"对称性加密算法有：AES、DES、3DES\"><a href=\"#对称性加密算法有：AES、DES、3DES\" class=\"headerlink\" title=\"对称性加密算法有：AES、DES、3DES\"></a>对称性加密算法有：AES、DES、3DES</h3><p>用途：对称加密算法用来对敏感数据等信息进行加密</p>\n<p>DES（Data Encryption Standard）：数据加密标准，速度较快，适用于加密大量数据的场合。</p>\n<p>3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高。</p>\n<p>AES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高；AES是一个使用128为分组块的分组加密算法，分组块和128、192或256位的密钥一起作为输入，对4×4的字节数组上进行操作。众所周之AES是种十分高效的算法，尤其在8位架构中，这源于它面向字节的设计。AES 适用于8位的小型单片机或者普通的32位微处理器,并且适合用专门的硬件实现，硬件实现能够使其吞吐量（每秒可以到达的加密/解密bit数）达到十亿量级。同样，其也适用于RFID系统。</p>\n<h3 id=\"非对称性算法有：RSA、DSA、ECC\"><a href=\"#非对称性算法有：RSA、DSA、ECC\" class=\"headerlink\" title=\"非对称性算法有：RSA、DSA、ECC\"></a>非对称性算法有：RSA、DSA、ECC</h3><p>RSA：由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的。RSA在国外早已进入实用阶段，已研制出多种高速的RSA的专用芯片。</p>\n<p>DSA（Digital Signature Algorithm）：数字签名算法，是一种标准的 DSS（数字签名标准），严格来说不算加密算法。</p>\n<p>ECC（Elliptic Curves Cryptography）：椭圆曲线密码编码学。ECC和RSA相比，具有多方面的绝对优势，主要有：抗攻击性强。相同的密钥长度，其抗攻击性要强很多倍。计算量小，处理速度快。ECC总的速度比RSA、DSA要快得多。存储空间占用小。ECC的密钥尺寸和系统参数与RSA、DSA相比要小得多，意味着它所占的存贮空间要小得多。这对于加密算法在IC卡上的应用具有特别重要的意义。带宽要求低。当对长消息进行加解密时，三类密码系统有相同的带宽要求，但应用于短消息时ECC带宽要求却低得多。带宽要求低使ECC在无线网络领域具有广泛的应用前景。</p>\n<p>散列算法（签名算法）有：MD5、SHA1、HMAC<br>用途：主要用于验证，防止信息被修。具体用途如：文件校验、数字签名、鉴权协议</p>\n<p>MD5：MD5是一种不可逆的加密算法，目前是最牢靠的加密算法之一，尚没有能够逆运算的程序被开发出来，它对应任何字符串都可以加密成一段唯一的固定长度的代码。</p>\n<p>SHA1：是由NISTNSA设计为同DSA一起使用的，它对长度小于264的输入，产生长度为160bit的散列值，因此抗穷举(brute-force)性更好。SHA-1设计时基于和MD4相同原理,并且模仿了该算法。SHA-1是由美国标准技术局（NIST）颁布的国家标准，是一种应用最为广泛的Hash函数算法，也是目前最先进的加密技术，被政府部门和私营业主用来处理敏感的信息。而SHA-1基于MD5，MD5又基于MD4。</p>\n<p>HMAC：是密钥相关的哈希运算消息认证码（Hash-based Message Authentication Code）,HMAC运算利用哈希算法，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。也就是说HMAC是需要一个密钥的。所以，HMAC_SHA1也是需要一个密钥的，而SHA1不需要。</p>\n<h3 id=\"其他常用算法：\"><a href=\"#其他常用算法：\" class=\"headerlink\" title=\"其他常用算法：\"></a>其他常用算法：</h3><p>Base64：其实不是安全领域下的加密解密算法，只能算是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，对数据内容进行编码来适合传输(可以对img图像编码用于传输)。这是一种可逆的编码方式。编码后的数据是一个字符串，其中包含的字符为：A-Z、a-z、0-9、+、/，共64个字符(26 + 26 + 10 + 1 + 1 = 64，其实是65个字符，“=”是填充字符。Base64要求把每三个8Bit的字节转换为四个6Bit的字节(3<em>8 = 4</em>6 = 24)，然后把6Bit再添两位高位0，组成四个8Bit的字节，也就是说，转换后的字符串理论上将要比原来的长1/3。原文的字节最后不够3个的地方用0来补足，转换时Base64编码用=号来代替。这就是为什么有些Base64编码会以一个或两个等号结束的原因，中间是不可能出现等号的，但等号最多只有两个。其实不用”=”也不耽误解码，之所以用”=”，可能是考虑到多段编码后的Base64字符串拼起来也不会引起混淆。)<br>Base64编码是从二进制到字符的过程，像一些中文字符用不同的编码转为二进制时，产生的二进制是不一样的，所以最终产生的Base64字符也不一样。例如”上网”对应utf-8格式的Base64编码是”5LiK572R”， 对应GB2312格式的Base64编码是”yc/N+A==”。<br>标准的Base64并不适合直接放在URL里传输，因为URL编码器会把标准Base64中的“/”和“+”字符变为形如“%XX”的形式，而这些“%”号在存入数据库时还需要再进行转换，因为ANSI SQL中已将“%”号用作通配符。<br>为解决此问题，可采用一种用于URL的改进Base64编码，它不在末尾填充’=’号，并将标准Base64中的“+”和“/”分别改成了“-”和“<em>”，这样就免去了在URL编解码和数据库存储时所要作的转换，避免了编码信息长度在此过程中的增加，并统一了数据库、表单等处对象标识符的格式。<br>另有一种用于正则表达式的改进Base64变种，它将“+”和“/”改成了“!”和“-”，因为“+”，“*”以及前面在IRCu中用到的“[”和“]”在正则表达式中都可能具有特殊含义。<br>此外还有一些变种，它们将“+/”改为“</em>-”或“.<em>”（用作编程语言中的标识符名称）或“.-”（用于XML中的Nmtoken）甚至“</em>:”（用于XML中的Name）。</p>\n<p>​HTTPS（全称：Hypertext Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL(SSL使用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。)，因此加密的详细内容就需要SSL。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间），提供了身份验证与加密通讯方法，现在它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。</p>\n<h2 id=\"项目应用总结：\"><a href=\"#项目应用总结：\" class=\"headerlink\" title=\"项目应用总结：\"></a>项目应用总结：</h2><ol>\n<li>加密算法是可逆的，用来对敏感数据进行保护。散列算法(签名算法、哈希算法)是不可逆的，主要用于身份验证。</li>\n<li>对称加密算法使用同一个密匙加密和解密，速度快，适合给大量数据加密。对称加密客户端和服务端使用同一个密匙，存在被抓包破解的风险。</li>\n<li>非对称加密算法使用公钥加密，私钥解密，私钥签名，公钥验签。安全性比对称加密高，但速度较慢。非对称加密使用两个密匙，服务端和客户端密匙不一样，私钥放在服务端，黑客一般是拿不到的，安全性高。</li>\n<li>Base64不是安全领域下的加解密算法，只是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，特别适合在http，mime协议下的网络快速传输数据。UTF-8和GBK中文的Base64编码结果是不同的。采用Base64编码不仅比较简短，同时也具有不可读性，即所编码的数据不会被人用肉眼所直接看到，但这种方式很初级，很简单。Base64可以对图片文件进行编码传输。</li>\n<li>https协议广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。</li>\n<li>大量数据加密建议采用对称加密算法，提高加解密速度；小量的机密数据，可以采用非对称加密算法。在实际的操作过程中，我们通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。</li>\n<li>MD5标准密钥长度128位（128位是指二进制位。二进制太长，所以一般都改写成16进制，每一位16进制数可以代替4位二进制数，所以128位二进制数写成16进制就变成了128/4=32位。16位加密就是从32位MD5散列中把中间16位提取出来）；sha1标准密钥长度160位(比MD5摘要长32位)，Base64转换后的字符串理论上将要比原来的长1/3。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"概述：R-B-Tree，又称为“红黑树”\"><a href=\"#概述：R-B-Tree，又称为“红黑树”\" class=\"headerlink\" title=\"概述：R-B Tree，又称为“红黑树”\"></a>概述：R-B Tree，又称为“红黑树”</h2><p>红黑树的特性:<br>（1）每个节点或者是黑色，或者是红色。<br>（2）根节点是黑色。<br>（3）每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL或NULL)的叶子节点！]<br>（4）如果一个节点是红色的，则它的子节点必须是黑色的。<br>（5）从一个节点到该节点的子孙节点的所有路径上包含相同数目的黑节点。</p>\n<p>红黑树的操作：　左旋、右旋、添加、删除</p>\n<p>红黑树的应用比较广泛，主要是用它来存储有序的数据，它的时间复杂度是O(lgn)，效率非常之高。<br>例如，Java集合中的TreeSet和TreeMap，C++ STL中的set、map，以及Linux虚拟内存的管理，都是通过红黑树去实现的。</p>\n<p>红黑树的时间复杂度为: O(lgn)<br>下面通过“数学归纳法”对红黑树的时间复杂度进行证明。</p>\n<p><a href=\"http://blog.csdn.net/carson_ho/article/details/79373134\" target=\"_blank\" rel=\"noopener\">java 中hashmap的实现</a></p>\n<h2 id=\"加密算法-DES-AES-RSA-MD5-SHA1-Base64-比较和项目应用\"><a href=\"#加密算法-DES-AES-RSA-MD5-SHA1-Base64-比较和项目应用\" class=\"headerlink\" title=\"加密算法(DES,AES,RSA,MD5,SHA1,Base64)比较和项目应用\"></a>加密算法(DES,AES,RSA,MD5,SHA1,Base64)比较和项目应用</h2><p>加密技术通常分为两大类:”对称式”和”非对称式”。</p>\n<h3 id=\"对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\"><a href=\"#对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\" class=\"headerlink\" title=\"对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。\"></a>对称性加密算法：对称式加密就是加密和解密使用同一个密钥。信息接收双方都需事先知道密匙和加解密算法且其密匙是相同的，之后便是对数据进行加解密了。对称加密算法用来对敏感数据等信息进行加密。</h3><h3 id=\"非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A-B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消-息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\"><a href=\"#非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A-B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消-息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\" class=\"headerlink\" title=\"非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A,B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消 息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。\"></a>非对称算法：非对称式加密就是加密和解密所使用的不是同一个密钥，通常有两个密钥，称为”公钥”和”私钥”，它们两个必需配对使用，否则不能打开加密文件。发送双方A,B事先均生成一堆密匙，然后A将自己的公有密匙发送给B，B将自己的公有密匙发送给A，如果A要给B发送消 息，则先需要用B的公有密匙进行消息加密，然后发送给B端，此时B端再用自己的私有密匙进行消息解密，B向A发送消息时为同样的道理。</h3><h3 id=\"散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列-Hash-函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”-Message-digest-。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\"><a href=\"#散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列-Hash-函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”-Message-digest-。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\" class=\"headerlink\" title=\"散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列(Hash)函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”(Message digest)。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。\"></a>散列算法：散列算法，又称哈希函数，是一种单向加密算法。在信息安全技术中，经常需要验证消息的完整性，散列(Hash)函数提供了这一服务，它对不同长度的输入消息，产生固定长度的输出。这个固定长度的输出称为原输入消息的”散列”或”消息摘要”(Message digest)。散列算法不算加密算法，因为其结果是不可逆的，既然是不可逆的，那么当然不是用来加密的，而是签名。</h3><h3 id=\"对称性加密算法有：AES、DES、3DES\"><a href=\"#对称性加密算法有：AES、DES、3DES\" class=\"headerlink\" title=\"对称性加密算法有：AES、DES、3DES\"></a>对称性加密算法有：AES、DES、3DES</h3><p>用途：对称加密算法用来对敏感数据等信息进行加密</p>\n<p>DES（Data Encryption Standard）：数据加密标准，速度较快，适用于加密大量数据的场合。</p>\n<p>3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高。</p>\n<p>AES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高；AES是一个使用128为分组块的分组加密算法，分组块和128、192或256位的密钥一起作为输入，对4×4的字节数组上进行操作。众所周之AES是种十分高效的算法，尤其在8位架构中，这源于它面向字节的设计。AES 适用于8位的小型单片机或者普通的32位微处理器,并且适合用专门的硬件实现，硬件实现能够使其吞吐量（每秒可以到达的加密/解密bit数）达到十亿量级。同样，其也适用于RFID系统。</p>\n<h3 id=\"非对称性算法有：RSA、DSA、ECC\"><a href=\"#非对称性算法有：RSA、DSA、ECC\" class=\"headerlink\" title=\"非对称性算法有：RSA、DSA、ECC\"></a>非对称性算法有：RSA、DSA、ECC</h3><p>RSA：由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的。RSA在国外早已进入实用阶段，已研制出多种高速的RSA的专用芯片。</p>\n<p>DSA（Digital Signature Algorithm）：数字签名算法，是一种标准的 DSS（数字签名标准），严格来说不算加密算法。</p>\n<p>ECC（Elliptic Curves Cryptography）：椭圆曲线密码编码学。ECC和RSA相比，具有多方面的绝对优势，主要有：抗攻击性强。相同的密钥长度，其抗攻击性要强很多倍。计算量小，处理速度快。ECC总的速度比RSA、DSA要快得多。存储空间占用小。ECC的密钥尺寸和系统参数与RSA、DSA相比要小得多，意味着它所占的存贮空间要小得多。这对于加密算法在IC卡上的应用具有特别重要的意义。带宽要求低。当对长消息进行加解密时，三类密码系统有相同的带宽要求，但应用于短消息时ECC带宽要求却低得多。带宽要求低使ECC在无线网络领域具有广泛的应用前景。</p>\n<p>散列算法（签名算法）有：MD5、SHA1、HMAC<br>用途：主要用于验证，防止信息被修。具体用途如：文件校验、数字签名、鉴权协议</p>\n<p>MD5：MD5是一种不可逆的加密算法，目前是最牢靠的加密算法之一，尚没有能够逆运算的程序被开发出来，它对应任何字符串都可以加密成一段唯一的固定长度的代码。</p>\n<p>SHA1：是由NISTNSA设计为同DSA一起使用的，它对长度小于264的输入，产生长度为160bit的散列值，因此抗穷举(brute-force)性更好。SHA-1设计时基于和MD4相同原理,并且模仿了该算法。SHA-1是由美国标准技术局（NIST）颁布的国家标准，是一种应用最为广泛的Hash函数算法，也是目前最先进的加密技术，被政府部门和私营业主用来处理敏感的信息。而SHA-1基于MD5，MD5又基于MD4。</p>\n<p>HMAC：是密钥相关的哈希运算消息认证码（Hash-based Message Authentication Code）,HMAC运算利用哈希算法，以一个密钥和一个消息为输入，生成一个消息摘要作为输出。也就是说HMAC是需要一个密钥的。所以，HMAC_SHA1也是需要一个密钥的，而SHA1不需要。</p>\n<h3 id=\"其他常用算法：\"><a href=\"#其他常用算法：\" class=\"headerlink\" title=\"其他常用算法：\"></a>其他常用算法：</h3><p>Base64：其实不是安全领域下的加密解密算法，只能算是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，对数据内容进行编码来适合传输(可以对img图像编码用于传输)。这是一种可逆的编码方式。编码后的数据是一个字符串，其中包含的字符为：A-Z、a-z、0-9、+、/，共64个字符(26 + 26 + 10 + 1 + 1 = 64，其实是65个字符，“=”是填充字符。Base64要求把每三个8Bit的字节转换为四个6Bit的字节(3<em>8 = 4</em>6 = 24)，然后把6Bit再添两位高位0，组成四个8Bit的字节，也就是说，转换后的字符串理论上将要比原来的长1/3。原文的字节最后不够3个的地方用0来补足，转换时Base64编码用=号来代替。这就是为什么有些Base64编码会以一个或两个等号结束的原因，中间是不可能出现等号的，但等号最多只有两个。其实不用”=”也不耽误解码，之所以用”=”，可能是考虑到多段编码后的Base64字符串拼起来也不会引起混淆。)<br>Base64编码是从二进制到字符的过程，像一些中文字符用不同的编码转为二进制时，产生的二进制是不一样的，所以最终产生的Base64字符也不一样。例如”上网”对应utf-8格式的Base64编码是”5LiK572R”， 对应GB2312格式的Base64编码是”yc/N+A==”。<br>标准的Base64并不适合直接放在URL里传输，因为URL编码器会把标准Base64中的“/”和“+”字符变为形如“%XX”的形式，而这些“%”号在存入数据库时还需要再进行转换，因为ANSI SQL中已将“%”号用作通配符。<br>为解决此问题，可采用一种用于URL的改进Base64编码，它不在末尾填充’=’号，并将标准Base64中的“+”和“/”分别改成了“-”和“<em>”，这样就免去了在URL编解码和数据库存储时所要作的转换，避免了编码信息长度在此过程中的增加，并统一了数据库、表单等处对象标识符的格式。<br>另有一种用于正则表达式的改进Base64变种，它将“+”和“/”改成了“!”和“-”，因为“+”，“*”以及前面在IRCu中用到的“[”和“]”在正则表达式中都可能具有特殊含义。<br>此外还有一些变种，它们将“+/”改为“</em>-”或“.<em>”（用作编程语言中的标识符名称）或“.-”（用于XML中的Nmtoken）甚至“</em>:”（用于XML中的Name）。</p>\n<p>​HTTPS（全称：Hypertext Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL(SSL使用40 位关键字作为RC4流加密算法，这对于商业信息的加密是合适的。)，因此加密的详细内容就需要SSL。https:URL表明它使用了HTTP，但HTTPS存在不同于HTTP的默认端口及一个加密/身份验证层（在HTTP与TCP之间），提供了身份验证与加密通讯方法，现在它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。</p>\n<h2 id=\"项目应用总结：\"><a href=\"#项目应用总结：\" class=\"headerlink\" title=\"项目应用总结：\"></a>项目应用总结：</h2><ol>\n<li>加密算法是可逆的，用来对敏感数据进行保护。散列算法(签名算法、哈希算法)是不可逆的，主要用于身份验证。</li>\n<li>对称加密算法使用同一个密匙加密和解密，速度快，适合给大量数据加密。对称加密客户端和服务端使用同一个密匙，存在被抓包破解的风险。</li>\n<li>非对称加密算法使用公钥加密，私钥解密，私钥签名，公钥验签。安全性比对称加密高，但速度较慢。非对称加密使用两个密匙，服务端和客户端密匙不一样，私钥放在服务端，黑客一般是拿不到的，安全性高。</li>\n<li>Base64不是安全领域下的加解密算法，只是一个编码算法，通常用于把二进制数据编码为可写的字符形式的数据，特别适合在http，mime协议下的网络快速传输数据。UTF-8和GBK中文的Base64编码结果是不同的。采用Base64编码不仅比较简短，同时也具有不可读性，即所编码的数据不会被人用肉眼所直接看到，但这种方式很初级，很简单。Base64可以对图片文件进行编码传输。</li>\n<li>https协议广泛用于万维网上安全敏感的通讯，例如交易支付方面。它的主要作用可以分为两种：一种是建立一个信息安全通道，来保证数据传输的安全；另一种就是确认网站的真实性。</li>\n<li>大量数据加密建议采用对称加密算法，提高加解密速度；小量的机密数据，可以采用非对称加密算法。在实际的操作过程中，我们通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。</li>\n<li>MD5标准密钥长度128位（128位是指二进制位。二进制太长，所以一般都改写成16进制，每一位16进制数可以代替4位二进制数，所以128位二进制数写成16进制就变成了128/4=32位。16位加密就是从32位MD5散列中把中间16位提取出来）；sha1标准密钥长度160位(比MD5摘要长32位)，Base64转换后的字符串理论上将要比原来的长1/3。</li>\n</ol>\n"},{"title":"国内开源镜像站点","date":"2017-05-15T09:08:21.000Z","_content":"中国科学技术大学\nhttp://mirrors.ustc.edu.cn/\n北京理工大学\nhttp://mirror.bit.edu.cn/web/\n\nhttps://segmentfault.com/a/1190000007497383\nhttp://f2er.club/\nhttps://arxiv.org/\nhttps://openai.com/\nhttps://dzone.com/articles/java-microservices-code-examples-tutorials-and-more\nhttps://medium.com/iotforall/10-things-you-didnt-know-about-wifi-fe638076c0c\nhttp://www.jianshu.com/p/87fe79324639\nhttps://my.oschina.net/u/3531365/blog/995033\nhttp://zkeeer.space/\nhttps://www.zhihu.com/question/27771692\nhttp://www.w3cvip.com/\nhttps://www.nowcoder.com/\nhttp://geek.csdn.net/news/detail/203057\nhttp://open.163.com/special/opencourse/bianchengdaolun.html\nhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript\nhttp://garann.github.io/template-chooser/\nhttps://leanpub.com/understandinges6/read\nhttp://blog.csdn.net/u012124438/article/details/73410381\nhttps://tc39.github.io/ecma262/\nhttps://sfantasy.gitbooks.io/node-in-action/content/zh/express/deploy.html\nhttps://technet.microsoft.com/en-us/library/hh801900(v=ws.11).aspx\nhttp://www.jianshu.com/p/ab2741f78858\nhttp://shouce.jb51.net/7-days-nodejs/\nhttp://cnodejs.org/topic/5189ff4f63e9f8a54207f60c\nhttp://blog.csdn.net/god_7z1/article/details/51173067\nhttp://banshanxianren.iteye.com/blog/2375548\nhttp://blog.jobbole.com/70549/\nhttp://blog.csdn.net/qq_37810594/article/details/72625742\nhttps://my.oschina.net/u/3531365/blog/948354\n\nhttp://savannah.gnu.org/maintenance/HowToBecomeASavannahHacker/\n\n\nhttps://www.zhihu.com/question/24673455\n\nhttp://ecma-international.org/default.htm\nhttps://tc39.github.io/ecma262/\n\n","source":"_posts/china_open_source20170515.md","raw":"---\ntitle: 国内开源镜像站点 \ndate: 2017-05-15 17:08:21\ntags:\n---\n中国科学技术大学\nhttp://mirrors.ustc.edu.cn/\n北京理工大学\nhttp://mirror.bit.edu.cn/web/\n\nhttps://segmentfault.com/a/1190000007497383\nhttp://f2er.club/\nhttps://arxiv.org/\nhttps://openai.com/\nhttps://dzone.com/articles/java-microservices-code-examples-tutorials-and-more\nhttps://medium.com/iotforall/10-things-you-didnt-know-about-wifi-fe638076c0c\nhttp://www.jianshu.com/p/87fe79324639\nhttps://my.oschina.net/u/3531365/blog/995033\nhttp://zkeeer.space/\nhttps://www.zhihu.com/question/27771692\nhttp://www.w3cvip.com/\nhttps://www.nowcoder.com/\nhttp://geek.csdn.net/news/detail/203057\nhttp://open.163.com/special/opencourse/bianchengdaolun.html\nhttps://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript\nhttp://garann.github.io/template-chooser/\nhttps://leanpub.com/understandinges6/read\nhttp://blog.csdn.net/u012124438/article/details/73410381\nhttps://tc39.github.io/ecma262/\nhttps://sfantasy.gitbooks.io/node-in-action/content/zh/express/deploy.html\nhttps://technet.microsoft.com/en-us/library/hh801900(v=ws.11).aspx\nhttp://www.jianshu.com/p/ab2741f78858\nhttp://shouce.jb51.net/7-days-nodejs/\nhttp://cnodejs.org/topic/5189ff4f63e9f8a54207f60c\nhttp://blog.csdn.net/god_7z1/article/details/51173067\nhttp://banshanxianren.iteye.com/blog/2375548\nhttp://blog.jobbole.com/70549/\nhttp://blog.csdn.net/qq_37810594/article/details/72625742\nhttps://my.oschina.net/u/3531365/blog/948354\n\nhttp://savannah.gnu.org/maintenance/HowToBecomeASavannahHacker/\n\n\nhttps://www.zhihu.com/question/24673455\n\nhttp://ecma-international.org/default.htm\nhttps://tc39.github.io/ecma262/\n\n","slug":"china_open_source20170515","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlo000e2oi8eocr2gyg","content":"<p>中国科学技术大学<br><a href=\"http://mirrors.ustc.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://mirrors.ustc.edu.cn/</a><br>北京理工大学<br><a href=\"http://mirror.bit.edu.cn/web/\" target=\"_blank\" rel=\"noopener\">http://mirror.bit.edu.cn/web/</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000007497383\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000007497383</a><br><a href=\"http://f2er.club/\" target=\"_blank\" rel=\"noopener\">http://f2er.club/</a><br><a href=\"https://arxiv.org/\" target=\"_blank\" rel=\"noopener\">https://arxiv.org/</a><br><a href=\"https://openai.com/\" target=\"_blank\" rel=\"noopener\">https://openai.com/</a><br><a href=\"https://dzone.com/articles/java-microservices-code-examples-tutorials-and-more\" target=\"_blank\" rel=\"noopener\">https://dzone.com/articles/java-microservices-code-examples-tutorials-and-more</a><br><a href=\"https://medium.com/iotforall/10-things-you-didnt-know-about-wifi-fe638076c0c\" target=\"_blank\" rel=\"noopener\">https://medium.com/iotforall/10-things-you-didnt-know-about-wifi-fe638076c0c</a><br><a href=\"http://www.jianshu.com/p/87fe79324639\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/87fe79324639</a><br><a href=\"https://my.oschina.net/u/3531365/blog/995033\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/u/3531365/blog/995033</a><br><a href=\"http://zkeeer.space/\" target=\"_blank\" rel=\"noopener\">http://zkeeer.space/</a><br><a href=\"https://www.zhihu.com/question/27771692\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/27771692</a><br><a href=\"http://www.w3cvip.com/\" target=\"_blank\" rel=\"noopener\">http://www.w3cvip.com/</a><br><a href=\"https://www.nowcoder.com/\" target=\"_blank\" rel=\"noopener\">https://www.nowcoder.com/</a><br><a href=\"http://geek.csdn.net/news/detail/203057\" target=\"_blank\" rel=\"noopener\">http://geek.csdn.net/news/detail/203057</a><br><a href=\"http://open.163.com/special/opencourse/bianchengdaolun.html\" target=\"_blank\" rel=\"noopener\">http://open.163.com/special/opencourse/bianchengdaolun.html</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript</a><br><a href=\"http://garann.github.io/template-chooser/\" target=\"_blank\" rel=\"noopener\">http://garann.github.io/template-chooser/</a><br><a href=\"https://leanpub.com/understandinges6/read\" target=\"_blank\" rel=\"noopener\">https://leanpub.com/understandinges6/read</a><br><a href=\"http://blog.csdn.net/u012124438/article/details/73410381\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/u012124438/article/details/73410381</a><br><a href=\"https://tc39.github.io/ecma262/\" target=\"_blank\" rel=\"noopener\">https://tc39.github.io/ecma262/</a><br><a href=\"https://sfantasy.gitbooks.io/node-in-action/content/zh/express/deploy.html\" target=\"_blank\" rel=\"noopener\">https://sfantasy.gitbooks.io/node-in-action/content/zh/express/deploy.html</a><br><a href=\"https://technet.microsoft.com/en-us/library/hh801900(v=ws.11).aspx\" target=\"_blank\" rel=\"noopener\">https://technet.microsoft.com/en-us/library/hh801900(v=ws.11).aspx</a><br><a href=\"http://www.jianshu.com/p/ab2741f78858\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/ab2741f78858</a><br><a href=\"http://shouce.jb51.net/7-days-nodejs/\" target=\"_blank\" rel=\"noopener\">http://shouce.jb51.net/7-days-nodejs/</a><br><a href=\"http://cnodejs.org/topic/5189ff4f63e9f8a54207f60c\" target=\"_blank\" rel=\"noopener\">http://cnodejs.org/topic/5189ff4f63e9f8a54207f60c</a><br><a href=\"http://blog.csdn.net/god_7z1/article/details/51173067\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/god_7z1/article/details/51173067</a><br><a href=\"http://banshanxianren.iteye.com/blog/2375548\" target=\"_blank\" rel=\"noopener\">http://banshanxianren.iteye.com/blog/2375548</a><br><a href=\"http://blog.jobbole.com/70549/\" target=\"_blank\" rel=\"noopener\">http://blog.jobbole.com/70549/</a><br><a href=\"http://blog.csdn.net/qq_37810594/article/details/72625742\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/qq_37810594/article/details/72625742</a><br><a href=\"https://my.oschina.net/u/3531365/blog/948354\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/u/3531365/blog/948354</a></p>\n<p><a href=\"http://savannah.gnu.org/maintenance/HowToBecomeASavannahHacker/\" target=\"_blank\" rel=\"noopener\">http://savannah.gnu.org/maintenance/HowToBecomeASavannahHacker/</a></p>\n<p><a href=\"https://www.zhihu.com/question/24673455\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/24673455</a></p>\n<p><a href=\"http://ecma-international.org/default.htm\" target=\"_blank\" rel=\"noopener\">http://ecma-international.org/default.htm</a><br><a href=\"https://tc39.github.io/ecma262/\" target=\"_blank\" rel=\"noopener\">https://tc39.github.io/ecma262/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>中国科学技术大学<br><a href=\"http://mirrors.ustc.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://mirrors.ustc.edu.cn/</a><br>北京理工大学<br><a href=\"http://mirror.bit.edu.cn/web/\" target=\"_blank\" rel=\"noopener\">http://mirror.bit.edu.cn/web/</a></p>\n<p><a href=\"https://segmentfault.com/a/1190000007497383\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000007497383</a><br><a href=\"http://f2er.club/\" target=\"_blank\" rel=\"noopener\">http://f2er.club/</a><br><a href=\"https://arxiv.org/\" target=\"_blank\" rel=\"noopener\">https://arxiv.org/</a><br><a href=\"https://openai.com/\" target=\"_blank\" rel=\"noopener\">https://openai.com/</a><br><a href=\"https://dzone.com/articles/java-microservices-code-examples-tutorials-and-more\" target=\"_blank\" rel=\"noopener\">https://dzone.com/articles/java-microservices-code-examples-tutorials-and-more</a><br><a href=\"https://medium.com/iotforall/10-things-you-didnt-know-about-wifi-fe638076c0c\" target=\"_blank\" rel=\"noopener\">https://medium.com/iotforall/10-things-you-didnt-know-about-wifi-fe638076c0c</a><br><a href=\"http://www.jianshu.com/p/87fe79324639\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/87fe79324639</a><br><a href=\"https://my.oschina.net/u/3531365/blog/995033\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/u/3531365/blog/995033</a><br><a href=\"http://zkeeer.space/\" target=\"_blank\" rel=\"noopener\">http://zkeeer.space/</a><br><a href=\"https://www.zhihu.com/question/27771692\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/27771692</a><br><a href=\"http://www.w3cvip.com/\" target=\"_blank\" rel=\"noopener\">http://www.w3cvip.com/</a><br><a href=\"https://www.nowcoder.com/\" target=\"_blank\" rel=\"noopener\">https://www.nowcoder.com/</a><br><a href=\"http://geek.csdn.net/news/detail/203057\" target=\"_blank\" rel=\"noopener\">http://geek.csdn.net/news/detail/203057</a><br><a href=\"http://open.163.com/special/opencourse/bianchengdaolun.html\" target=\"_blank\" rel=\"noopener\">http://open.163.com/special/opencourse/bianchengdaolun.html</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript\" target=\"_blank\" rel=\"noopener\">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript</a><br><a href=\"http://garann.github.io/template-chooser/\" target=\"_blank\" rel=\"noopener\">http://garann.github.io/template-chooser/</a><br><a href=\"https://leanpub.com/understandinges6/read\" target=\"_blank\" rel=\"noopener\">https://leanpub.com/understandinges6/read</a><br><a href=\"http://blog.csdn.net/u012124438/article/details/73410381\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/u012124438/article/details/73410381</a><br><a href=\"https://tc39.github.io/ecma262/\" target=\"_blank\" rel=\"noopener\">https://tc39.github.io/ecma262/</a><br><a href=\"https://sfantasy.gitbooks.io/node-in-action/content/zh/express/deploy.html\" target=\"_blank\" rel=\"noopener\">https://sfantasy.gitbooks.io/node-in-action/content/zh/express/deploy.html</a><br><a href=\"https://technet.microsoft.com/en-us/library/hh801900(v=ws.11).aspx\" target=\"_blank\" rel=\"noopener\">https://technet.microsoft.com/en-us/library/hh801900(v=ws.11).aspx</a><br><a href=\"http://www.jianshu.com/p/ab2741f78858\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/ab2741f78858</a><br><a href=\"http://shouce.jb51.net/7-days-nodejs/\" target=\"_blank\" rel=\"noopener\">http://shouce.jb51.net/7-days-nodejs/</a><br><a href=\"http://cnodejs.org/topic/5189ff4f63e9f8a54207f60c\" target=\"_blank\" rel=\"noopener\">http://cnodejs.org/topic/5189ff4f63e9f8a54207f60c</a><br><a href=\"http://blog.csdn.net/god_7z1/article/details/51173067\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/god_7z1/article/details/51173067</a><br><a href=\"http://banshanxianren.iteye.com/blog/2375548\" target=\"_blank\" rel=\"noopener\">http://banshanxianren.iteye.com/blog/2375548</a><br><a href=\"http://blog.jobbole.com/70549/\" target=\"_blank\" rel=\"noopener\">http://blog.jobbole.com/70549/</a><br><a href=\"http://blog.csdn.net/qq_37810594/article/details/72625742\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/qq_37810594/article/details/72625742</a><br><a href=\"https://my.oschina.net/u/3531365/blog/948354\" target=\"_blank\" rel=\"noopener\">https://my.oschina.net/u/3531365/blog/948354</a></p>\n<p><a href=\"http://savannah.gnu.org/maintenance/HowToBecomeASavannahHacker/\" target=\"_blank\" rel=\"noopener\">http://savannah.gnu.org/maintenance/HowToBecomeASavannahHacker/</a></p>\n<p><a href=\"https://www.zhihu.com/question/24673455\" target=\"_blank\" rel=\"noopener\">https://www.zhihu.com/question/24673455</a></p>\n<p><a href=\"http://ecma-international.org/default.htm\" target=\"_blank\" rel=\"noopener\">http://ecma-international.org/default.htm</a><br><a href=\"https://tc39.github.io/ecma262/\" target=\"_blank\" rel=\"noopener\">https://tc39.github.io/ecma262/</a></p>\n"},{"title":"css 学习笔记","date":"2017-08-01T06:51:14.000Z","_content":"## css\n\n\n","source":"_posts/css_学习笔记20170801.md","raw":"---\ntitle: css 学习笔记\ndate: 2017-08-01 14:51:14\ntags:\n---\n## css\n\n\n","slug":"css_学习笔记20170801","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlp000f2oi86639trm1","content":"<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"css\"><a href=\"#css\" class=\"headerlink\" title=\"css\"></a>css</h2>"},{"title":"经济研究资料（资料定期更新补充）","date":"2017-02-10T02:46:25.000Z","_content":"\n区间涨跌幅统计：通达信软件里输入.403统计，随意选择区间，输入34导出数据。 \n  \n年报          ：http://data.eastmoney.com/bbsj/201012/fsrq/1.html \n 2010年年报沪市披露日期：http://www.sse.com.cn/sseportal/webapp/listcompany/qrybltnbookinfo \n 2010年年报深市披露日期： \nhttp://www.cninfo.com.cn/disclosure/prbookinfo.jsp \n财经报道      ：http://www.cfi.net.cn \n                 http://www.cs.com.cn/ \n                 http://www.p5w.net/kuaixun/index.htm \n                 http://finance.ifeng.com/ \n                 http://www.cnstock.com/ \n                 http://www.eastmoney.com/ \n                 http://www.dingniu8.com/ \n大单统计      ：http://www.gupiaodadan.com/ \n基金每日净值：  http://www.ourku.com/ \n交易提示      ：http://finance.ifeng.com/stock/ts/index.shtml \n                 http://www.p5w.net/stock/ssgsyj/ \n领导动态      ：http://www.people.com.cn/ \n龙虎榜        ：http://www.yz21.org/stock/szsec/ \n几大人气bbs   ：http://bbs.macd.cn/ \n                 http://www.taoguba.com.cn/index.action?blockID=1 \n                 http://www.55188.com/index.php \n钢铁          ：http://www.mysteel.com/ \n中纤网        ：http://www.ccfei.net/Index.aspx \n中金所        ：http://www.cffex.com.cn/fzjy/ccpm/ \n三季报        ：http://data.eastmoney.com/bbsj/201009.html \n研究报告      ：http://bbs.moneyqoo.com/forumdisplay.php?fid=29 \n历史数据下载  ：http://down.88158.cn/ \n国际财经      ：http://international.caixun.com/ \n美股指数      ：http://finance.google.com/finance \n网页行情      ：http://biz.finance.sina.com.cn/hq/ \n国际期货      ：http://finance.sina.com.cn/money/future/hf.html \n郑州商品交易所期货：http://vip.stock.finance.sina.com.cn/quotes_service/view/qihuohangqing.html#titlePos_0 \n欧洲指数      ：http://finance.yahoo.com/intlindices?e=europe \n沪市每日公开信息： \nhttp://www.sse.com.cn/sseportal/webapp/datapresent/SSENewTradeInfoPublishAct \n深市主板公开信息： \nhttp://www.szse.cn/main/disclosure/news/scgkxx/ \n深市中小板公开信息： \nhttp://www.szse.cn/main/sme/jytj/jygkxx/ \n创业板公开信息： \nhttp://www.szse.cn/main/chinext/jygkxx/jygkxx/ \n荐股之王博客：http://blog.gutx.com/blog/%BC%F6%B9%C9%D6%AE%CD%F5/ \n思绪飘零：http://blog.sina.com.cn/sxf671212 \n\n\n国内前20大综合实力研究咨询智库机构排名情况\n1、国务院发展研究中心http://www.drc.gov.cn/\n2、中国社会科学院http://cass.cssn.cn/\n3、上海社会科学院http://www.sass.org.cn/\n4、北京大学国家发展研究院http://www.nsd.edu.cn/\n5、中共中央党校http://www.ccps.gov.cn/\n6、发改委宏观经济研究院http://www.amr.gov.cn/\n7、环境保护部环境规划院http://www.caep.org.cn/\n8、中国国际经济交流中心http://www.cciee.org.cn/\n9、零点研究咨询集团http://www.horizon-china.com/\n10、中国人民大学重阳金融研究院http://rdcy-sf.ruc.edu.cn/\n11、清华大学国情研究咨询院http://www.zwzyzx.com/\n12、中国（海南）改革发展研究院http://www.cird.org.cn/\n13、中国与全球化智库http://www.ccg.org.cn/\n14、中国经济体制改革研究会http://www.cser.org.cn/\n15、复旦大学美国研究中心http://www.cas.fudan.edu.cn/\n16、清华大学当代国际关系研究院http://www.tsinghua.edu.cn/\n17、中国金融40人论坛http://www.cf40.org.cn/\n18、外交部中国国际问题研究院http://www.ciis.org.cn/\n\n20、商务部国际贸易经济合作研究院http://www.caitec.org.cn\n\n中国经济类研究机构市场价值排行榜（2016）\n\n排名 经济类研究机构名称\n1.中国人民大学经济学院\n \n2.国务院发展研究中心市场经济研究所\n\n3.北京大学国家发展研究院\n \n4.北京大学经济学院\n \n5.中国社会科学院世界经济与政治研究所\n \n6.清华大学经济管理学院\n \n7.复旦大学经济学院\n \n8.中南财经政法大学经济学院\n \n9.南开大学经济研究所\n \n10.中国人民大学财政金融学院\n11.南开大学经济学院\n12.清华大学五道口金融学院\n13.厦门大学经济学院\n14.吉林大学经济学院\n15.浙江大学经济学院\n16.中国社会科学院金融研究所\n17.上海财经大学经济学院\n18.清华大学国情研究院\n19.南京大学经济学院\n20.民生证券研究所\n21.北京大学光华管理学院\n22.中央财经大学金融学院\n23.山东大学经济学院\n24.南开大学国家经济战略研究院\n25.中国人民银行研究局\n26.中国（海南）改革发展研究院\n27.北京证券期货研究院\n28.中国社会科学院经济研究所\n29.中国经济改革研究基金会国民经济研究所\n30.中国人民大学国家发展与战略研究院\n31.四川大学经济学院\n32.中国人民大学国际货币研究所\n33.中国社会科学院人口与劳动经济研究所\n34.北京大学汇丰商学院\n35.财政部财政科学研究所\n36.中国社会科学院财经战略研究院\n37.武汉大学经济与管理学院\n38.国务院发展研究中心宏观经济研究部\n39.中国国际经济交流中心\n40.国务院发展研究中心金融研究所\n41.华夏新供给经济研究院\n42.华中科技大学经济学院\n43.第一财经研究院\n44.中央财经大学经济学院\n45.东南大学经济管理学院\n46.环球财经研究院\n47.北京保险研究院\n48.商务部国际贸易经济合作研究院\n49.上海财经大学金融学院\n50.上海财经大学上海发展研究院\n51.对外经贸大学国际经济贸易学院\n52.中华联合保险控股股份有限公司研究所\n53.天则经济研究所\n54.武汉科技大学金融证券研究所\n55.中泰证券研究所\n56.西南财经大学经济学院\n57.北京师范大学经济与工商管理学院\n58.天津大学管理与经济学部\n59.中国国际金融有限公司\n60.中国经济体制改革研究会\n61.清华大学中国财政税收研究所\n62.首都经贸大学经济学院\n63.上海交通大学高级金融学院\n64.中山大学岭南学院\n65.中欧陆家嘴国际金融研究院\n66.华泰证券研究所\n67.上海浦东发展与改革研究院\n68.中国东中西部区域改革与发展研究院\n69.国家信息中心经济预测部\n70.银河证券研究所\n71.南开大学金融学院\n72.中国与全球化智库\n73.国家发改委宏观经济研究院\n74.西安交通大学经济与金融学院\n75.国金证券研究所\n76.海通证券研究所\n77.东北证券研究所\n78.方正证券研究所\n79.广发证券研究所\n80.零点咨询研究集团\n81.厦门大学王亚南经济研究院\n82.春秋发展战略研究院\n83.中原证券研究所\n84.上海交通大学安泰经济与管理学院\n85.对外经贸大学国际经济研究院\n86.汇丰银行\n87.中国社会科学院数量经济与技术经济研究所\n88.交通银行金融研究中心\n89.平安证券研究所\n90.国泰君安证券研究所\n91.兴业经济研究咨询股份有限公司\n92.商务部中国国际经济合作学会\n93.东北财经大学经济学院\n94.安信证券研究所\n95.西南证券研究所\n96.瑞穗证券研究所\n97.中信建投证券研究所\n98.中央财经大学国际经济与贸易学院\n99.中南大学经济学院\n100.中国科学院科技政策与管理科学研究所\n\n\n一、中为咨询\n深圳中为智研咨询有限公司是中国领先的产业与市场研究服务供应商。公司围绕客户的需求持续努力，与客户真诚合作，在调查报告、研究报告、市场调查分析报告、商业计划书、可行性研究、IPO咨询等领域构筑了全面专业优势。中为咨询致力于为企业、投资者和政府等提供有竞争力的调查研究解决方案和服务，持续提升客户体验，为客户创造最大价值。目前，中为咨询的研究成果和解决方案已经应用于3万多家企业，并向海外市场拓展。\n\n中为咨询是中国最为专业的行业市场调查研究机构，企业致力于为行业中高层管理人员、企事业发展研究部门人员、市场投资人士、投行及咨询行业人士、投资专家等提供各行业丰富翔实的产业、行业、市场研究成果；为国内外的行业企业、研究机构、社会团体和政府部门提供专业的产业、行业及市场调查研究、投资咨询、战略咨询等服务。中为咨询拥有多年的投资银行、企业上市一体化服务、市场调查、市场研究、行业研究及投资咨询专业经验。目前，中为咨询已经为上万家包括企业、政府机构、银行、研究所、行业协会、咨询公司、集团公司和各类投资公司在内的单位提供了专业的研究分析报告、项目投资咨询及竞争情报研究服务，并得到客户的广泛认可；为众多企业进行了上市导向战略规划，同时也为境内外多家上市企业进行财务辅导、行业细分领域研究和募投方案的设计，并协助其顺利上市；协助多家证券公司开展IPO业务。\n二、成都中哲咨询\n成都中哲咨询专注于西部，是目前西部领先的咨询与策划的专业机构。中哲咨询业务范围涉及工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等六大版块业务。中哲咨询旗下产品包括可行性研究报告、商业计划书、项目建议书、资金申报报告、投资项目计划书、项目策划、节能评估报告等，为各类客户针对立项/批地/备案/融资/贷款/招商/合作等需求提供定制的咨询报告服务。\n作为国内领先的多元化咨询与策划服务提供商之一，成都中哲咨询建立了政府部门、行业协会、第三方商业数据库三位一体的数据支持平台，保持了与各领域专家顾问和业内资深人士的良好关系，积累了大量商业策划、管理、投资咨询的专业经验，形成了独特的专业研究模型和科学分析方法。\n据业内人士透露，截止2014年底，成都中哲咨询已累计完成各类咨询项目3000余例。该公司既服务于国内客户，又帮助国外企业在中国大陆市场取得更大的成功。同时其服务的客户和合作伙伴涉及世界500强企业、各大商业银行、高校及科研院所、各级政府机构、各类投资金融机构、律师事务所、会计事务所、中小型企业等。\n业务范围：工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等\n三、炳卓咨询\n炳卓咨询是重庆炳卓企业管理咨询有限公司旗下核心业务之一，是国内致力于“为企业和项目提供咨询与策划专业解决方案”的顾问专家机构。炳卓咨询凭借多年的咨询服务经验，可以根据客户的需求设计投融资方案，涉及领域包括工程咨询、投融资咨询等。\n业务范围：炳卓咨询旗下产品包括可行性研究报告、商业计划书、项目计划书、项目建议书、节能评估报告等。\n四、开元国际\n开元国际是以开元国际工程设计研究院(原机械工业部设计研究总院)为核心，与中国机械工业电脑应用技术开发公司、机械工业规划研究院联合重组的集工程咨询、工程设计、工程总承包、项目管理、设备成套和技工贸为一体的工程公司。公司具有甲级工程设计综合资质、房屋建筑工程施工总承包壹级资质(建筑智能化、消防设施、机电设备安装工程专业承包壹级)及对外承包工程资格证书及其相关资质，具有城乡规划、建设监理、工程咨询、工程造价咨询甲级资质;具有压力管道设计资格;具有独立的进出口经营贸易权、对外经济合作资格证书、进出口企业资格证书、自理报关单位注册登记证书、工程招标代理机构资质证书、施工图设计文件审查许可证书及建筑装饰工程设计与施工资质证书。\n业务范围：承接全行业、各等级的工程设计业务和从事工程设计资质标准划分的建筑、机械、医药、船舶、兵器、市政、商业、化工、能源、建材、轻工等21个行业的工程总承包、项目管理等业务及境外工程承包等业务;房屋建筑工程壹级资质范围内的施工总承包、工程总承包和项目管理业务。\n五、汉鼎金融\n汉鼎金融服务集团创立于2006年，经过六年时间的发展，形成了资本+咨询+资讯三驾马车并驾齐驱的综合性金融服务平台。旗下有近10余家全资子公司，形成了完整的资讯、咨询、资本三大业务体系。2012年，汉鼎引入了中国非常知名的3家基金作为汉鼎股东，其中有两家外部股东拥有中国国家社保基金管理资格。汉鼎金融服务集团是北京金融资产交易所的发起会员单位，也是工信部中国中小企业上市服务联盟的发起单位，并同世界顶尖金融资讯公司汤森路透(ThomsonReuters)集团、标准普尔等缔结了合作伙伴关系。\n业务范围：上市申报材料咨询、新三板业务咨询、IPO一体化咨询、并购咨询；一级市场金融服务终端、大数据深度分析、风险预警系统、VCPE行业数据投资研究；并购、财富管理、投行创新业务、金融中介服务。\n六、东盛联合\n东盛联合成立于2005年初，是一家专业务实的商务咨询、策划、实施机构。公司专业为融资企业及个人提供符合国际惯例的商业计划书、投资价值分析报告、可行性研究报告等文件的编撰服务。公司核心成员全部来自相关投资咨询企业，具有多年投融资实战经验。团队的知识结构涉及金融、法律、证券、财务、投资、营销等全方位的经济领域，熟悉资本市场运作流程，充分了解投资人对项目的评审重点、标准及心态偏好。全面的知识结构和丰富的行业经验能够保证我们提供的服务和解决方案行之有效。公司成立两年多来，已经为上百家企业及个人提供了专业服务所在地区包括华北、华南、华中、东北等全国大部分地区.其编撰的融资文件已被多家国际投资机构认可,部分客户已经成功获得投资。\n业务范围：囊括电子信息、生物工程、环保、医药、材料、能源化工、交通、国际贸易、基础设施、房地产、种、养殖业和旅游业等项目服务与管理。\n七、中商顾问\n中商顾问咨询服务集团是由中国知名的资讯管理理论专家和竞争情报实战派携手创建的，是国内领先的研究及咨询服务机构。是中国领先的研究及咨询服务机构，集团下辖投融资咨询、行业研究、专项咨询三个事业群。\n业务范围:主要覆盖细分产业市场研究、项目可行性研究、市场调研、企业IPO上市整体解决方案、专项市场解决方案、产业规划咨询、产业园区规划、产业园区运营管理咨询、政府招商促进、企业发展战略规划、营销咨询、管理咨询等以及为满足企业学习和提升经营能力的世界级经营管理智慧。\n八、尚普咨询\n尚普咨询全称为“北京尚普信息咨询有限公司”，凭借多年的咨询服务经验，公司已成为投资咨询和市场调研领域的领导者，并率先通过ISO9001:2008国际质量管理体系认证。目前，公司专家库成员已达1500余位，专家特长覆盖各个领域。\n业务范围：尚普咨询凭借近十年的咨询服务经验，现已拥有投资咨询、行业研究、市场调研、拟上市企业IPO咨询四大业务模块，提供可行性研究报告、项目申请报告、立项报告、节能评估、社会稳定风险评估、项目实施方案、资金申请报告、商业融资计划书、项目建议书、投资机会研究、产业园区规划、行业研究、竞争对手调查、市场进入研究、消费者研究、IPO细分市场研究等咨询服务。\n九、华灵四方\n华灵四方成立于2005年1月，公司以“市场+技术+管理+资本运营\"四位一体的服务模式，协助客户在战略、资本运营、技术、管理、市场和项目发展等方面全面提升竞争力，为客户提供全方位的战略咨询、上市投融资咨询、管理咨询、工程咨询(包括可行性研究报告编写，项目申请报告编写、节能评估报告编写等)、市场调查和行业研究。截至2012年，华灵四方拥有2800多家全球知名客户，以高质量的服务赢得客户广泛赞誉，其中包括40多家世界500强客户，成为大量欧美公司和行业领导企业中国业务咨询的首选合作伙伴，是中国咨询业的高端品牌。\n业务范围：在上市咨询方面，主要为中小板和创业板企业上市提供咨询服务，服务内容包括募投项目可研报告、引入战略投资者、上市规划、上市辅导、增发，在行业内具有较好的品牌和名声，其中5家已经成功上市。\n十、大森咨询\n大森咨询为大森文案工作室旗下品牌。大森文案前身为大森投资咨询有限公司项目部，大森是一家从事市场研究和项目咨询的专业机构。长期以来一直从事企业调研，行业分析以及企业项目立项服务等工作。大森文案工作室目前已与全国多家省级工程设计院建立长期合作关系，将自有资源和市场资源结合起来，为客户提供更为有效、更为专业的服务。\n业务范围：主要提供项目规划咨询、编制项目建议书、编制项目可行性研究报告、编制项目申请报告、编制资金申请报告等服务，专业范围涉及化工、医药、轻工、机械、建筑、农业综合开发等。","source":"_posts/20170210.md","raw":"---\ntitle: 经济研究资料（资料定期更新补充）\ndate: 2017-02-10 10:46:25\ntags:\n---\n\n区间涨跌幅统计：通达信软件里输入.403统计，随意选择区间，输入34导出数据。 \n  \n年报          ：http://data.eastmoney.com/bbsj/201012/fsrq/1.html \n 2010年年报沪市披露日期：http://www.sse.com.cn/sseportal/webapp/listcompany/qrybltnbookinfo \n 2010年年报深市披露日期： \nhttp://www.cninfo.com.cn/disclosure/prbookinfo.jsp \n财经报道      ：http://www.cfi.net.cn \n                 http://www.cs.com.cn/ \n                 http://www.p5w.net/kuaixun/index.htm \n                 http://finance.ifeng.com/ \n                 http://www.cnstock.com/ \n                 http://www.eastmoney.com/ \n                 http://www.dingniu8.com/ \n大单统计      ：http://www.gupiaodadan.com/ \n基金每日净值：  http://www.ourku.com/ \n交易提示      ：http://finance.ifeng.com/stock/ts/index.shtml \n                 http://www.p5w.net/stock/ssgsyj/ \n领导动态      ：http://www.people.com.cn/ \n龙虎榜        ：http://www.yz21.org/stock/szsec/ \n几大人气bbs   ：http://bbs.macd.cn/ \n                 http://www.taoguba.com.cn/index.action?blockID=1 \n                 http://www.55188.com/index.php \n钢铁          ：http://www.mysteel.com/ \n中纤网        ：http://www.ccfei.net/Index.aspx \n中金所        ：http://www.cffex.com.cn/fzjy/ccpm/ \n三季报        ：http://data.eastmoney.com/bbsj/201009.html \n研究报告      ：http://bbs.moneyqoo.com/forumdisplay.php?fid=29 \n历史数据下载  ：http://down.88158.cn/ \n国际财经      ：http://international.caixun.com/ \n美股指数      ：http://finance.google.com/finance \n网页行情      ：http://biz.finance.sina.com.cn/hq/ \n国际期货      ：http://finance.sina.com.cn/money/future/hf.html \n郑州商品交易所期货：http://vip.stock.finance.sina.com.cn/quotes_service/view/qihuohangqing.html#titlePos_0 \n欧洲指数      ：http://finance.yahoo.com/intlindices?e=europe \n沪市每日公开信息： \nhttp://www.sse.com.cn/sseportal/webapp/datapresent/SSENewTradeInfoPublishAct \n深市主板公开信息： \nhttp://www.szse.cn/main/disclosure/news/scgkxx/ \n深市中小板公开信息： \nhttp://www.szse.cn/main/sme/jytj/jygkxx/ \n创业板公开信息： \nhttp://www.szse.cn/main/chinext/jygkxx/jygkxx/ \n荐股之王博客：http://blog.gutx.com/blog/%BC%F6%B9%C9%D6%AE%CD%F5/ \n思绪飘零：http://blog.sina.com.cn/sxf671212 \n\n\n国内前20大综合实力研究咨询智库机构排名情况\n1、国务院发展研究中心http://www.drc.gov.cn/\n2、中国社会科学院http://cass.cssn.cn/\n3、上海社会科学院http://www.sass.org.cn/\n4、北京大学国家发展研究院http://www.nsd.edu.cn/\n5、中共中央党校http://www.ccps.gov.cn/\n6、发改委宏观经济研究院http://www.amr.gov.cn/\n7、环境保护部环境规划院http://www.caep.org.cn/\n8、中国国际经济交流中心http://www.cciee.org.cn/\n9、零点研究咨询集团http://www.horizon-china.com/\n10、中国人民大学重阳金融研究院http://rdcy-sf.ruc.edu.cn/\n11、清华大学国情研究咨询院http://www.zwzyzx.com/\n12、中国（海南）改革发展研究院http://www.cird.org.cn/\n13、中国与全球化智库http://www.ccg.org.cn/\n14、中国经济体制改革研究会http://www.cser.org.cn/\n15、复旦大学美国研究中心http://www.cas.fudan.edu.cn/\n16、清华大学当代国际关系研究院http://www.tsinghua.edu.cn/\n17、中国金融40人论坛http://www.cf40.org.cn/\n18、外交部中国国际问题研究院http://www.ciis.org.cn/\n\n20、商务部国际贸易经济合作研究院http://www.caitec.org.cn\n\n中国经济类研究机构市场价值排行榜（2016）\n\n排名 经济类研究机构名称\n1.中国人民大学经济学院\n \n2.国务院发展研究中心市场经济研究所\n\n3.北京大学国家发展研究院\n \n4.北京大学经济学院\n \n5.中国社会科学院世界经济与政治研究所\n \n6.清华大学经济管理学院\n \n7.复旦大学经济学院\n \n8.中南财经政法大学经济学院\n \n9.南开大学经济研究所\n \n10.中国人民大学财政金融学院\n11.南开大学经济学院\n12.清华大学五道口金融学院\n13.厦门大学经济学院\n14.吉林大学经济学院\n15.浙江大学经济学院\n16.中国社会科学院金融研究所\n17.上海财经大学经济学院\n18.清华大学国情研究院\n19.南京大学经济学院\n20.民生证券研究所\n21.北京大学光华管理学院\n22.中央财经大学金融学院\n23.山东大学经济学院\n24.南开大学国家经济战略研究院\n25.中国人民银行研究局\n26.中国（海南）改革发展研究院\n27.北京证券期货研究院\n28.中国社会科学院经济研究所\n29.中国经济改革研究基金会国民经济研究所\n30.中国人民大学国家发展与战略研究院\n31.四川大学经济学院\n32.中国人民大学国际货币研究所\n33.中国社会科学院人口与劳动经济研究所\n34.北京大学汇丰商学院\n35.财政部财政科学研究所\n36.中国社会科学院财经战略研究院\n37.武汉大学经济与管理学院\n38.国务院发展研究中心宏观经济研究部\n39.中国国际经济交流中心\n40.国务院发展研究中心金融研究所\n41.华夏新供给经济研究院\n42.华中科技大学经济学院\n43.第一财经研究院\n44.中央财经大学经济学院\n45.东南大学经济管理学院\n46.环球财经研究院\n47.北京保险研究院\n48.商务部国际贸易经济合作研究院\n49.上海财经大学金融学院\n50.上海财经大学上海发展研究院\n51.对外经贸大学国际经济贸易学院\n52.中华联合保险控股股份有限公司研究所\n53.天则经济研究所\n54.武汉科技大学金融证券研究所\n55.中泰证券研究所\n56.西南财经大学经济学院\n57.北京师范大学经济与工商管理学院\n58.天津大学管理与经济学部\n59.中国国际金融有限公司\n60.中国经济体制改革研究会\n61.清华大学中国财政税收研究所\n62.首都经贸大学经济学院\n63.上海交通大学高级金融学院\n64.中山大学岭南学院\n65.中欧陆家嘴国际金融研究院\n66.华泰证券研究所\n67.上海浦东发展与改革研究院\n68.中国东中西部区域改革与发展研究院\n69.国家信息中心经济预测部\n70.银河证券研究所\n71.南开大学金融学院\n72.中国与全球化智库\n73.国家发改委宏观经济研究院\n74.西安交通大学经济与金融学院\n75.国金证券研究所\n76.海通证券研究所\n77.东北证券研究所\n78.方正证券研究所\n79.广发证券研究所\n80.零点咨询研究集团\n81.厦门大学王亚南经济研究院\n82.春秋发展战略研究院\n83.中原证券研究所\n84.上海交通大学安泰经济与管理学院\n85.对外经贸大学国际经济研究院\n86.汇丰银行\n87.中国社会科学院数量经济与技术经济研究所\n88.交通银行金融研究中心\n89.平安证券研究所\n90.国泰君安证券研究所\n91.兴业经济研究咨询股份有限公司\n92.商务部中国国际经济合作学会\n93.东北财经大学经济学院\n94.安信证券研究所\n95.西南证券研究所\n96.瑞穗证券研究所\n97.中信建投证券研究所\n98.中央财经大学国际经济与贸易学院\n99.中南大学经济学院\n100.中国科学院科技政策与管理科学研究所\n\n\n一、中为咨询\n深圳中为智研咨询有限公司是中国领先的产业与市场研究服务供应商。公司围绕客户的需求持续努力，与客户真诚合作，在调查报告、研究报告、市场调查分析报告、商业计划书、可行性研究、IPO咨询等领域构筑了全面专业优势。中为咨询致力于为企业、投资者和政府等提供有竞争力的调查研究解决方案和服务，持续提升客户体验，为客户创造最大价值。目前，中为咨询的研究成果和解决方案已经应用于3万多家企业，并向海外市场拓展。\n\n中为咨询是中国最为专业的行业市场调查研究机构，企业致力于为行业中高层管理人员、企事业发展研究部门人员、市场投资人士、投行及咨询行业人士、投资专家等提供各行业丰富翔实的产业、行业、市场研究成果；为国内外的行业企业、研究机构、社会团体和政府部门提供专业的产业、行业及市场调查研究、投资咨询、战略咨询等服务。中为咨询拥有多年的投资银行、企业上市一体化服务、市场调查、市场研究、行业研究及投资咨询专业经验。目前，中为咨询已经为上万家包括企业、政府机构、银行、研究所、行业协会、咨询公司、集团公司和各类投资公司在内的单位提供了专业的研究分析报告、项目投资咨询及竞争情报研究服务，并得到客户的广泛认可；为众多企业进行了上市导向战略规划，同时也为境内外多家上市企业进行财务辅导、行业细分领域研究和募投方案的设计，并协助其顺利上市；协助多家证券公司开展IPO业务。\n二、成都中哲咨询\n成都中哲咨询专注于西部，是目前西部领先的咨询与策划的专业机构。中哲咨询业务范围涉及工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等六大版块业务。中哲咨询旗下产品包括可行性研究报告、商业计划书、项目建议书、资金申报报告、投资项目计划书、项目策划、节能评估报告等，为各类客户针对立项/批地/备案/融资/贷款/招商/合作等需求提供定制的咨询报告服务。\n作为国内领先的多元化咨询与策划服务提供商之一，成都中哲咨询建立了政府部门、行业协会、第三方商业数据库三位一体的数据支持平台，保持了与各领域专家顾问和业内资深人士的良好关系，积累了大量商业策划、管理、投资咨询的专业经验，形成了独特的专业研究模型和科学分析方法。\n据业内人士透露，截止2014年底，成都中哲咨询已累计完成各类咨询项目3000余例。该公司既服务于国内客户，又帮助国外企业在中国大陆市场取得更大的成功。同时其服务的客户和合作伙伴涉及世界500强企业、各大商业银行、高校及科研院所、各级政府机构、各类投资金融机构、律师事务所、会计事务所、中小型企业等。\n业务范围：工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等\n三、炳卓咨询\n炳卓咨询是重庆炳卓企业管理咨询有限公司旗下核心业务之一，是国内致力于“为企业和项目提供咨询与策划专业解决方案”的顾问专家机构。炳卓咨询凭借多年的咨询服务经验，可以根据客户的需求设计投融资方案，涉及领域包括工程咨询、投融资咨询等。\n业务范围：炳卓咨询旗下产品包括可行性研究报告、商业计划书、项目计划书、项目建议书、节能评估报告等。\n四、开元国际\n开元国际是以开元国际工程设计研究院(原机械工业部设计研究总院)为核心，与中国机械工业电脑应用技术开发公司、机械工业规划研究院联合重组的集工程咨询、工程设计、工程总承包、项目管理、设备成套和技工贸为一体的工程公司。公司具有甲级工程设计综合资质、房屋建筑工程施工总承包壹级资质(建筑智能化、消防设施、机电设备安装工程专业承包壹级)及对外承包工程资格证书及其相关资质，具有城乡规划、建设监理、工程咨询、工程造价咨询甲级资质;具有压力管道设计资格;具有独立的进出口经营贸易权、对外经济合作资格证书、进出口企业资格证书、自理报关单位注册登记证书、工程招标代理机构资质证书、施工图设计文件审查许可证书及建筑装饰工程设计与施工资质证书。\n业务范围：承接全行业、各等级的工程设计业务和从事工程设计资质标准划分的建筑、机械、医药、船舶、兵器、市政、商业、化工、能源、建材、轻工等21个行业的工程总承包、项目管理等业务及境外工程承包等业务;房屋建筑工程壹级资质范围内的施工总承包、工程总承包和项目管理业务。\n五、汉鼎金融\n汉鼎金融服务集团创立于2006年，经过六年时间的发展，形成了资本+咨询+资讯三驾马车并驾齐驱的综合性金融服务平台。旗下有近10余家全资子公司，形成了完整的资讯、咨询、资本三大业务体系。2012年，汉鼎引入了中国非常知名的3家基金作为汉鼎股东，其中有两家外部股东拥有中国国家社保基金管理资格。汉鼎金融服务集团是北京金融资产交易所的发起会员单位，也是工信部中国中小企业上市服务联盟的发起单位，并同世界顶尖金融资讯公司汤森路透(ThomsonReuters)集团、标准普尔等缔结了合作伙伴关系。\n业务范围：上市申报材料咨询、新三板业务咨询、IPO一体化咨询、并购咨询；一级市场金融服务终端、大数据深度分析、风险预警系统、VCPE行业数据投资研究；并购、财富管理、投行创新业务、金融中介服务。\n六、东盛联合\n东盛联合成立于2005年初，是一家专业务实的商务咨询、策划、实施机构。公司专业为融资企业及个人提供符合国际惯例的商业计划书、投资价值分析报告、可行性研究报告等文件的编撰服务。公司核心成员全部来自相关投资咨询企业，具有多年投融资实战经验。团队的知识结构涉及金融、法律、证券、财务、投资、营销等全方位的经济领域，熟悉资本市场运作流程，充分了解投资人对项目的评审重点、标准及心态偏好。全面的知识结构和丰富的行业经验能够保证我们提供的服务和解决方案行之有效。公司成立两年多来，已经为上百家企业及个人提供了专业服务所在地区包括华北、华南、华中、东北等全国大部分地区.其编撰的融资文件已被多家国际投资机构认可,部分客户已经成功获得投资。\n业务范围：囊括电子信息、生物工程、环保、医药、材料、能源化工、交通、国际贸易、基础设施、房地产、种、养殖业和旅游业等项目服务与管理。\n七、中商顾问\n中商顾问咨询服务集团是由中国知名的资讯管理理论专家和竞争情报实战派携手创建的，是国内领先的研究及咨询服务机构。是中国领先的研究及咨询服务机构，集团下辖投融资咨询、行业研究、专项咨询三个事业群。\n业务范围:主要覆盖细分产业市场研究、项目可行性研究、市场调研、企业IPO上市整体解决方案、专项市场解决方案、产业规划咨询、产业园区规划、产业园区运营管理咨询、政府招商促进、企业发展战略规划、营销咨询、管理咨询等以及为满足企业学习和提升经营能力的世界级经营管理智慧。\n八、尚普咨询\n尚普咨询全称为“北京尚普信息咨询有限公司”，凭借多年的咨询服务经验，公司已成为投资咨询和市场调研领域的领导者，并率先通过ISO9001:2008国际质量管理体系认证。目前，公司专家库成员已达1500余位，专家特长覆盖各个领域。\n业务范围：尚普咨询凭借近十年的咨询服务经验，现已拥有投资咨询、行业研究、市场调研、拟上市企业IPO咨询四大业务模块，提供可行性研究报告、项目申请报告、立项报告、节能评估、社会稳定风险评估、项目实施方案、资金申请报告、商业融资计划书、项目建议书、投资机会研究、产业园区规划、行业研究、竞争对手调查、市场进入研究、消费者研究、IPO细分市场研究等咨询服务。\n九、华灵四方\n华灵四方成立于2005年1月，公司以“市场+技术+管理+资本运营\"四位一体的服务模式，协助客户在战略、资本运营、技术、管理、市场和项目发展等方面全面提升竞争力，为客户提供全方位的战略咨询、上市投融资咨询、管理咨询、工程咨询(包括可行性研究报告编写，项目申请报告编写、节能评估报告编写等)、市场调查和行业研究。截至2012年，华灵四方拥有2800多家全球知名客户，以高质量的服务赢得客户广泛赞誉，其中包括40多家世界500强客户，成为大量欧美公司和行业领导企业中国业务咨询的首选合作伙伴，是中国咨询业的高端品牌。\n业务范围：在上市咨询方面，主要为中小板和创业板企业上市提供咨询服务，服务内容包括募投项目可研报告、引入战略投资者、上市规划、上市辅导、增发，在行业内具有较好的品牌和名声，其中5家已经成功上市。\n十、大森咨询\n大森咨询为大森文案工作室旗下品牌。大森文案前身为大森投资咨询有限公司项目部，大森是一家从事市场研究和项目咨询的专业机构。长期以来一直从事企业调研，行业分析以及企业项目立项服务等工作。大森文案工作室目前已与全国多家省级工程设计院建立长期合作关系，将自有资源和市场资源结合起来，为客户提供更为有效、更为专业的服务。\n业务范围：主要提供项目规划咨询、编制项目建议书、编制项目可行性研究报告、编制项目申请报告、编制资金申请报告等服务，专业范围涉及化工、医药、轻工、机械、建筑、农业综合开发等。","slug":"20170210","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlq000g2oi85vyb4uu9","content":"<p>区间涨跌幅统计：通达信软件里输入.403统计，随意选择区间，输入34导出数据。 </p>\n<p>年报          ：<a href=\"http://data.eastmoney.com/bbsj/201012/fsrq/1.html\" target=\"_blank\" rel=\"noopener\">http://data.eastmoney.com/bbsj/201012/fsrq/1.html</a><br> 2010年年报沪市披露日期：<a href=\"http://www.sse.com.cn/sseportal/webapp/listcompany/qrybltnbookinfo\" target=\"_blank\" rel=\"noopener\">http://www.sse.com.cn/sseportal/webapp/listcompany/qrybltnbookinfo</a><br> 2010年年报深市披露日期：<br><a href=\"http://www.cninfo.com.cn/disclosure/prbookinfo.jsp\" target=\"_blank\" rel=\"noopener\">http://www.cninfo.com.cn/disclosure/prbookinfo.jsp</a><br>财经报道      ：<a href=\"http://www.cfi.net.cn\" target=\"_blank\" rel=\"noopener\">http://www.cfi.net.cn</a><br>                 <a href=\"http://www.cs.com.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cs.com.cn/</a><br>                 <a href=\"http://www.p5w.net/kuaixun/index.htm\" target=\"_blank\" rel=\"noopener\">http://www.p5w.net/kuaixun/index.htm</a><br>                 <a href=\"http://finance.ifeng.com/\" target=\"_blank\" rel=\"noopener\">http://finance.ifeng.com/</a><br>                 <a href=\"http://www.cnstock.com/\" target=\"_blank\" rel=\"noopener\">http://www.cnstock.com/</a><br>                 <a href=\"http://www.eastmoney.com/\" target=\"_blank\" rel=\"noopener\">http://www.eastmoney.com/</a><br>                 <a href=\"http://www.dingniu8.com/\" target=\"_blank\" rel=\"noopener\">http://www.dingniu8.com/</a><br>大单统计      ：<a href=\"http://www.gupiaodadan.com/\" target=\"_blank\" rel=\"noopener\">http://www.gupiaodadan.com/</a><br>基金每日净值：  <a href=\"http://www.ourku.com/\" target=\"_blank\" rel=\"noopener\">http://www.ourku.com/</a><br>交易提示      ：<a href=\"http://finance.ifeng.com/stock/ts/index.shtml\" target=\"_blank\" rel=\"noopener\">http://finance.ifeng.com/stock/ts/index.shtml</a><br>                 <a href=\"http://www.p5w.net/stock/ssgsyj/\" target=\"_blank\" rel=\"noopener\">http://www.p5w.net/stock/ssgsyj/</a><br>领导动态      ：<a href=\"http://www.people.com.cn/\" target=\"_blank\" rel=\"noopener\">http://www.people.com.cn/</a><br>龙虎榜        ：<a href=\"http://www.yz21.org/stock/szsec/\" target=\"_blank\" rel=\"noopener\">http://www.yz21.org/stock/szsec/</a><br>几大人气bbs   ：<a href=\"http://bbs.macd.cn/\" target=\"_blank\" rel=\"noopener\">http://bbs.macd.cn/</a><br>                 <a href=\"http://www.taoguba.com.cn/index.action?blockID=1\" target=\"_blank\" rel=\"noopener\">http://www.taoguba.com.cn/index.action?blockID=1</a><br>                 <a href=\"http://www.55188.com/index.php\" target=\"_blank\" rel=\"noopener\">http://www.55188.com/index.php</a><br>钢铁          ：<a href=\"http://www.mysteel.com/\" target=\"_blank\" rel=\"noopener\">http://www.mysteel.com/</a><br>中纤网        ：<a href=\"http://www.ccfei.net/Index.aspx\" target=\"_blank\" rel=\"noopener\">http://www.ccfei.net/Index.aspx</a><br>中金所        ：<a href=\"http://www.cffex.com.cn/fzjy/ccpm/\" target=\"_blank\" rel=\"noopener\">http://www.cffex.com.cn/fzjy/ccpm/</a><br>三季报        ：<a href=\"http://data.eastmoney.com/bbsj/201009.html\" target=\"_blank\" rel=\"noopener\">http://data.eastmoney.com/bbsj/201009.html</a><br>研究报告      ：<a href=\"http://bbs.moneyqoo.com/forumdisplay.php?fid=29\" target=\"_blank\" rel=\"noopener\">http://bbs.moneyqoo.com/forumdisplay.php?fid=29</a><br>历史数据下载  ：<a href=\"http://down.88158.cn/\" target=\"_blank\" rel=\"noopener\">http://down.88158.cn/</a><br>国际财经      ：<a href=\"http://international.caixun.com/\" target=\"_blank\" rel=\"noopener\">http://international.caixun.com/</a><br>美股指数      ：<a href=\"http://finance.google.com/finance\" target=\"_blank\" rel=\"noopener\">http://finance.google.com/finance</a><br>网页行情      ：<a href=\"http://biz.finance.sina.com.cn/hq/\" target=\"_blank\" rel=\"noopener\">http://biz.finance.sina.com.cn/hq/</a><br>国际期货      ：<a href=\"http://finance.sina.com.cn/money/future/hf.html\" target=\"_blank\" rel=\"noopener\">http://finance.sina.com.cn/money/future/hf.html</a><br>郑州商品交易所期货：<a href=\"http://vip.stock.finance.sina.com.cn/quotes_service/view/qihuohangqing.html#titlePos_0\" target=\"_blank\" rel=\"noopener\">http://vip.stock.finance.sina.com.cn/quotes_service/view/qihuohangqing.html#titlePos_0</a><br>欧洲指数      ：<a href=\"http://finance.yahoo.com/intlindices?e=europe\" target=\"_blank\" rel=\"noopener\">http://finance.yahoo.com/intlindices?e=europe</a><br>沪市每日公开信息：<br><a href=\"http://www.sse.com.cn/sseportal/webapp/datapresent/SSENewTradeInfoPublishAct\" target=\"_blank\" rel=\"noopener\">http://www.sse.com.cn/sseportal/webapp/datapresent/SSENewTradeInfoPublishAct</a><br>深市主板公开信息：<br><a href=\"http://www.szse.cn/main/disclosure/news/scgkxx/\" target=\"_blank\" rel=\"noopener\">http://www.szse.cn/main/disclosure/news/scgkxx/</a><br>深市中小板公开信息：<br><a href=\"http://www.szse.cn/main/sme/jytj/jygkxx/\" target=\"_blank\" rel=\"noopener\">http://www.szse.cn/main/sme/jytj/jygkxx/</a><br>创业板公开信息：<br><a href=\"http://www.szse.cn/main/chinext/jygkxx/jygkxx/\" target=\"_blank\" rel=\"noopener\">http://www.szse.cn/main/chinext/jygkxx/jygkxx/</a><br>荐股之王博客：<a href=\"http://blog.gutx.com/blog/%BC%F6%B9%C9%D6%AE%CD%F5/\" target=\"_blank\" rel=\"noopener\">http://blog.gutx.com/blog/%BC%F6%B9%C9%D6%AE%CD%F5/</a><br>思绪飘零：<a href=\"http://blog.sina.com.cn/sxf671212\" target=\"_blank\" rel=\"noopener\">http://blog.sina.com.cn/sxf671212</a> </p>\n<p>国内前20大综合实力研究咨询智库机构排名情况<br>1、国务院发展研究中心<a href=\"http://www.drc.gov.cn/\" target=\"_blank\" rel=\"noopener\">http://www.drc.gov.cn/</a><br>2、中国社会科学院<a href=\"http://cass.cssn.cn/\" target=\"_blank\" rel=\"noopener\">http://cass.cssn.cn/</a><br>3、上海社会科学院<a href=\"http://www.sass.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.sass.org.cn/</a><br>4、北京大学国家发展研究院<a href=\"http://www.nsd.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://www.nsd.edu.cn/</a><br>5、中共中央党校<a href=\"http://www.ccps.gov.cn/\" target=\"_blank\" rel=\"noopener\">http://www.ccps.gov.cn/</a><br>6、发改委宏观经济研究院<a href=\"http://www.amr.gov.cn/\" target=\"_blank\" rel=\"noopener\">http://www.amr.gov.cn/</a><br>7、环境保护部环境规划院<a href=\"http://www.caep.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.caep.org.cn/</a><br>8、中国国际经济交流中心<a href=\"http://www.cciee.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cciee.org.cn/</a><br>9、零点研究咨询集团<a href=\"http://www.horizon-china.com/\" target=\"_blank\" rel=\"noopener\">http://www.horizon-china.com/</a><br>10、中国人民大学重阳金融研究院<a href=\"http://rdcy-sf.ruc.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://rdcy-sf.ruc.edu.cn/</a><br>11、清华大学国情研究咨询院<a href=\"http://www.zwzyzx.com/\" target=\"_blank\" rel=\"noopener\">http://www.zwzyzx.com/</a><br>12、中国（海南）改革发展研究院<a href=\"http://www.cird.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cird.org.cn/</a><br>13、中国与全球化智库<a href=\"http://www.ccg.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.ccg.org.cn/</a><br>14、中国经济体制改革研究会<a href=\"http://www.cser.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cser.org.cn/</a><br>15、复旦大学美国研究中心<a href=\"http://www.cas.fudan.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cas.fudan.edu.cn/</a><br>16、清华大学当代国际关系研究院<a href=\"http://www.tsinghua.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://www.tsinghua.edu.cn/</a><br>17、中国金融40人论坛<a href=\"http://www.cf40.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cf40.org.cn/</a><br>18、外交部中国国际问题研究院<a href=\"http://www.ciis.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.ciis.org.cn/</a></p>\n<p>20、商务部国际贸易经济合作研究院<a href=\"http://www.caitec.org.cn\" target=\"_blank\" rel=\"noopener\">http://www.caitec.org.cn</a></p>\n<p>中国经济类研究机构市场价值排行榜（2016）</p>\n<p>排名 经济类研究机构名称<br>1.中国人民大学经济学院</p>\n<p>2.国务院发展研究中心市场经济研究所</p>\n<p>3.北京大学国家发展研究院</p>\n<p>4.北京大学经济学院</p>\n<p>5.中国社会科学院世界经济与政治研究所</p>\n<p>6.清华大学经济管理学院</p>\n<p>7.复旦大学经济学院</p>\n<p>8.中南财经政法大学经济学院</p>\n<p>9.南开大学经济研究所</p>\n<p>10.中国人民大学财政金融学院<br>11.南开大学经济学院<br>12.清华大学五道口金融学院<br>13.厦门大学经济学院<br>14.吉林大学经济学院<br>15.浙江大学经济学院<br>16.中国社会科学院金融研究所<br>17.上海财经大学经济学院<br>18.清华大学国情研究院<br>19.南京大学经济学院<br>20.民生证券研究所<br>21.北京大学光华管理学院<br>22.中央财经大学金融学院<br>23.山东大学经济学院<br>24.南开大学国家经济战略研究院<br>25.中国人民银行研究局<br>26.中国（海南）改革发展研究院<br>27.北京证券期货研究院<br>28.中国社会科学院经济研究所<br>29.中国经济改革研究基金会国民经济研究所<br>30.中国人民大学国家发展与战略研究院<br>31.四川大学经济学院<br>32.中国人民大学国际货币研究所<br>33.中国社会科学院人口与劳动经济研究所<br>34.北京大学汇丰商学院<br>35.财政部财政科学研究所<br>36.中国社会科学院财经战略研究院<br>37.武汉大学经济与管理学院<br>38.国务院发展研究中心宏观经济研究部<br>39.中国国际经济交流中心<br>40.国务院发展研究中心金融研究所<br>41.华夏新供给经济研究院<br>42.华中科技大学经济学院<br>43.第一财经研究院<br>44.中央财经大学经济学院<br>45.东南大学经济管理学院<br>46.环球财经研究院<br>47.北京保险研究院<br>48.商务部国际贸易经济合作研究院<br>49.上海财经大学金融学院<br>50.上海财经大学上海发展研究院<br>51.对外经贸大学国际经济贸易学院<br>52.中华联合保险控股股份有限公司研究所<br>53.天则经济研究所<br>54.武汉科技大学金融证券研究所<br>55.中泰证券研究所<br>56.西南财经大学经济学院<br>57.北京师范大学经济与工商管理学院<br>58.天津大学管理与经济学部<br>59.中国国际金融有限公司<br>60.中国经济体制改革研究会<br>61.清华大学中国财政税收研究所<br>62.首都经贸大学经济学院<br>63.上海交通大学高级金融学院<br>64.中山大学岭南学院<br>65.中欧陆家嘴国际金融研究院<br>66.华泰证券研究所<br>67.上海浦东发展与改革研究院<br>68.中国东中西部区域改革与发展研究院<br>69.国家信息中心经济预测部<br>70.银河证券研究所<br>71.南开大学金融学院<br>72.中国与全球化智库<br>73.国家发改委宏观经济研究院<br>74.西安交通大学经济与金融学院<br>75.国金证券研究所<br>76.海通证券研究所<br>77.东北证券研究所<br>78.方正证券研究所<br>79.广发证券研究所<br>80.零点咨询研究集团<br>81.厦门大学王亚南经济研究院<br>82.春秋发展战略研究院<br>83.中原证券研究所<br>84.上海交通大学安泰经济与管理学院<br>85.对外经贸大学国际经济研究院<br>86.汇丰银行<br>87.中国社会科学院数量经济与技术经济研究所<br>88.交通银行金融研究中心<br>89.平安证券研究所<br>90.国泰君安证券研究所<br>91.兴业经济研究咨询股份有限公司<br>92.商务部中国国际经济合作学会<br>93.东北财经大学经济学院<br>94.安信证券研究所<br>95.西南证券研究所<br>96.瑞穗证券研究所<br>97.中信建投证券研究所<br>98.中央财经大学国际经济与贸易学院<br>99.中南大学经济学院<br>100.中国科学院科技政策与管理科学研究所</p>\n<p>一、中为咨询<br>深圳中为智研咨询有限公司是中国领先的产业与市场研究服务供应商。公司围绕客户的需求持续努力，与客户真诚合作，在调查报告、研究报告、市场调查分析报告、商业计划书、可行性研究、IPO咨询等领域构筑了全面专业优势。中为咨询致力于为企业、投资者和政府等提供有竞争力的调查研究解决方案和服务，持续提升客户体验，为客户创造最大价值。目前，中为咨询的研究成果和解决方案已经应用于3万多家企业，并向海外市场拓展。</p>\n<p>中为咨询是中国最为专业的行业市场调查研究机构，企业致力于为行业中高层管理人员、企事业发展研究部门人员、市场投资人士、投行及咨询行业人士、投资专家等提供各行业丰富翔实的产业、行业、市场研究成果；为国内外的行业企业、研究机构、社会团体和政府部门提供专业的产业、行业及市场调查研究、投资咨询、战略咨询等服务。中为咨询拥有多年的投资银行、企业上市一体化服务、市场调查、市场研究、行业研究及投资咨询专业经验。目前，中为咨询已经为上万家包括企业、政府机构、银行、研究所、行业协会、咨询公司、集团公司和各类投资公司在内的单位提供了专业的研究分析报告、项目投资咨询及竞争情报研究服务，并得到客户的广泛认可；为众多企业进行了上市导向战略规划，同时也为境内外多家上市企业进行财务辅导、行业细分领域研究和募投方案的设计，并协助其顺利上市；协助多家证券公司开展IPO业务。<br>二、成都中哲咨询<br>成都中哲咨询专注于西部，是目前西部领先的咨询与策划的专业机构。中哲咨询业务范围涉及工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等六大版块业务。中哲咨询旗下产品包括可行性研究报告、商业计划书、项目建议书、资金申报报告、投资项目计划书、项目策划、节能评估报告等，为各类客户针对立项/批地/备案/融资/贷款/招商/合作等需求提供定制的咨询报告服务。<br>作为国内领先的多元化咨询与策划服务提供商之一，成都中哲咨询建立了政府部门、行业协会、第三方商业数据库三位一体的数据支持平台，保持了与各领域专家顾问和业内资深人士的良好关系，积累了大量商业策划、管理、投资咨询的专业经验，形成了独特的专业研究模型和科学分析方法。<br>据业内人士透露，截止2014年底，成都中哲咨询已累计完成各类咨询项目3000余例。该公司既服务于国内客户，又帮助国外企业在中国大陆市场取得更大的成功。同时其服务的客户和合作伙伴涉及世界500强企业、各大商业银行、高校及科研院所、各级政府机构、各类投资金融机构、律师事务所、会计事务所、中小型企业等。<br>业务范围：工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等<br>三、炳卓咨询<br>炳卓咨询是重庆炳卓企业管理咨询有限公司旗下核心业务之一，是国内致力于“为企业和项目提供咨询与策划专业解决方案”的顾问专家机构。炳卓咨询凭借多年的咨询服务经验，可以根据客户的需求设计投融资方案，涉及领域包括工程咨询、投融资咨询等。<br>业务范围：炳卓咨询旗下产品包括可行性研究报告、商业计划书、项目计划书、项目建议书、节能评估报告等。<br>四、开元国际<br>开元国际是以开元国际工程设计研究院(原机械工业部设计研究总院)为核心，与中国机械工业电脑应用技术开发公司、机械工业规划研究院联合重组的集工程咨询、工程设计、工程总承包、项目管理、设备成套和技工贸为一体的工程公司。公司具有甲级工程设计综合资质、房屋建筑工程施工总承包壹级资质(建筑智能化、消防设施、机电设备安装工程专业承包壹级)及对外承包工程资格证书及其相关资质，具有城乡规划、建设监理、工程咨询、工程造价咨询甲级资质;具有压力管道设计资格;具有独立的进出口经营贸易权、对外经济合作资格证书、进出口企业资格证书、自理报关单位注册登记证书、工程招标代理机构资质证书、施工图设计文件审查许可证书及建筑装饰工程设计与施工资质证书。<br>业务范围：承接全行业、各等级的工程设计业务和从事工程设计资质标准划分的建筑、机械、医药、船舶、兵器、市政、商业、化工、能源、建材、轻工等21个行业的工程总承包、项目管理等业务及境外工程承包等业务;房屋建筑工程壹级资质范围内的施工总承包、工程总承包和项目管理业务。<br>五、汉鼎金融<br>汉鼎金融服务集团创立于2006年，经过六年时间的发展，形成了资本+咨询+资讯三驾马车并驾齐驱的综合性金融服务平台。旗下有近10余家全资子公司，形成了完整的资讯、咨询、资本三大业务体系。2012年，汉鼎引入了中国非常知名的3家基金作为汉鼎股东，其中有两家外部股东拥有中国国家社保基金管理资格。汉鼎金融服务集团是北京金融资产交易所的发起会员单位，也是工信部中国中小企业上市服务联盟的发起单位，并同世界顶尖金融资讯公司汤森路透(ThomsonReuters)集团、标准普尔等缔结了合作伙伴关系。<br>业务范围：上市申报材料咨询、新三板业务咨询、IPO一体化咨询、并购咨询；一级市场金融服务终端、大数据深度分析、风险预警系统、VCPE行业数据投资研究；并购、财富管理、投行创新业务、金融中介服务。<br>六、东盛联合<br>东盛联合成立于2005年初，是一家专业务实的商务咨询、策划、实施机构。公司专业为融资企业及个人提供符合国际惯例的商业计划书、投资价值分析报告、可行性研究报告等文件的编撰服务。公司核心成员全部来自相关投资咨询企业，具有多年投融资实战经验。团队的知识结构涉及金融、法律、证券、财务、投资、营销等全方位的经济领域，熟悉资本市场运作流程，充分了解投资人对项目的评审重点、标准及心态偏好。全面的知识结构和丰富的行业经验能够保证我们提供的服务和解决方案行之有效。公司成立两年多来，已经为上百家企业及个人提供了专业服务所在地区包括华北、华南、华中、东北等全国大部分地区.其编撰的融资文件已被多家国际投资机构认可,部分客户已经成功获得投资。<br>业务范围：囊括电子信息、生物工程、环保、医药、材料、能源化工、交通、国际贸易、基础设施、房地产、种、养殖业和旅游业等项目服务与管理。<br>七、中商顾问<br>中商顾问咨询服务集团是由中国知名的资讯管理理论专家和竞争情报实战派携手创建的，是国内领先的研究及咨询服务机构。是中国领先的研究及咨询服务机构，集团下辖投融资咨询、行业研究、专项咨询三个事业群。<br>业务范围:主要覆盖细分产业市场研究、项目可行性研究、市场调研、企业IPO上市整体解决方案、专项市场解决方案、产业规划咨询、产业园区规划、产业园区运营管理咨询、政府招商促进、企业发展战略规划、营销咨询、管理咨询等以及为满足企业学习和提升经营能力的世界级经营管理智慧。<br>八、尚普咨询<br>尚普咨询全称为“北京尚普信息咨询有限公司”，凭借多年的咨询服务经验，公司已成为投资咨询和市场调研领域的领导者，并率先通过ISO9001:2008国际质量管理体系认证。目前，公司专家库成员已达1500余位，专家特长覆盖各个领域。<br>业务范围：尚普咨询凭借近十年的咨询服务经验，现已拥有投资咨询、行业研究、市场调研、拟上市企业IPO咨询四大业务模块，提供可行性研究报告、项目申请报告、立项报告、节能评估、社会稳定风险评估、项目实施方案、资金申请报告、商业融资计划书、项目建议书、投资机会研究、产业园区规划、行业研究、竞争对手调查、市场进入研究、消费者研究、IPO细分市场研究等咨询服务。<br>九、华灵四方<br>华灵四方成立于2005年1月，公司以“市场+技术+管理+资本运营”四位一体的服务模式，协助客户在战略、资本运营、技术、管理、市场和项目发展等方面全面提升竞争力，为客户提供全方位的战略咨询、上市投融资咨询、管理咨询、工程咨询(包括可行性研究报告编写，项目申请报告编写、节能评估报告编写等)、市场调查和行业研究。截至2012年，华灵四方拥有2800多家全球知名客户，以高质量的服务赢得客户广泛赞誉，其中包括40多家世界500强客户，成为大量欧美公司和行业领导企业中国业务咨询的首选合作伙伴，是中国咨询业的高端品牌。<br>业务范围：在上市咨询方面，主要为中小板和创业板企业上市提供咨询服务，服务内容包括募投项目可研报告、引入战略投资者、上市规划、上市辅导、增发，在行业内具有较好的品牌和名声，其中5家已经成功上市。<br>十、大森咨询<br>大森咨询为大森文案工作室旗下品牌。大森文案前身为大森投资咨询有限公司项目部，大森是一家从事市场研究和项目咨询的专业机构。长期以来一直从事企业调研，行业分析以及企业项目立项服务等工作。大森文案工作室目前已与全国多家省级工程设计院建立长期合作关系，将自有资源和市场资源结合起来，为客户提供更为有效、更为专业的服务。<br>业务范围：主要提供项目规划咨询、编制项目建议书、编制项目可行性研究报告、编制项目申请报告、编制资金申请报告等服务，专业范围涉及化工、医药、轻工、机械、建筑、农业综合开发等。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>区间涨跌幅统计：通达信软件里输入.403统计，随意选择区间，输入34导出数据。 </p>\n<p>年报          ：<a href=\"http://data.eastmoney.com/bbsj/201012/fsrq/1.html\" target=\"_blank\" rel=\"noopener\">http://data.eastmoney.com/bbsj/201012/fsrq/1.html</a><br> 2010年年报沪市披露日期：<a href=\"http://www.sse.com.cn/sseportal/webapp/listcompany/qrybltnbookinfo\" target=\"_blank\" rel=\"noopener\">http://www.sse.com.cn/sseportal/webapp/listcompany/qrybltnbookinfo</a><br> 2010年年报深市披露日期：<br><a href=\"http://www.cninfo.com.cn/disclosure/prbookinfo.jsp\" target=\"_blank\" rel=\"noopener\">http://www.cninfo.com.cn/disclosure/prbookinfo.jsp</a><br>财经报道      ：<a href=\"http://www.cfi.net.cn\" target=\"_blank\" rel=\"noopener\">http://www.cfi.net.cn</a><br>                 <a href=\"http://www.cs.com.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cs.com.cn/</a><br>                 <a href=\"http://www.p5w.net/kuaixun/index.htm\" target=\"_blank\" rel=\"noopener\">http://www.p5w.net/kuaixun/index.htm</a><br>                 <a href=\"http://finance.ifeng.com/\" target=\"_blank\" rel=\"noopener\">http://finance.ifeng.com/</a><br>                 <a href=\"http://www.cnstock.com/\" target=\"_blank\" rel=\"noopener\">http://www.cnstock.com/</a><br>                 <a href=\"http://www.eastmoney.com/\" target=\"_blank\" rel=\"noopener\">http://www.eastmoney.com/</a><br>                 <a href=\"http://www.dingniu8.com/\" target=\"_blank\" rel=\"noopener\">http://www.dingniu8.com/</a><br>大单统计      ：<a href=\"http://www.gupiaodadan.com/\" target=\"_blank\" rel=\"noopener\">http://www.gupiaodadan.com/</a><br>基金每日净值：  <a href=\"http://www.ourku.com/\" target=\"_blank\" rel=\"noopener\">http://www.ourku.com/</a><br>交易提示      ：<a href=\"http://finance.ifeng.com/stock/ts/index.shtml\" target=\"_blank\" rel=\"noopener\">http://finance.ifeng.com/stock/ts/index.shtml</a><br>                 <a href=\"http://www.p5w.net/stock/ssgsyj/\" target=\"_blank\" rel=\"noopener\">http://www.p5w.net/stock/ssgsyj/</a><br>领导动态      ：<a href=\"http://www.people.com.cn/\" target=\"_blank\" rel=\"noopener\">http://www.people.com.cn/</a><br>龙虎榜        ：<a href=\"http://www.yz21.org/stock/szsec/\" target=\"_blank\" rel=\"noopener\">http://www.yz21.org/stock/szsec/</a><br>几大人气bbs   ：<a href=\"http://bbs.macd.cn/\" target=\"_blank\" rel=\"noopener\">http://bbs.macd.cn/</a><br>                 <a href=\"http://www.taoguba.com.cn/index.action?blockID=1\" target=\"_blank\" rel=\"noopener\">http://www.taoguba.com.cn/index.action?blockID=1</a><br>                 <a href=\"http://www.55188.com/index.php\" target=\"_blank\" rel=\"noopener\">http://www.55188.com/index.php</a><br>钢铁          ：<a href=\"http://www.mysteel.com/\" target=\"_blank\" rel=\"noopener\">http://www.mysteel.com/</a><br>中纤网        ：<a href=\"http://www.ccfei.net/Index.aspx\" target=\"_blank\" rel=\"noopener\">http://www.ccfei.net/Index.aspx</a><br>中金所        ：<a href=\"http://www.cffex.com.cn/fzjy/ccpm/\" target=\"_blank\" rel=\"noopener\">http://www.cffex.com.cn/fzjy/ccpm/</a><br>三季报        ：<a href=\"http://data.eastmoney.com/bbsj/201009.html\" target=\"_blank\" rel=\"noopener\">http://data.eastmoney.com/bbsj/201009.html</a><br>研究报告      ：<a href=\"http://bbs.moneyqoo.com/forumdisplay.php?fid=29\" target=\"_blank\" rel=\"noopener\">http://bbs.moneyqoo.com/forumdisplay.php?fid=29</a><br>历史数据下载  ：<a href=\"http://down.88158.cn/\" target=\"_blank\" rel=\"noopener\">http://down.88158.cn/</a><br>国际财经      ：<a href=\"http://international.caixun.com/\" target=\"_blank\" rel=\"noopener\">http://international.caixun.com/</a><br>美股指数      ：<a href=\"http://finance.google.com/finance\" target=\"_blank\" rel=\"noopener\">http://finance.google.com/finance</a><br>网页行情      ：<a href=\"http://biz.finance.sina.com.cn/hq/\" target=\"_blank\" rel=\"noopener\">http://biz.finance.sina.com.cn/hq/</a><br>国际期货      ：<a href=\"http://finance.sina.com.cn/money/future/hf.html\" target=\"_blank\" rel=\"noopener\">http://finance.sina.com.cn/money/future/hf.html</a><br>郑州商品交易所期货：<a href=\"http://vip.stock.finance.sina.com.cn/quotes_service/view/qihuohangqing.html#titlePos_0\" target=\"_blank\" rel=\"noopener\">http://vip.stock.finance.sina.com.cn/quotes_service/view/qihuohangqing.html#titlePos_0</a><br>欧洲指数      ：<a href=\"http://finance.yahoo.com/intlindices?e=europe\" target=\"_blank\" rel=\"noopener\">http://finance.yahoo.com/intlindices?e=europe</a><br>沪市每日公开信息：<br><a href=\"http://www.sse.com.cn/sseportal/webapp/datapresent/SSENewTradeInfoPublishAct\" target=\"_blank\" rel=\"noopener\">http://www.sse.com.cn/sseportal/webapp/datapresent/SSENewTradeInfoPublishAct</a><br>深市主板公开信息：<br><a href=\"http://www.szse.cn/main/disclosure/news/scgkxx/\" target=\"_blank\" rel=\"noopener\">http://www.szse.cn/main/disclosure/news/scgkxx/</a><br>深市中小板公开信息：<br><a href=\"http://www.szse.cn/main/sme/jytj/jygkxx/\" target=\"_blank\" rel=\"noopener\">http://www.szse.cn/main/sme/jytj/jygkxx/</a><br>创业板公开信息：<br><a href=\"http://www.szse.cn/main/chinext/jygkxx/jygkxx/\" target=\"_blank\" rel=\"noopener\">http://www.szse.cn/main/chinext/jygkxx/jygkxx/</a><br>荐股之王博客：<a href=\"http://blog.gutx.com/blog/%BC%F6%B9%C9%D6%AE%CD%F5/\" target=\"_blank\" rel=\"noopener\">http://blog.gutx.com/blog/%BC%F6%B9%C9%D6%AE%CD%F5/</a><br>思绪飘零：<a href=\"http://blog.sina.com.cn/sxf671212\" target=\"_blank\" rel=\"noopener\">http://blog.sina.com.cn/sxf671212</a> </p>\n<p>国内前20大综合实力研究咨询智库机构排名情况<br>1、国务院发展研究中心<a href=\"http://www.drc.gov.cn/\" target=\"_blank\" rel=\"noopener\">http://www.drc.gov.cn/</a><br>2、中国社会科学院<a href=\"http://cass.cssn.cn/\" target=\"_blank\" rel=\"noopener\">http://cass.cssn.cn/</a><br>3、上海社会科学院<a href=\"http://www.sass.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.sass.org.cn/</a><br>4、北京大学国家发展研究院<a href=\"http://www.nsd.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://www.nsd.edu.cn/</a><br>5、中共中央党校<a href=\"http://www.ccps.gov.cn/\" target=\"_blank\" rel=\"noopener\">http://www.ccps.gov.cn/</a><br>6、发改委宏观经济研究院<a href=\"http://www.amr.gov.cn/\" target=\"_blank\" rel=\"noopener\">http://www.amr.gov.cn/</a><br>7、环境保护部环境规划院<a href=\"http://www.caep.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.caep.org.cn/</a><br>8、中国国际经济交流中心<a href=\"http://www.cciee.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cciee.org.cn/</a><br>9、零点研究咨询集团<a href=\"http://www.horizon-china.com/\" target=\"_blank\" rel=\"noopener\">http://www.horizon-china.com/</a><br>10、中国人民大学重阳金融研究院<a href=\"http://rdcy-sf.ruc.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://rdcy-sf.ruc.edu.cn/</a><br>11、清华大学国情研究咨询院<a href=\"http://www.zwzyzx.com/\" target=\"_blank\" rel=\"noopener\">http://www.zwzyzx.com/</a><br>12、中国（海南）改革发展研究院<a href=\"http://www.cird.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cird.org.cn/</a><br>13、中国与全球化智库<a href=\"http://www.ccg.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.ccg.org.cn/</a><br>14、中国经济体制改革研究会<a href=\"http://www.cser.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cser.org.cn/</a><br>15、复旦大学美国研究中心<a href=\"http://www.cas.fudan.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cas.fudan.edu.cn/</a><br>16、清华大学当代国际关系研究院<a href=\"http://www.tsinghua.edu.cn/\" target=\"_blank\" rel=\"noopener\">http://www.tsinghua.edu.cn/</a><br>17、中国金融40人论坛<a href=\"http://www.cf40.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.cf40.org.cn/</a><br>18、外交部中国国际问题研究院<a href=\"http://www.ciis.org.cn/\" target=\"_blank\" rel=\"noopener\">http://www.ciis.org.cn/</a></p>\n<p>20、商务部国际贸易经济合作研究院<a href=\"http://www.caitec.org.cn\" target=\"_blank\" rel=\"noopener\">http://www.caitec.org.cn</a></p>\n<p>中国经济类研究机构市场价值排行榜（2016）</p>\n<p>排名 经济类研究机构名称<br>1.中国人民大学经济学院</p>\n<p>2.国务院发展研究中心市场经济研究所</p>\n<p>3.北京大学国家发展研究院</p>\n<p>4.北京大学经济学院</p>\n<p>5.中国社会科学院世界经济与政治研究所</p>\n<p>6.清华大学经济管理学院</p>\n<p>7.复旦大学经济学院</p>\n<p>8.中南财经政法大学经济学院</p>\n<p>9.南开大学经济研究所</p>\n<p>10.中国人民大学财政金融学院<br>11.南开大学经济学院<br>12.清华大学五道口金融学院<br>13.厦门大学经济学院<br>14.吉林大学经济学院<br>15.浙江大学经济学院<br>16.中国社会科学院金融研究所<br>17.上海财经大学经济学院<br>18.清华大学国情研究院<br>19.南京大学经济学院<br>20.民生证券研究所<br>21.北京大学光华管理学院<br>22.中央财经大学金融学院<br>23.山东大学经济学院<br>24.南开大学国家经济战略研究院<br>25.中国人民银行研究局<br>26.中国（海南）改革发展研究院<br>27.北京证券期货研究院<br>28.中国社会科学院经济研究所<br>29.中国经济改革研究基金会国民经济研究所<br>30.中国人民大学国家发展与战略研究院<br>31.四川大学经济学院<br>32.中国人民大学国际货币研究所<br>33.中国社会科学院人口与劳动经济研究所<br>34.北京大学汇丰商学院<br>35.财政部财政科学研究所<br>36.中国社会科学院财经战略研究院<br>37.武汉大学经济与管理学院<br>38.国务院发展研究中心宏观经济研究部<br>39.中国国际经济交流中心<br>40.国务院发展研究中心金融研究所<br>41.华夏新供给经济研究院<br>42.华中科技大学经济学院<br>43.第一财经研究院<br>44.中央财经大学经济学院<br>45.东南大学经济管理学院<br>46.环球财经研究院<br>47.北京保险研究院<br>48.商务部国际贸易经济合作研究院<br>49.上海财经大学金融学院<br>50.上海财经大学上海发展研究院<br>51.对外经贸大学国际经济贸易学院<br>52.中华联合保险控股股份有限公司研究所<br>53.天则经济研究所<br>54.武汉科技大学金融证券研究所<br>55.中泰证券研究所<br>56.西南财经大学经济学院<br>57.北京师范大学经济与工商管理学院<br>58.天津大学管理与经济学部<br>59.中国国际金融有限公司<br>60.中国经济体制改革研究会<br>61.清华大学中国财政税收研究所<br>62.首都经贸大学经济学院<br>63.上海交通大学高级金融学院<br>64.中山大学岭南学院<br>65.中欧陆家嘴国际金融研究院<br>66.华泰证券研究所<br>67.上海浦东发展与改革研究院<br>68.中国东中西部区域改革与发展研究院<br>69.国家信息中心经济预测部<br>70.银河证券研究所<br>71.南开大学金融学院<br>72.中国与全球化智库<br>73.国家发改委宏观经济研究院<br>74.西安交通大学经济与金融学院<br>75.国金证券研究所<br>76.海通证券研究所<br>77.东北证券研究所<br>78.方正证券研究所<br>79.广发证券研究所<br>80.零点咨询研究集团<br>81.厦门大学王亚南经济研究院<br>82.春秋发展战略研究院<br>83.中原证券研究所<br>84.上海交通大学安泰经济与管理学院<br>85.对外经贸大学国际经济研究院<br>86.汇丰银行<br>87.中国社会科学院数量经济与技术经济研究所<br>88.交通银行金融研究中心<br>89.平安证券研究所<br>90.国泰君安证券研究所<br>91.兴业经济研究咨询股份有限公司<br>92.商务部中国国际经济合作学会<br>93.东北财经大学经济学院<br>94.安信证券研究所<br>95.西南证券研究所<br>96.瑞穗证券研究所<br>97.中信建投证券研究所<br>98.中央财经大学国际经济与贸易学院<br>99.中南大学经济学院<br>100.中国科学院科技政策与管理科学研究所</p>\n<p>一、中为咨询<br>深圳中为智研咨询有限公司是中国领先的产业与市场研究服务供应商。公司围绕客户的需求持续努力，与客户真诚合作，在调查报告、研究报告、市场调查分析报告、商业计划书、可行性研究、IPO咨询等领域构筑了全面专业优势。中为咨询致力于为企业、投资者和政府等提供有竞争力的调查研究解决方案和服务，持续提升客户体验，为客户创造最大价值。目前，中为咨询的研究成果和解决方案已经应用于3万多家企业，并向海外市场拓展。</p>\n<p>中为咨询是中国最为专业的行业市场调查研究机构，企业致力于为行业中高层管理人员、企事业发展研究部门人员、市场投资人士、投行及咨询行业人士、投资专家等提供各行业丰富翔实的产业、行业、市场研究成果；为国内外的行业企业、研究机构、社会团体和政府部门提供专业的产业、行业及市场调查研究、投资咨询、战略咨询等服务。中为咨询拥有多年的投资银行、企业上市一体化服务、市场调查、市场研究、行业研究及投资咨询专业经验。目前，中为咨询已经为上万家包括企业、政府机构、银行、研究所、行业协会、咨询公司、集团公司和各类投资公司在内的单位提供了专业的研究分析报告、项目投资咨询及竞争情报研究服务，并得到客户的广泛认可；为众多企业进行了上市导向战略规划，同时也为境内外多家上市企业进行财务辅导、行业细分领域研究和募投方案的设计，并协助其顺利上市；协助多家证券公司开展IPO业务。<br>二、成都中哲咨询<br>成都中哲咨询专注于西部，是目前西部领先的咨询与策划的专业机构。中哲咨询业务范围涉及工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等六大版块业务。中哲咨询旗下产品包括可行性研究报告、商业计划书、项目建议书、资金申报报告、投资项目计划书、项目策划、节能评估报告等，为各类客户针对立项/批地/备案/融资/贷款/招商/合作等需求提供定制的咨询报告服务。<br>作为国内领先的多元化咨询与策划服务提供商之一，成都中哲咨询建立了政府部门、行业协会、第三方商业数据库三位一体的数据支持平台，保持了与各领域专家顾问和业内资深人士的良好关系，积累了大量商业策划、管理、投资咨询的专业经验，形成了独特的专业研究模型和科学分析方法。<br>据业内人士透露，截止2014年底，成都中哲咨询已累计完成各类咨询项目3000余例。该公司既服务于国内客户，又帮助国外企业在中国大陆市场取得更大的成功。同时其服务的客户和合作伙伴涉及世界500强企业、各大商业银行、高校及科研院所、各级政府机构、各类投资金融机构、律师事务所、会计事务所、中小型企业等。<br>业务范围：工程咨询、投融资咨询、项目与资金申报咨询、管理咨询、市场调研与研究咨询、规划咨询等<br>三、炳卓咨询<br>炳卓咨询是重庆炳卓企业管理咨询有限公司旗下核心业务之一，是国内致力于“为企业和项目提供咨询与策划专业解决方案”的顾问专家机构。炳卓咨询凭借多年的咨询服务经验，可以根据客户的需求设计投融资方案，涉及领域包括工程咨询、投融资咨询等。<br>业务范围：炳卓咨询旗下产品包括可行性研究报告、商业计划书、项目计划书、项目建议书、节能评估报告等。<br>四、开元国际<br>开元国际是以开元国际工程设计研究院(原机械工业部设计研究总院)为核心，与中国机械工业电脑应用技术开发公司、机械工业规划研究院联合重组的集工程咨询、工程设计、工程总承包、项目管理、设备成套和技工贸为一体的工程公司。公司具有甲级工程设计综合资质、房屋建筑工程施工总承包壹级资质(建筑智能化、消防设施、机电设备安装工程专业承包壹级)及对外承包工程资格证书及其相关资质，具有城乡规划、建设监理、工程咨询、工程造价咨询甲级资质;具有压力管道设计资格;具有独立的进出口经营贸易权、对外经济合作资格证书、进出口企业资格证书、自理报关单位注册登记证书、工程招标代理机构资质证书、施工图设计文件审查许可证书及建筑装饰工程设计与施工资质证书。<br>业务范围：承接全行业、各等级的工程设计业务和从事工程设计资质标准划分的建筑、机械、医药、船舶、兵器、市政、商业、化工、能源、建材、轻工等21个行业的工程总承包、项目管理等业务及境外工程承包等业务;房屋建筑工程壹级资质范围内的施工总承包、工程总承包和项目管理业务。<br>五、汉鼎金融<br>汉鼎金融服务集团创立于2006年，经过六年时间的发展，形成了资本+咨询+资讯三驾马车并驾齐驱的综合性金融服务平台。旗下有近10余家全资子公司，形成了完整的资讯、咨询、资本三大业务体系。2012年，汉鼎引入了中国非常知名的3家基金作为汉鼎股东，其中有两家外部股东拥有中国国家社保基金管理资格。汉鼎金融服务集团是北京金融资产交易所的发起会员单位，也是工信部中国中小企业上市服务联盟的发起单位，并同世界顶尖金融资讯公司汤森路透(ThomsonReuters)集团、标准普尔等缔结了合作伙伴关系。<br>业务范围：上市申报材料咨询、新三板业务咨询、IPO一体化咨询、并购咨询；一级市场金融服务终端、大数据深度分析、风险预警系统、VCPE行业数据投资研究；并购、财富管理、投行创新业务、金融中介服务。<br>六、东盛联合<br>东盛联合成立于2005年初，是一家专业务实的商务咨询、策划、实施机构。公司专业为融资企业及个人提供符合国际惯例的商业计划书、投资价值分析报告、可行性研究报告等文件的编撰服务。公司核心成员全部来自相关投资咨询企业，具有多年投融资实战经验。团队的知识结构涉及金融、法律、证券、财务、投资、营销等全方位的经济领域，熟悉资本市场运作流程，充分了解投资人对项目的评审重点、标准及心态偏好。全面的知识结构和丰富的行业经验能够保证我们提供的服务和解决方案行之有效。公司成立两年多来，已经为上百家企业及个人提供了专业服务所在地区包括华北、华南、华中、东北等全国大部分地区.其编撰的融资文件已被多家国际投资机构认可,部分客户已经成功获得投资。<br>业务范围：囊括电子信息、生物工程、环保、医药、材料、能源化工、交通、国际贸易、基础设施、房地产、种、养殖业和旅游业等项目服务与管理。<br>七、中商顾问<br>中商顾问咨询服务集团是由中国知名的资讯管理理论专家和竞争情报实战派携手创建的，是国内领先的研究及咨询服务机构。是中国领先的研究及咨询服务机构，集团下辖投融资咨询、行业研究、专项咨询三个事业群。<br>业务范围:主要覆盖细分产业市场研究、项目可行性研究、市场调研、企业IPO上市整体解决方案、专项市场解决方案、产业规划咨询、产业园区规划、产业园区运营管理咨询、政府招商促进、企业发展战略规划、营销咨询、管理咨询等以及为满足企业学习和提升经营能力的世界级经营管理智慧。<br>八、尚普咨询<br>尚普咨询全称为“北京尚普信息咨询有限公司”，凭借多年的咨询服务经验，公司已成为投资咨询和市场调研领域的领导者，并率先通过ISO9001:2008国际质量管理体系认证。目前，公司专家库成员已达1500余位，专家特长覆盖各个领域。<br>业务范围：尚普咨询凭借近十年的咨询服务经验，现已拥有投资咨询、行业研究、市场调研、拟上市企业IPO咨询四大业务模块，提供可行性研究报告、项目申请报告、立项报告、节能评估、社会稳定风险评估、项目实施方案、资金申请报告、商业融资计划书、项目建议书、投资机会研究、产业园区规划、行业研究、竞争对手调查、市场进入研究、消费者研究、IPO细分市场研究等咨询服务。<br>九、华灵四方<br>华灵四方成立于2005年1月，公司以“市场+技术+管理+资本运营”四位一体的服务模式，协助客户在战略、资本运营、技术、管理、市场和项目发展等方面全面提升竞争力，为客户提供全方位的战略咨询、上市投融资咨询、管理咨询、工程咨询(包括可行性研究报告编写，项目申请报告编写、节能评估报告编写等)、市场调查和行业研究。截至2012年，华灵四方拥有2800多家全球知名客户，以高质量的服务赢得客户广泛赞誉，其中包括40多家世界500强客户，成为大量欧美公司和行业领导企业中国业务咨询的首选合作伙伴，是中国咨询业的高端品牌。<br>业务范围：在上市咨询方面，主要为中小板和创业板企业上市提供咨询服务，服务内容包括募投项目可研报告、引入战略投资者、上市规划、上市辅导、增发，在行业内具有较好的品牌和名声，其中5家已经成功上市。<br>十、大森咨询<br>大森咨询为大森文案工作室旗下品牌。大森文案前身为大森投资咨询有限公司项目部，大森是一家从事市场研究和项目咨询的专业机构。长期以来一直从事企业调研，行业分析以及企业项目立项服务等工作。大森文案工作室目前已与全国多家省级工程设计院建立长期合作关系，将自有资源和市场资源结合起来，为客户提供更为有效、更为专业的服务。<br>业务范围：主要提供项目规划咨询、编制项目建议书、编制项目可行性研究报告、编制项目申请报告、编制资金申请报告等服务，专业范围涉及化工、医药、轻工、机械、建筑、农业综合开发等。</p>\n"},{"title":"css 布局整理","date":"2018-03-01T02:35:43.000Z","update":null,"_content":"\ncss 由于历史原因布局的方法众多\n\n1. display: inline-block\n   需要注意元素间隙问题\n2. 浮动float\n   需要注意清楚浮动\n3. flexbox  box flexbox flex\n   需要注意浏览器兼容性　支持的问题\n4. grid\n   网格布局　也需要考虑浏览器兼容性问题\n\n\n","source":"_posts/csslayout.md","raw":"---\ntitle: css 布局整理\ndate: 2018-03-01 10:35:43\nupdate:\ntags:\n---\n\ncss 由于历史原因布局的方法众多\n\n1. display: inline-block\n   需要注意元素间隙问题\n2. 浮动float\n   需要注意清楚浮动\n3. flexbox  box flexbox flex\n   需要注意浏览器兼容性　支持的问题\n4. grid\n   网格布局　也需要考虑浏览器兼容性问题\n\n\n","slug":"csslayout","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlr000h2oi8ag2d39yg","content":"<p>css 由于历史原因布局的方法众多</p>\n<ol>\n<li>display: inline-block<br>需要注意元素间隙问题</li>\n<li>浮动float<br>需要注意清楚浮动</li>\n<li>flexbox  box flexbox flex<br>需要注意浏览器兼容性　支持的问题</li>\n<li>grid<br>网格布局　也需要考虑浏览器兼容性问题</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>css 由于历史原因布局的方法众多</p>\n<ol>\n<li>display: inline-block<br>需要注意元素间隙问题</li>\n<li>浮动float<br>需要注意清楚浮动</li>\n<li>flexbox  box flexbox flex<br>需要注意浏览器兼容性　支持的问题</li>\n<li>grid<br>网格布局　也需要考虑浏览器兼容性问题</li>\n</ol>\n"},{"title":"deeplearning初学者笔记","date":"2017-11-20T01:41:06.000Z","_content":"\n\n1 [UFLDL](http://ufldl.stanford.edu/wiki/index.php/UFLDL_Tutorial)Andrew Ng 吴恩达  非常好的DL基础教程，也是Andrew Ng写的。有很详尽的推导，有翻译，且翻译质量很高. \n2 [Deep learning](https://www.cs.toronto.edu/~hinton/absps/NatureDeepReview.pdf)(paper)：2015年Nature上的论文，由三位深度学习界的大牛所写，读完全篇论文，给人高屋建瓴，一览众山小的感觉，强烈推荐。如果只能读一篇论文了解深度学习，我推荐此篇。这篇论文有同名的中文翻译； \n3 推荐，[Neural networks and deep learning](http://neuralnetworksanddeeplearning.com/)：这本书的作者非常擅长以浅显的语言表达深刻的道理，虽然没有翻译，但是阅读并不困难；\n4 推荐，[Recurrent Neural Networks](http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/)： 结合一个实际案例告诉你RNN是什么，整篇教程学完以后，会让你对RNN如何产生作用的有很清晰的认识，而这个效果，甚至是读几篇相关论文所没有的；\n\n语言|是否面向对象|是否函数式编程 \n-|-|-\nc |否|否 \nc++ |是|否 \njava |是|否 \njavascript |否|是 \npython |是|是 \nlisp |否|否 \n\n[普通程序员如何转向AI方向](https://www.cnblogs.com/skying555/p/6245907.html)\n[从机器学习谈起](http://www.cnblogs.com/subconscious/p/4107357.html)\n","source":"_posts/deeplearning.md","raw":"---\ntitle: deeplearning初学者笔记\ndate: 2017-11-20 09:41:06\ntags:\n---\n\n\n1 [UFLDL](http://ufldl.stanford.edu/wiki/index.php/UFLDL_Tutorial)Andrew Ng 吴恩达  非常好的DL基础教程，也是Andrew Ng写的。有很详尽的推导，有翻译，且翻译质量很高. \n2 [Deep learning](https://www.cs.toronto.edu/~hinton/absps/NatureDeepReview.pdf)(paper)：2015年Nature上的论文，由三位深度学习界的大牛所写，读完全篇论文，给人高屋建瓴，一览众山小的感觉，强烈推荐。如果只能读一篇论文了解深度学习，我推荐此篇。这篇论文有同名的中文翻译； \n3 推荐，[Neural networks and deep learning](http://neuralnetworksanddeeplearning.com/)：这本书的作者非常擅长以浅显的语言表达深刻的道理，虽然没有翻译，但是阅读并不困难；\n4 推荐，[Recurrent Neural Networks](http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/)： 结合一个实际案例告诉你RNN是什么，整篇教程学完以后，会让你对RNN如何产生作用的有很清晰的认识，而这个效果，甚至是读几篇相关论文所没有的；\n\n语言|是否面向对象|是否函数式编程 \n-|-|-\nc |否|否 \nc++ |是|否 \njava |是|否 \njavascript |否|是 \npython |是|是 \nlisp |否|否 \n\n[普通程序员如何转向AI方向](https://www.cnblogs.com/skying555/p/6245907.html)\n[从机器学习谈起](http://www.cnblogs.com/subconscious/p/4107357.html)\n","slug":"deeplearning","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlr000i2oi87q4uzjon","content":"<p>1 <a href=\"http://ufldl.stanford.edu/wiki/index.php/UFLDL_Tutorial\" target=\"_blank\" rel=\"noopener\">UFLDL</a>Andrew Ng 吴恩达  非常好的DL基础教程，也是Andrew Ng写的。有很详尽的推导，有翻译，且翻译质量很高.<br>2 <a href=\"https://www.cs.toronto.edu/~hinton/absps/NatureDeepReview.pdf\" target=\"_blank\" rel=\"noopener\">Deep learning</a>(paper)：2015年Nature上的论文，由三位深度学习界的大牛所写，读完全篇论文，给人高屋建瓴，一览众山小的感觉，强烈推荐。如果只能读一篇论文了解深度学习，我推荐此篇。这篇论文有同名的中文翻译；<br>3 推荐，<a href=\"http://neuralnetworksanddeeplearning.com/\" target=\"_blank\" rel=\"noopener\">Neural networks and deep learning</a>：这本书的作者非常擅长以浅显的语言表达深刻的道理，虽然没有翻译，但是阅读并不困难；<br>4 推荐，<a href=\"http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/\" target=\"_blank\" rel=\"noopener\">Recurrent Neural Networks</a>： 结合一个实际案例告诉你RNN是什么，整篇教程学完以后，会让你对RNN如何产生作用的有很清晰的认识，而这个效果，甚至是读几篇相关论文所没有的；</p>\n<table>\n<thead>\n<tr>\n<th>语言</th>\n<th>是否面向对象</th>\n<th>是否函数式编程</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>c</td>\n<td>否</td>\n<td>否</td>\n</tr>\n<tr>\n<td>c++</td>\n<td>是</td>\n<td>否</td>\n</tr>\n<tr>\n<td>java</td>\n<td>是</td>\n<td>否</td>\n</tr>\n<tr>\n<td>javascript</td>\n<td>否</td>\n<td>是</td>\n</tr>\n<tr>\n<td>python</td>\n<td>是</td>\n<td>是</td>\n</tr>\n<tr>\n<td>lisp</td>\n<td>否</td>\n<td>否</td>\n</tr>\n</tbody></table>\n<p><a href=\"https://www.cnblogs.com/skying555/p/6245907.html\" target=\"_blank\" rel=\"noopener\">普通程序员如何转向AI方向</a><br><a href=\"http://www.cnblogs.com/subconscious/p/4107357.html\" target=\"_blank\" rel=\"noopener\">从机器学习谈起</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1 <a href=\"http://ufldl.stanford.edu/wiki/index.php/UFLDL_Tutorial\" target=\"_blank\" rel=\"noopener\">UFLDL</a>Andrew Ng 吴恩达  非常好的DL基础教程，也是Andrew Ng写的。有很详尽的推导，有翻译，且翻译质量很高.<br>2 <a href=\"https://www.cs.toronto.edu/~hinton/absps/NatureDeepReview.pdf\" target=\"_blank\" rel=\"noopener\">Deep learning</a>(paper)：2015年Nature上的论文，由三位深度学习界的大牛所写，读完全篇论文，给人高屋建瓴，一览众山小的感觉，强烈推荐。如果只能读一篇论文了解深度学习，我推荐此篇。这篇论文有同名的中文翻译；<br>3 推荐，<a href=\"http://neuralnetworksanddeeplearning.com/\" target=\"_blank\" rel=\"noopener\">Neural networks and deep learning</a>：这本书的作者非常擅长以浅显的语言表达深刻的道理，虽然没有翻译，但是阅读并不困难；<br>4 推荐，<a href=\"http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/\" target=\"_blank\" rel=\"noopener\">Recurrent Neural Networks</a>： 结合一个实际案例告诉你RNN是什么，整篇教程学完以后，会让你对RNN如何产生作用的有很清晰的认识，而这个效果，甚至是读几篇相关论文所没有的；</p>\n<table>\n<thead>\n<tr>\n<th>语言</th>\n<th>是否面向对象</th>\n<th>是否函数式编程</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>c</td>\n<td>否</td>\n<td>否</td>\n</tr>\n<tr>\n<td>c++</td>\n<td>是</td>\n<td>否</td>\n</tr>\n<tr>\n<td>java</td>\n<td>是</td>\n<td>否</td>\n</tr>\n<tr>\n<td>javascript</td>\n<td>否</td>\n<td>是</td>\n</tr>\n<tr>\n<td>python</td>\n<td>是</td>\n<td>是</td>\n</tr>\n<tr>\n<td>lisp</td>\n<td>否</td>\n<td>否</td>\n</tr>\n</tbody></table>\n<p><a href=\"https://www.cnblogs.com/skying555/p/6245907.html\" target=\"_blank\" rel=\"noopener\">普通程序员如何转向AI方向</a><br><a href=\"http://www.cnblogs.com/subconscious/p/4107357.html\" target=\"_blank\" rel=\"noopener\">从机器学习谈起</a></p>\n"},{"title":"20171030","date":"2017-10-30T01:24:17.000Z","_content":"\n未来的CSS太让人兴奋了：一方面，是全新的页面布局方式；另一方面，是酷炫的滤镜、颜色等视觉效果。这些CSS，受开发者追捧，被杂志和博客文章铺天盖地地介绍。 \n　　如果说这些特性是CSS华丽的一面，那我们来看看它朴实的一面：很不起眼的东西，如选择器、单位、函数（方法）。我经常说这是繁琐的东西，但我意思是它们能干漂亮的活，这就是我要分享的。 \n　　怎么说呢，让我们看看这些效果最好的朴实的CSS细节——这些细节远远没有那些酷炫的CSS效果那么引人注目。它们有些已经存在一段时间了，但值得我们更好地认识，而有些则刚刚面世。虽然不起眼，但是它们可以提高我们的工作效率——以谦虚的姿态。 \n相对单位 \n　　聪明又有前瞻头脑的开发者们已经使用相对单位了——如em或者百分比——所以，开发者们了解这个问题：往往因为元素的继承性而需要使用计算器作为辅助工具来计算大小。例如，现在普遍的做法是给页面的字体设置全局尺寸，然后用相对单位来定义页面中其它的元素。CSS大概会这样写： \nhtml { font-size: 10px; } p { font-size: 1.4em; }\n\n　　这样写是没问题，直到有个子元素需要设置一个不同的字体大小，比如，在这样的标签当中： \nThe cat sat on the mat.\n\n　　如果你要设置span的字体大小为1.2em，你需要做什么？拿出计算器，算算1.2除以1.4是多少，结果如下： \np span { font-size: 0.85714em; }\n\n　　这个问题不局限于em。如果用百分比来创建响应式的流式布局网站，而百分比是与容器相关的，所以，如果要定义一个元素为它的容器的40%，它的高是75%，宽则需要设置为53.33333%。 \n　　很明显，这很不方便。 \n根相关的长度单位 \n　　为了修复字体大小定义的问题，现在可以使用单位rem（root em）。rem同样是相对单位，但是它所对应的是固定的基本值，这个固定的基本值也就是文档的根元素的字体大小（在HTML文件中，就是html元素）。假设和上个例子一样，同样设定10px的字体大小为根元素的大小，那么CSS这样写就OK了： \np { font-size: 1.4rem; } p span { font-size: 1.2rem; }\n\n　　这两个CSS规则都是相对于根元素的字体大小，这样的代码更加优雅和简便，特别是在设置简单的数值如10px或者12px的时候。这样和使用px值很相似，不同点在于rem是可扩展的。 \n　　在整篇文章介绍的特性中，rem特性相对来说是兼容性比较好，高级浏览器都能支持，包括IE9在内，除了Opera Mobile。 \n窗口相关的长度单位 \n　　觉得rem单位很酷吧，如果还有另外一组单位能解决百分比的问题，那就更酷了。它和rem的道理相似，不同点在于，它相对的不是文档的根元素，而是相对于设备窗口本身的大小。 \n　　这两个单位就是vh和vw，即是相对于窗口大小的高和宽。每个单位在前面加上数字，代表的是多少个百分比。 \ndiv { height: 50vh; }\n\n　　在上面的例子，高度被设定为窗口高度的一半。1vh相当于一个百分比的窗口高度，所以50vh即是50%的窗口高度。 \n　　如果窗口大小变了，那么这个值也随之改变。这相对百分比来说，好处是不需要担心父容器，不管它的父容器如何，10vw的元素会一直是10%的窗口大小。 \n　　相应地，有vmin单位，相当于vh或者vw的最小值，最近还宣布有vmax单位会被加到规范文档里面（虽然在这篇文章发布的时候还没有）。 \n　　现在支持这个特性的有IE9+、Chrome和Safari 6。 \n运算式的值 \n　　如果你在做响应式的流式布局网站，经常会遇到混合单位的问题——用百分比设置栅格，但是又用固定像素宽度设置margin。如： \ndiv { margin: 0 20px; width: 33%;}\n\n　　如果布局只用到padding和border，你可以使用box-sizing来解决，但是对于margin就无能为力了。更好、更灵活的方法是使用calc()函数，设置不同单位之间的数学方程式，如： \ndiv { margin: 0 20px; width: calc(33% - 40px);}\n\n　　它不仅可以用来计算宽，还可以用来计算长度——如果有必要，还可以在calc()里面再加calc()。 \n　　这个特性IE9+和Firefox都支持，Firefox需要加上 -moz- 前缀（在版本16或17可能不用加前缀），Chrome和Safari也支持，但需要加上 -webkit- 前缀。然而，移动Webkit还不支持。 \n加载字体库的部分字体 \n　　优越的性能往往很重要，尤其是市场上各种各样的移动设备——导致连接速度的差异和不确定性——更加体现了这个重要性。其中一个加快页面加载速度的方法，就是减少外部文件个数，@font-face的一个新属性unicode-range就是为此而生。 \n　　这个属性就是unicode-range（编码范围），代表的是编码字体的参数范围。在加载外部文件的时候，只有那些被使用的字体才会被加载，而不是整套字体库。下面的代码演示了如何从foo.ttf字体库中仅加载三个字体： \n@font-face {font-family: foo;src: url(‘foo.ttf’);unicode-range: U+31-33;}\n\n　　这点对于使用字体图标的页面尤其有用。我测试过，使用unicode-range，加载字体文件的时间平均减少了0.85秒，也不是小数目了。当然，你可能不会这么想。 \n　　这个属性，目前可以在IE9+、Webkit浏览器（如Chrome和Safari）中运行。 \n新的伪类 \n　　单位和值都应该好好利用，但是，让我更兴奋的是选择器和伪类。完善的选择器模式，即使只有少数浏览器支持，都让我兴奋不已。引用乔布斯的话：你要把栅栏的里面修得和外面一样漂亮，即使别人看不到里面——因为你自己知道。 \n　　我第一次使用:nth-of-type()的时候，简直是一次突破，就像我冲出了思想的桎梏。好吧，我有些夸张了。但有些新的CSS伪类，确实值得狂热一番。 \n否定伪类 \n　　你大概不知道 :not() 伪类的好，除非你亲自实践一番。带有参数的 :not() 其实就是普通的选择器——不是复合选择器。一组元素加上选择器 :not()，表示满足这个参数的元素会被排除出去。听起来有些复杂吧？但是实际上非常简单。 \n　　假设：要对项目列表的奇数行进行选择，但是最后一行除外。如果是以前，需要这样写： \nli { color: #00F; } li:nth-child(odd) { color: #F00; } li:last-child { color: #00F; }\n\n　　现在，通过设定:last-child作为否定伪类的参数，就可以把最后一个元素排除，这样少了一行代码，从而更加的简洁和易维护。 \nli { color: #00F; } li:nth-child(odd):not(:last-child) { color: #F00; }\n\n　　否定伪类看起来并没有什么惊人之处，你可以不用它，但是它还是挺实用的。我曾经把它用在基于Webkit的项目当中，优势还是挺明显的。说实话，它是我最喜欢的伪类之一。 \n　　是的，我有最喜欢的伪类。 \n　　在本文提到的特性当中，否定伪类是兼容性最好的，它被IE9+和高级浏览器支持（不需要加浏览器产商前缀）。如果你熟悉jQuery，你可能习惯用它——版本1.0开始就有了，以及相似的not()方法。 \n“适用于”伪类 \n　　:matches() 伪类可以用普通的选择器、复合选择器、逗号隔开的列表或任何的选择器组合作为参数。太棒了！但是，它能做什么？ \n　　:matches() 伪类最强大的地方就是聚合多行选择器。例如，要选择父容器里面其中几个不同子容器里面的p元素，在这之前，代码或许会写成这样： \n.home header p,.home footer p,.home aside p {color: #F00;}\n\n　　有了:matches()伪类，就可以把共同点提取出来，缩减代码量。该例子里面，选择器的共同点是以home为起点、以p为终点，所以可以用:matches()把中间的所有元素集合起来。是不是有些困惑？看看代码就明白了： \n.home :matches(header,footer,aside) p { color: #F00; }\n\n　　这其实是CSS4的一部分（确切地说，是CSS选择器第四等级），这份规范文档还提到将会有类似的语法（以逗号隔开的复合选择器）应用于:not()伪类。兴奋ing！ \n　　目前，:matches()可以在Chrome和Safari浏览器中运行，但是要加上前缀-webkit-，Firefox也支持，但是要按照旧的写法:any()，同时要加上-moz-前缀。 \n你爱上这些朴实的CSS细节了吗？ \n　　这篇文章讲到的特性，最赞的一点是它们解决了现实的问题，从琐碎而繁复的选择器到建立响应式网站的新挑战。实际上，我期待每一个特性被使用到最普通的项目当中。（web前端学习交流群：328058344 禁止闲聊，非喜勿进！）\n\n　　新特性如滤镜可能很直观很华丽，但是我更愿意发现隐藏在深处的实用小技巧。 \n　　在积极探索的过程中，每一个特性可以让你的职业生涯更顺利——想到这里，就不会觉得繁琐了ted below are all the plug\n\n## CSS相关\n\n1、左边定宽，右边自适应方案：float + margin，float + calc\n\n/* 方案1 */ \n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n    margin-left: 120px;\n}\n/* 方案2 */ \n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n    width: calc(100% - 120px);\n    float: left;\n}\n2、左右两边定宽，中间自适应：float，float + calc, 圣杯布局（设置BFC，margin负值法），flex\n\n.wrap {\n    width: 100%;\n    height: 200px;\n}\n.wrap > div {\n    height: 100%;\n}\n/* 方案1 */\n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n    float: right;\n    width: 120px;\n}\n.center {\n    margin: 0 120px; \n}\n/* 方案2 */\n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n  float: right;\n  width: 120px;\n}\n.center {\n       width: calc(100% - 240px);\n       margin-left: 120px;\n}\n/* 方案3 */\n.wrap {\n    display: flex;\n}\n.left {\n    width: 120px;\n}\n.right {\n    width: 120px;\n}\n.center {\n    flex: 1;\n}\n3、左右居中\n\n行内元素: text-align: center\n定宽块状元素: 左右 margin 值为 auto\n不定宽块状元素: table布局，position + transform\n/* 方案1 */\n.wrap {\n    text-align: center\n}\n.center {\n     display: inline;\n         /* or */\n         /* display: inline-block; */\n}\n/* 方案2 */\n.center {\n    width: 100px;\n    margin: 0 auto;\n}\n/* 方案2 */\n.wrap {\n    position: relative;\n}\n.center {\nposition: absulote;\n    left: 50%;\n    transform: translateX(-50%);\n}\n4、上下垂直居中：\n\n定高：margin，position + margin(负值)\n    不定高：position + transform，flex，IFC + vertical-align:middle\n    /* 定高方案1 */\n.center {\n    height: 100px;\n    margin: 50px 0;   \n    }\n/* 定高方案2 */\n.center {\n    height: 100px;\n    position: absolute;\n    top: 50%;\n    margin-top: -25px;\n}\n/* 不定高方案1 */\n.center {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n/* 不定高方案2 */\n.wrap {\n     display: flex;\n     align-items: center;\n}\n.center {\nwidth: 100%;\n}\n/* 不定高方案3 */\n/* 设置 inline-block 则会在外层产生 IFC，高度设为 100% 撑开 wrap 的高度 */\n.wrap::before {\ncontent: '';\nheight: 100%;\ndisplay: inline-block;\n         vertical-align: middle;\n}\n.wrap {\n    text-align: center;\n}\n.center {\ndisplay: inline-block;  \n         vertical-align: middle;\n}\n5、盒模型：content（元素内容） + padding（内边距） + border（边框） + margin（外边距）\n\n延伸： box-sizing\n\ncontent-box：默认值，总宽度 = margin + border + padding + width\nborder-box：盒子宽度包含 padding 和 border，总宽度 = margin + width\ninherit：从父元素继承 box-sizing 属性\n6、BFC、IFC、GFC、FFC：FC（Formatting Contexts），格式化上下文\n\nBFC：块级格式化上下文，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此(按照这个理念来想，只要脱离文档流，肯定就能产生 BFC)。产生 BFC 方式如下\nfloat 的值不为 none。\noverflow 的值不为 visible。\nposition 的值不为 relative 和 static。\ndisplay 的值为 table-cell, table-caption, inline-block中的任何一个。\n用处？常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。\n\nIFC：内联格式化上下文，IFC 的 line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的 padding/margin 影响)。\nIFC中的line box一般左右都贴紧整个 IFC，但是会因为 float 元素而扰乱。float 元素会位于 IFC 与 line box 之间，使得 line box 宽度缩短。 同个 ifc 下的多个 line box 高度会不同。 IFC 中时不可能有块级元素的，当插入块级元素时（如 p 中插入 div ）会产生两个匿名块与 div 分隔开，即产生两个 IFC ，每个 IFC 对外表现为块级元素，与 div 垂直排列。\n\n用处？\n\n水平居中：当一个块要在环境中水平居中时，设置其为 inline-block 则会在外层产生IFC，通过 text-align 则可以使其水平居中。\n垂直居中：创建一个 IFC，用其中一个元素撑开父元素的高度，然后设置其 vertical-align: middle，其他行内元素则可以在此父元素下垂直居中\n\n\nGFC：网格布局格式化上下文（display: grid）\nFFC：自适应格式化上下文（display: flex）\nCSS2.1中只有BFC和IFC, CSS3中才有GFC和FFC。\n到底什么是BFC、IFC、GFC和FFC，次奥\n\nWhat's FC？\n一定不是KFC，FC的全称是：Formatting Contexts，是W3C CSS2.1规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。\nBFC\nBFC(Block Formatting Contexts)直译为\"块级格式化上下文\"。Block Formatting Contexts就是页面上的一个隔离的渲染区域，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此。如何产生BFC？\nfloat的值不为none。 \noverflow的值不为visible。 \nposition的值不为relative和static。\ndisplay的值为table-cell, table-caption, inline-block中的任何一个。 \n那BFC一般有什么用呢？比如常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。\nIFC\nIFC(Inline Formatting Contexts)直译为\"内联格式化上下文\"，IFC的line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的padding/margin影响)\nIFC中的line box一般左右都贴紧整个IFC，但是会因为float元素而扰乱。float元素会位于IFC与与line box之间，使得line box宽度缩短。 同个ifc下的多个line box高度会不同。 IFC中时不可能有块级元素的，当插入块级元素时（如p中插入div）会产生两个匿名块与div分隔开，即产生两个IFC，每个IFC对外表现为块级元素，与div垂直排列。\n那么IFC一般有什么用呢？\n水平居中：当一个块要在环境中水平居中时，设置其为inline-block则会在外层产生IFC，通过text-align则可以使其水平居中。\n垂直居中：创建一个IFC，用其中一个元素撑开父元素的高度，然后设置其vertical-align:middle，其他行内元素则可以在此父元素下垂直居中。\nGFC\nGFC(GridLayout Formatting Contexts)直译为\"网格布局格式化上下文\"，当为一个元素设置display值为grid的时候，此元素将会获得一个独立的渲染区域，我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性各在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间。 \n那么GFC有什么用呢，和table又有什么区别呢？首先同样是一个二维的表格，但GridLayout会有更加丰富的属性来控制行列，控制对齐以及更为精细的渲染语义和控制。\nFFC\nFFC(Flex Formatting Contexts)直译为\"自适应格式化上下文\"，display值为flex或者inline-flex的元素将会生成自适应容器（flex container），可惜这个牛逼的属性只有谷歌和火狐支持，不过在移动端也足够了，至少safari和chrome还是OK的，毕竟这俩在移动端才是王道。\nFlex Box 由伸缩容器和伸缩项目组成。通过设置元素的 display 属性为 flex 或 inline-flex 可以得到一个伸缩容器。设置为 flex 的容器被渲染为一个块级元素，而设置为 inline-flex 的容器则渲染为一个行内元素。\n伸缩容器中的每一个子元素都是一个伸缩项目。伸缩项目可以是任意数量的。伸缩容器外和伸缩项目内的一切元素都不受影响。简单地说，Flexbox 定义了伸缩容器内伸缩项目该如何布局。\n醉饮山林，自是闲暇白云间。笑红尘，总是爱恨贪嗔痴。若问人间逍遥在，风生之谷，莲开其中。\n详细参考:[css3中的BFC,IFC,GFC和FFC ](https://www.jianshu.com/p/e75f351e11f8)\n\n","source":"_posts/css总结.md","raw":"---\ntitle: 20171030\ndate: 2017-10-30 09:24:17\ntags:\n---\n\n未来的CSS太让人兴奋了：一方面，是全新的页面布局方式；另一方面，是酷炫的滤镜、颜色等视觉效果。这些CSS，受开发者追捧，被杂志和博客文章铺天盖地地介绍。 \n　　如果说这些特性是CSS华丽的一面，那我们来看看它朴实的一面：很不起眼的东西，如选择器、单位、函数（方法）。我经常说这是繁琐的东西，但我意思是它们能干漂亮的活，这就是我要分享的。 \n　　怎么说呢，让我们看看这些效果最好的朴实的CSS细节——这些细节远远没有那些酷炫的CSS效果那么引人注目。它们有些已经存在一段时间了，但值得我们更好地认识，而有些则刚刚面世。虽然不起眼，但是它们可以提高我们的工作效率——以谦虚的姿态。 \n相对单位 \n　　聪明又有前瞻头脑的开发者们已经使用相对单位了——如em或者百分比——所以，开发者们了解这个问题：往往因为元素的继承性而需要使用计算器作为辅助工具来计算大小。例如，现在普遍的做法是给页面的字体设置全局尺寸，然后用相对单位来定义页面中其它的元素。CSS大概会这样写： \nhtml { font-size: 10px; } p { font-size: 1.4em; }\n\n　　这样写是没问题，直到有个子元素需要设置一个不同的字体大小，比如，在这样的标签当中： \nThe cat sat on the mat.\n\n　　如果你要设置span的字体大小为1.2em，你需要做什么？拿出计算器，算算1.2除以1.4是多少，结果如下： \np span { font-size: 0.85714em; }\n\n　　这个问题不局限于em。如果用百分比来创建响应式的流式布局网站，而百分比是与容器相关的，所以，如果要定义一个元素为它的容器的40%，它的高是75%，宽则需要设置为53.33333%。 \n　　很明显，这很不方便。 \n根相关的长度单位 \n　　为了修复字体大小定义的问题，现在可以使用单位rem（root em）。rem同样是相对单位，但是它所对应的是固定的基本值，这个固定的基本值也就是文档的根元素的字体大小（在HTML文件中，就是html元素）。假设和上个例子一样，同样设定10px的字体大小为根元素的大小，那么CSS这样写就OK了： \np { font-size: 1.4rem; } p span { font-size: 1.2rem; }\n\n　　这两个CSS规则都是相对于根元素的字体大小，这样的代码更加优雅和简便，特别是在设置简单的数值如10px或者12px的时候。这样和使用px值很相似，不同点在于rem是可扩展的。 \n　　在整篇文章介绍的特性中，rem特性相对来说是兼容性比较好，高级浏览器都能支持，包括IE9在内，除了Opera Mobile。 \n窗口相关的长度单位 \n　　觉得rem单位很酷吧，如果还有另外一组单位能解决百分比的问题，那就更酷了。它和rem的道理相似，不同点在于，它相对的不是文档的根元素，而是相对于设备窗口本身的大小。 \n　　这两个单位就是vh和vw，即是相对于窗口大小的高和宽。每个单位在前面加上数字，代表的是多少个百分比。 \ndiv { height: 50vh; }\n\n　　在上面的例子，高度被设定为窗口高度的一半。1vh相当于一个百分比的窗口高度，所以50vh即是50%的窗口高度。 \n　　如果窗口大小变了，那么这个值也随之改变。这相对百分比来说，好处是不需要担心父容器，不管它的父容器如何，10vw的元素会一直是10%的窗口大小。 \n　　相应地，有vmin单位，相当于vh或者vw的最小值，最近还宣布有vmax单位会被加到规范文档里面（虽然在这篇文章发布的时候还没有）。 \n　　现在支持这个特性的有IE9+、Chrome和Safari 6。 \n运算式的值 \n　　如果你在做响应式的流式布局网站，经常会遇到混合单位的问题——用百分比设置栅格，但是又用固定像素宽度设置margin。如： \ndiv { margin: 0 20px; width: 33%;}\n\n　　如果布局只用到padding和border，你可以使用box-sizing来解决，但是对于margin就无能为力了。更好、更灵活的方法是使用calc()函数，设置不同单位之间的数学方程式，如： \ndiv { margin: 0 20px; width: calc(33% - 40px);}\n\n　　它不仅可以用来计算宽，还可以用来计算长度——如果有必要，还可以在calc()里面再加calc()。 \n　　这个特性IE9+和Firefox都支持，Firefox需要加上 -moz- 前缀（在版本16或17可能不用加前缀），Chrome和Safari也支持，但需要加上 -webkit- 前缀。然而，移动Webkit还不支持。 \n加载字体库的部分字体 \n　　优越的性能往往很重要，尤其是市场上各种各样的移动设备——导致连接速度的差异和不确定性——更加体现了这个重要性。其中一个加快页面加载速度的方法，就是减少外部文件个数，@font-face的一个新属性unicode-range就是为此而生。 \n　　这个属性就是unicode-range（编码范围），代表的是编码字体的参数范围。在加载外部文件的时候，只有那些被使用的字体才会被加载，而不是整套字体库。下面的代码演示了如何从foo.ttf字体库中仅加载三个字体： \n@font-face {font-family: foo;src: url(‘foo.ttf’);unicode-range: U+31-33;}\n\n　　这点对于使用字体图标的页面尤其有用。我测试过，使用unicode-range，加载字体文件的时间平均减少了0.85秒，也不是小数目了。当然，你可能不会这么想。 \n　　这个属性，目前可以在IE9+、Webkit浏览器（如Chrome和Safari）中运行。 \n新的伪类 \n　　单位和值都应该好好利用，但是，让我更兴奋的是选择器和伪类。完善的选择器模式，即使只有少数浏览器支持，都让我兴奋不已。引用乔布斯的话：你要把栅栏的里面修得和外面一样漂亮，即使别人看不到里面——因为你自己知道。 \n　　我第一次使用:nth-of-type()的时候，简直是一次突破，就像我冲出了思想的桎梏。好吧，我有些夸张了。但有些新的CSS伪类，确实值得狂热一番。 \n否定伪类 \n　　你大概不知道 :not() 伪类的好，除非你亲自实践一番。带有参数的 :not() 其实就是普通的选择器——不是复合选择器。一组元素加上选择器 :not()，表示满足这个参数的元素会被排除出去。听起来有些复杂吧？但是实际上非常简单。 \n　　假设：要对项目列表的奇数行进行选择，但是最后一行除外。如果是以前，需要这样写： \nli { color: #00F; } li:nth-child(odd) { color: #F00; } li:last-child { color: #00F; }\n\n　　现在，通过设定:last-child作为否定伪类的参数，就可以把最后一个元素排除，这样少了一行代码，从而更加的简洁和易维护。 \nli { color: #00F; } li:nth-child(odd):not(:last-child) { color: #F00; }\n\n　　否定伪类看起来并没有什么惊人之处，你可以不用它，但是它还是挺实用的。我曾经把它用在基于Webkit的项目当中，优势还是挺明显的。说实话，它是我最喜欢的伪类之一。 \n　　是的，我有最喜欢的伪类。 \n　　在本文提到的特性当中，否定伪类是兼容性最好的，它被IE9+和高级浏览器支持（不需要加浏览器产商前缀）。如果你熟悉jQuery，你可能习惯用它——版本1.0开始就有了，以及相似的not()方法。 \n“适用于”伪类 \n　　:matches() 伪类可以用普通的选择器、复合选择器、逗号隔开的列表或任何的选择器组合作为参数。太棒了！但是，它能做什么？ \n　　:matches() 伪类最强大的地方就是聚合多行选择器。例如，要选择父容器里面其中几个不同子容器里面的p元素，在这之前，代码或许会写成这样： \n.home header p,.home footer p,.home aside p {color: #F00;}\n\n　　有了:matches()伪类，就可以把共同点提取出来，缩减代码量。该例子里面，选择器的共同点是以home为起点、以p为终点，所以可以用:matches()把中间的所有元素集合起来。是不是有些困惑？看看代码就明白了： \n.home :matches(header,footer,aside) p { color: #F00; }\n\n　　这其实是CSS4的一部分（确切地说，是CSS选择器第四等级），这份规范文档还提到将会有类似的语法（以逗号隔开的复合选择器）应用于:not()伪类。兴奋ing！ \n　　目前，:matches()可以在Chrome和Safari浏览器中运行，但是要加上前缀-webkit-，Firefox也支持，但是要按照旧的写法:any()，同时要加上-moz-前缀。 \n你爱上这些朴实的CSS细节了吗？ \n　　这篇文章讲到的特性，最赞的一点是它们解决了现实的问题，从琐碎而繁复的选择器到建立响应式网站的新挑战。实际上，我期待每一个特性被使用到最普通的项目当中。（web前端学习交流群：328058344 禁止闲聊，非喜勿进！）\n\n　　新特性如滤镜可能很直观很华丽，但是我更愿意发现隐藏在深处的实用小技巧。 \n　　在积极探索的过程中，每一个特性可以让你的职业生涯更顺利——想到这里，就不会觉得繁琐了ted below are all the plug\n\n## CSS相关\n\n1、左边定宽，右边自适应方案：float + margin，float + calc\n\n/* 方案1 */ \n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n    margin-left: 120px;\n}\n/* 方案2 */ \n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n    width: calc(100% - 120px);\n    float: left;\n}\n2、左右两边定宽，中间自适应：float，float + calc, 圣杯布局（设置BFC，margin负值法），flex\n\n.wrap {\n    width: 100%;\n    height: 200px;\n}\n.wrap > div {\n    height: 100%;\n}\n/* 方案1 */\n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n    float: right;\n    width: 120px;\n}\n.center {\n    margin: 0 120px; \n}\n/* 方案2 */\n.left {\n    width: 120px;\n    float: left;\n}\n.right {\n  float: right;\n  width: 120px;\n}\n.center {\n       width: calc(100% - 240px);\n       margin-left: 120px;\n}\n/* 方案3 */\n.wrap {\n    display: flex;\n}\n.left {\n    width: 120px;\n}\n.right {\n    width: 120px;\n}\n.center {\n    flex: 1;\n}\n3、左右居中\n\n行内元素: text-align: center\n定宽块状元素: 左右 margin 值为 auto\n不定宽块状元素: table布局，position + transform\n/* 方案1 */\n.wrap {\n    text-align: center\n}\n.center {\n     display: inline;\n         /* or */\n         /* display: inline-block; */\n}\n/* 方案2 */\n.center {\n    width: 100px;\n    margin: 0 auto;\n}\n/* 方案2 */\n.wrap {\n    position: relative;\n}\n.center {\nposition: absulote;\n    left: 50%;\n    transform: translateX(-50%);\n}\n4、上下垂直居中：\n\n定高：margin，position + margin(负值)\n    不定高：position + transform，flex，IFC + vertical-align:middle\n    /* 定高方案1 */\n.center {\n    height: 100px;\n    margin: 50px 0;   \n    }\n/* 定高方案2 */\n.center {\n    height: 100px;\n    position: absolute;\n    top: 50%;\n    margin-top: -25px;\n}\n/* 不定高方案1 */\n.center {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n}\n/* 不定高方案2 */\n.wrap {\n     display: flex;\n     align-items: center;\n}\n.center {\nwidth: 100%;\n}\n/* 不定高方案3 */\n/* 设置 inline-block 则会在外层产生 IFC，高度设为 100% 撑开 wrap 的高度 */\n.wrap::before {\ncontent: '';\nheight: 100%;\ndisplay: inline-block;\n         vertical-align: middle;\n}\n.wrap {\n    text-align: center;\n}\n.center {\ndisplay: inline-block;  \n         vertical-align: middle;\n}\n5、盒模型：content（元素内容） + padding（内边距） + border（边框） + margin（外边距）\n\n延伸： box-sizing\n\ncontent-box：默认值，总宽度 = margin + border + padding + width\nborder-box：盒子宽度包含 padding 和 border，总宽度 = margin + width\ninherit：从父元素继承 box-sizing 属性\n6、BFC、IFC、GFC、FFC：FC（Formatting Contexts），格式化上下文\n\nBFC：块级格式化上下文，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此(按照这个理念来想，只要脱离文档流，肯定就能产生 BFC)。产生 BFC 方式如下\nfloat 的值不为 none。\noverflow 的值不为 visible。\nposition 的值不为 relative 和 static。\ndisplay 的值为 table-cell, table-caption, inline-block中的任何一个。\n用处？常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。\n\nIFC：内联格式化上下文，IFC 的 line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的 padding/margin 影响)。\nIFC中的line box一般左右都贴紧整个 IFC，但是会因为 float 元素而扰乱。float 元素会位于 IFC 与 line box 之间，使得 line box 宽度缩短。 同个 ifc 下的多个 line box 高度会不同。 IFC 中时不可能有块级元素的，当插入块级元素时（如 p 中插入 div ）会产生两个匿名块与 div 分隔开，即产生两个 IFC ，每个 IFC 对外表现为块级元素，与 div 垂直排列。\n\n用处？\n\n水平居中：当一个块要在环境中水平居中时，设置其为 inline-block 则会在外层产生IFC，通过 text-align 则可以使其水平居中。\n垂直居中：创建一个 IFC，用其中一个元素撑开父元素的高度，然后设置其 vertical-align: middle，其他行内元素则可以在此父元素下垂直居中\n\n\nGFC：网格布局格式化上下文（display: grid）\nFFC：自适应格式化上下文（display: flex）\nCSS2.1中只有BFC和IFC, CSS3中才有GFC和FFC。\n到底什么是BFC、IFC、GFC和FFC，次奥\n\nWhat's FC？\n一定不是KFC，FC的全称是：Formatting Contexts，是W3C CSS2.1规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。\nBFC\nBFC(Block Formatting Contexts)直译为\"块级格式化上下文\"。Block Formatting Contexts就是页面上的一个隔离的渲染区域，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此。如何产生BFC？\nfloat的值不为none。 \noverflow的值不为visible。 \nposition的值不为relative和static。\ndisplay的值为table-cell, table-caption, inline-block中的任何一个。 \n那BFC一般有什么用呢？比如常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。\nIFC\nIFC(Inline Formatting Contexts)直译为\"内联格式化上下文\"，IFC的line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的padding/margin影响)\nIFC中的line box一般左右都贴紧整个IFC，但是会因为float元素而扰乱。float元素会位于IFC与与line box之间，使得line box宽度缩短。 同个ifc下的多个line box高度会不同。 IFC中时不可能有块级元素的，当插入块级元素时（如p中插入div）会产生两个匿名块与div分隔开，即产生两个IFC，每个IFC对外表现为块级元素，与div垂直排列。\n那么IFC一般有什么用呢？\n水平居中：当一个块要在环境中水平居中时，设置其为inline-block则会在外层产生IFC，通过text-align则可以使其水平居中。\n垂直居中：创建一个IFC，用其中一个元素撑开父元素的高度，然后设置其vertical-align:middle，其他行内元素则可以在此父元素下垂直居中。\nGFC\nGFC(GridLayout Formatting Contexts)直译为\"网格布局格式化上下文\"，当为一个元素设置display值为grid的时候，此元素将会获得一个独立的渲染区域，我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性各在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间。 \n那么GFC有什么用呢，和table又有什么区别呢？首先同样是一个二维的表格，但GridLayout会有更加丰富的属性来控制行列，控制对齐以及更为精细的渲染语义和控制。\nFFC\nFFC(Flex Formatting Contexts)直译为\"自适应格式化上下文\"，display值为flex或者inline-flex的元素将会生成自适应容器（flex container），可惜这个牛逼的属性只有谷歌和火狐支持，不过在移动端也足够了，至少safari和chrome还是OK的，毕竟这俩在移动端才是王道。\nFlex Box 由伸缩容器和伸缩项目组成。通过设置元素的 display 属性为 flex 或 inline-flex 可以得到一个伸缩容器。设置为 flex 的容器被渲染为一个块级元素，而设置为 inline-flex 的容器则渲染为一个行内元素。\n伸缩容器中的每一个子元素都是一个伸缩项目。伸缩项目可以是任意数量的。伸缩容器外和伸缩项目内的一切元素都不受影响。简单地说，Flexbox 定义了伸缩容器内伸缩项目该如何布局。\n醉饮山林，自是闲暇白云间。笑红尘，总是爱恨贪嗔痴。若问人间逍遥在，风生之谷，莲开其中。\n详细参考:[css3中的BFC,IFC,GFC和FFC ](https://www.jianshu.com/p/e75f351e11f8)\n\n","slug":"css总结","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zls000j2oi8vdwr5put","content":"<p>未来的CSS太让人兴奋了：一方面，是全新的页面布局方式；另一方面，是酷炫的滤镜、颜色等视觉效果。这些CSS，受开发者追捧，被杂志和博客文章铺天盖地地介绍。<br>　　如果说这些特性是CSS华丽的一面，那我们来看看它朴实的一面：很不起眼的东西，如选择器、单位、函数（方法）。我经常说这是繁琐的东西，但我意思是它们能干漂亮的活，这就是我要分享的。<br>　　怎么说呢，让我们看看这些效果最好的朴实的CSS细节——这些细节远远没有那些酷炫的CSS效果那么引人注目。它们有些已经存在一段时间了，但值得我们更好地认识，而有些则刚刚面世。虽然不起眼，但是它们可以提高我们的工作效率——以谦虚的姿态。<br>相对单位<br>　　聪明又有前瞻头脑的开发者们已经使用相对单位了——如em或者百分比——所以，开发者们了解这个问题：往往因为元素的继承性而需要使用计算器作为辅助工具来计算大小。例如，现在普遍的做法是给页面的字体设置全局尺寸，然后用相对单位来定义页面中其它的元素。CSS大概会这样写：<br>html { font-size: 10px; } p { font-size: 1.4em; }</p>\n<p>　　这样写是没问题，直到有个子元素需要设置一个不同的字体大小，比如，在这样的标签当中：<br>The cat sat on the mat.</p>\n<p>　　如果你要设置span的字体大小为1.2em，你需要做什么？拿出计算器，算算1.2除以1.4是多少，结果如下：<br>p span { font-size: 0.85714em; }</p>\n<p>　　这个问题不局限于em。如果用百分比来创建响应式的流式布局网站，而百分比是与容器相关的，所以，如果要定义一个元素为它的容器的40%，它的高是75%，宽则需要设置为53.33333%。<br>　　很明显，这很不方便。<br>根相关的长度单位<br>　　为了修复字体大小定义的问题，现在可以使用单位rem（root em）。rem同样是相对单位，但是它所对应的是固定的基本值，这个固定的基本值也就是文档的根元素的字体大小（在HTML文件中，就是html元素）。假设和上个例子一样，同样设定10px的字体大小为根元素的大小，那么CSS这样写就OK了：<br>p { font-size: 1.4rem; } p span { font-size: 1.2rem; }</p>\n<p>　　这两个CSS规则都是相对于根元素的字体大小，这样的代码更加优雅和简便，特别是在设置简单的数值如10px或者12px的时候。这样和使用px值很相似，不同点在于rem是可扩展的。<br>　　在整篇文章介绍的特性中，rem特性相对来说是兼容性比较好，高级浏览器都能支持，包括IE9在内，除了Opera Mobile。<br>窗口相关的长度单位<br>　　觉得rem单位很酷吧，如果还有另外一组单位能解决百分比的问题，那就更酷了。它和rem的道理相似，不同点在于，它相对的不是文档的根元素，而是相对于设备窗口本身的大小。<br>　　这两个单位就是vh和vw，即是相对于窗口大小的高和宽。每个单位在前面加上数字，代表的是多少个百分比。<br>div { height: 50vh; }</p>\n<p>　　在上面的例子，高度被设定为窗口高度的一半。1vh相当于一个百分比的窗口高度，所以50vh即是50%的窗口高度。<br>　　如果窗口大小变了，那么这个值也随之改变。这相对百分比来说，好处是不需要担心父容器，不管它的父容器如何，10vw的元素会一直是10%的窗口大小。<br>　　相应地，有vmin单位，相当于vh或者vw的最小值，最近还宣布有vmax单位会被加到规范文档里面（虽然在这篇文章发布的时候还没有）。<br>　　现在支持这个特性的有IE9+、Chrome和Safari 6。<br>运算式的值<br>　　如果你在做响应式的流式布局网站，经常会遇到混合单位的问题——用百分比设置栅格，但是又用固定像素宽度设置margin。如：<br>div { margin: 0 20px; width: 33%;}</p>\n<p>　　如果布局只用到padding和border，你可以使用box-sizing来解决，但是对于margin就无能为力了。更好、更灵活的方法是使用calc()函数，设置不同单位之间的数学方程式，如：<br>div { margin: 0 20px; width: calc(33% - 40px);}</p>\n<p>　　它不仅可以用来计算宽，还可以用来计算长度——如果有必要，还可以在calc()里面再加calc()。<br>　　这个特性IE9+和Firefox都支持，Firefox需要加上 -moz- 前缀（在版本16或17可能不用加前缀），Chrome和Safari也支持，但需要加上 -webkit- 前缀。然而，移动Webkit还不支持。<br>加载字体库的部分字体<br>　　优越的性能往往很重要，尤其是市场上各种各样的移动设备——导致连接速度的差异和不确定性——更加体现了这个重要性。其中一个加快页面加载速度的方法，就是减少外部文件个数，@font-face的一个新属性unicode-range就是为此而生。<br>　　这个属性就是unicode-range（编码范围），代表的是编码字体的参数范围。在加载外部文件的时候，只有那些被使用的字体才会被加载，而不是整套字体库。下面的代码演示了如何从foo.ttf字体库中仅加载三个字体：<br>@font-face {font-family: foo;src: url(‘foo.ttf’);unicode-range: U+31-33;}</p>\n<p>　　这点对于使用字体图标的页面尤其有用。我测试过，使用unicode-range，加载字体文件的时间平均减少了0.85秒，也不是小数目了。当然，你可能不会这么想。<br>　　这个属性，目前可以在IE9+、Webkit浏览器（如Chrome和Safari）中运行。<br>新的伪类<br>　　单位和值都应该好好利用，但是，让我更兴奋的是选择器和伪类。完善的选择器模式，即使只有少数浏览器支持，都让我兴奋不已。引用乔布斯的话：你要把栅栏的里面修得和外面一样漂亮，即使别人看不到里面——因为你自己知道。<br>　　我第一次使用:nth-of-type()的时候，简直是一次突破，就像我冲出了思想的桎梏。好吧，我有些夸张了。但有些新的CSS伪类，确实值得狂热一番。<br>否定伪类<br>　　你大概不知道 :not() 伪类的好，除非你亲自实践一番。带有参数的 :not() 其实就是普通的选择器——不是复合选择器。一组元素加上选择器 :not()，表示满足这个参数的元素会被排除出去。听起来有些复杂吧？但是实际上非常简单。<br>　　假设：要对项目列表的奇数行进行选择，但是最后一行除外。如果是以前，需要这样写：<br>li { color: #00F; } li:nth-child(odd) { color: #F00; } li:last-child { color: #00F; }</p>\n<p>　　现在，通过设定:last-child作为否定伪类的参数，就可以把最后一个元素排除，这样少了一行代码，从而更加的简洁和易维护。<br>li { color: #00F; } li:nth-child(odd):not(:last-child) { color: #F00; }</p>\n<p>　　否定伪类看起来并没有什么惊人之处，你可以不用它，但是它还是挺实用的。我曾经把它用在基于Webkit的项目当中，优势还是挺明显的。说实话，它是我最喜欢的伪类之一。<br>　　是的，我有最喜欢的伪类。<br>　　在本文提到的特性当中，否定伪类是兼容性最好的，它被IE9+和高级浏览器支持（不需要加浏览器产商前缀）。如果你熟悉jQuery，你可能习惯用它——版本1.0开始就有了，以及相似的not()方法。<br>“适用于”伪类<br>　　:matches() 伪类可以用普通的选择器、复合选择器、逗号隔开的列表或任何的选择器组合作为参数。太棒了！但是，它能做什么？<br>　　:matches() 伪类最强大的地方就是聚合多行选择器。例如，要选择父容器里面其中几个不同子容器里面的p元素，在这之前，代码或许会写成这样：<br>.home header p,.home footer p,.home aside p {color: #F00;}</p>\n<p>　　有了:matches()伪类，就可以把共同点提取出来，缩减代码量。该例子里面，选择器的共同点是以home为起点、以p为终点，所以可以用:matches()把中间的所有元素集合起来。是不是有些困惑？看看代码就明白了：<br>.home :matches(header,footer,aside) p { color: #F00; }</p>\n<p>　　这其实是CSS4的一部分（确切地说，是CSS选择器第四等级），这份规范文档还提到将会有类似的语法（以逗号隔开的复合选择器）应用于:not()伪类。兴奋ing！<br>　　目前，:matches()可以在Chrome和Safari浏览器中运行，但是要加上前缀-webkit-，Firefox也支持，但是要按照旧的写法:any()，同时要加上-moz-前缀。<br>你爱上这些朴实的CSS细节了吗？<br>　　这篇文章讲到的特性，最赞的一点是它们解决了现实的问题，从琐碎而繁复的选择器到建立响应式网站的新挑战。实际上，我期待每一个特性被使用到最普通的项目当中。（web前端学习交流群：328058344 禁止闲聊，非喜勿进！）</p>\n<p>　　新特性如滤镜可能很直观很华丽，但是我更愿意发现隐藏在深处的实用小技巧。<br>　　在积极探索的过程中，每一个特性可以让你的职业生涯更顺利——想到这里，就不会觉得繁琐了ted below are all the plug</p>\n<h2 id=\"CSS相关\"><a href=\"#CSS相关\" class=\"headerlink\" title=\"CSS相关\"></a>CSS相关</h2><p>1、左边定宽，右边自适应方案：float + margin，float + calc</p>\n<p>/* 方案1 <em>/<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>    margin-left: 120px;<br>}<br>/</em> 方案2 */<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>    width: calc(100% - 120px);<br>    float: left;<br>}<br>2、左右两边定宽，中间自适应：float，float + calc, 圣杯布局（设置BFC，margin负值法），flex</p>\n<p>.wrap {<br>    width: 100%;<br>    height: 200px;<br>}<br>.wrap &gt; div {<br>    height: 100%;<br>}<br>/* 方案1 <em>/<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>    float: right;<br>    width: 120px;<br>}<br>.center {<br>    margin: 0 120px;<br>}<br>/</em> 方案2 <em>/<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>  float: right;<br>  width: 120px;<br>}<br>.center {<br>       width: calc(100% - 240px);<br>       margin-left: 120px;<br>}<br>/</em> 方案3 */<br>.wrap {<br>    display: flex;<br>}<br>.left {<br>    width: 120px;<br>}<br>.right {<br>    width: 120px;<br>}<br>.center {<br>    flex: 1;<br>}<br>3、左右居中</p>\n<p>行内元素: text-align: center<br>定宽块状元素: 左右 margin 值为 auto<br>不定宽块状元素: table布局，position + transform<br>/* 方案1 <em>/<br>.wrap {<br>    text-align: center<br>}<br>.center {<br>     display: inline;<br>         /</em> or <em>/<br>         /</em> display: inline-block; <em>/<br>}<br>/</em> 方案2 <em>/<br>.center {<br>    width: 100px;<br>    margin: 0 auto;<br>}<br>/</em> 方案2 */<br>.wrap {<br>    position: relative;<br>}<br>.center {<br>position: absulote;<br>    left: 50%;<br>    transform: translateX(-50%);<br>}<br>4、上下垂直居中：</p>\n<p>定高：margin，position + margin(负值)<br>    不定高：position + transform，flex，IFC + vertical-align:middle<br>    /* 定高方案1 <em>/<br>.center {<br>    height: 100px;<br>    margin: 50px 0;<br>    }<br>/</em> 定高方案2 <em>/<br>.center {<br>    height: 100px;<br>    position: absolute;<br>    top: 50%;<br>    margin-top: -25px;<br>}<br>/</em> 不定高方案1 <em>/<br>.center {<br>    position: absolute;<br>    top: 50%;<br>    transform: translateY(-50%);<br>}<br>/</em> 不定高方案2 <em>/<br>.wrap {<br>     display: flex;<br>     align-items: center;<br>}<br>.center {<br>width: 100%;<br>}<br>/</em> 不定高方案3 <em>/<br>/</em> 设置 inline-block 则会在外层产生 IFC，高度设为 100% 撑开 wrap 的高度 */<br>.wrap::before {<br>content: ‘’;<br>height: 100%;<br>display: inline-block;<br>         vertical-align: middle;<br>}<br>.wrap {<br>    text-align: center;<br>}<br>.center {<br>display: inline-block;<br>         vertical-align: middle;<br>}<br>5、盒模型：content（元素内容） + padding（内边距） + border（边框） + margin（外边距）</p>\n<p>延伸： box-sizing</p>\n<p>content-box：默认值，总宽度 = margin + border + padding + width<br>border-box：盒子宽度包含 padding 和 border，总宽度 = margin + width<br>inherit：从父元素继承 box-sizing 属性<br>6、BFC、IFC、GFC、FFC：FC（Formatting Contexts），格式化上下文</p>\n<p>BFC：块级格式化上下文，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此(按照这个理念来想，只要脱离文档流，肯定就能产生 BFC)。产生 BFC 方式如下<br>float 的值不为 none。<br>overflow 的值不为 visible。<br>position 的值不为 relative 和 static。<br>display 的值为 table-cell, table-caption, inline-block中的任何一个。<br>用处？常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。</p>\n<p>IFC：内联格式化上下文，IFC 的 line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的 padding/margin 影响)。<br>IFC中的line box一般左右都贴紧整个 IFC，但是会因为 float 元素而扰乱。float 元素会位于 IFC 与 line box 之间，使得 line box 宽度缩短。 同个 ifc 下的多个 line box 高度会不同。 IFC 中时不可能有块级元素的，当插入块级元素时（如 p 中插入 div ）会产生两个匿名块与 div 分隔开，即产生两个 IFC ，每个 IFC 对外表现为块级元素，与 div 垂直排列。</p>\n<p>用处？</p>\n<p>水平居中：当一个块要在环境中水平居中时，设置其为 inline-block 则会在外层产生IFC，通过 text-align 则可以使其水平居中。<br>垂直居中：创建一个 IFC，用其中一个元素撑开父元素的高度，然后设置其 vertical-align: middle，其他行内元素则可以在此父元素下垂直居中</p>\n<p>GFC：网格布局格式化上下文（display: grid）<br>FFC：自适应格式化上下文（display: flex）<br>CSS2.1中只有BFC和IFC, CSS3中才有GFC和FFC。<br>到底什么是BFC、IFC、GFC和FFC，次奥</p>\n<p>What’s FC？<br>一定不是KFC，FC的全称是：Formatting Contexts，是W3C CSS2.1规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。<br>BFC<br>BFC(Block Formatting Contexts)直译为”块级格式化上下文”。Block Formatting Contexts就是页面上的一个隔离的渲染区域，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此。如何产生BFC？<br>float的值不为none。<br>overflow的值不为visible。<br>position的值不为relative和static。<br>display的值为table-cell, table-caption, inline-block中的任何一个。<br>那BFC一般有什么用呢？比如常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。<br>IFC<br>IFC(Inline Formatting Contexts)直译为”内联格式化上下文”，IFC的line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的padding/margin影响)<br>IFC中的line box一般左右都贴紧整个IFC，但是会因为float元素而扰乱。float元素会位于IFC与与line box之间，使得line box宽度缩短。 同个ifc下的多个line box高度会不同。 IFC中时不可能有块级元素的，当插入块级元素时（如p中插入div）会产生两个匿名块与div分隔开，即产生两个IFC，每个IFC对外表现为块级元素，与div垂直排列。<br>那么IFC一般有什么用呢？<br>水平居中：当一个块要在环境中水平居中时，设置其为inline-block则会在外层产生IFC，通过text-align则可以使其水平居中。<br>垂直居中：创建一个IFC，用其中一个元素撑开父元素的高度，然后设置其vertical-align:middle，其他行内元素则可以在此父元素下垂直居中。<br>GFC<br>GFC(GridLayout Formatting Contexts)直译为”网格布局格式化上下文”，当为一个元素设置display值为grid的时候，此元素将会获得一个独立的渲染区域，我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性各在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间。<br>那么GFC有什么用呢，和table又有什么区别呢？首先同样是一个二维的表格，但GridLayout会有更加丰富的属性来控制行列，控制对齐以及更为精细的渲染语义和控制。<br>FFC<br>FFC(Flex Formatting Contexts)直译为”自适应格式化上下文”，display值为flex或者inline-flex的元素将会生成自适应容器（flex container），可惜这个牛逼的属性只有谷歌和火狐支持，不过在移动端也足够了，至少safari和chrome还是OK的，毕竟这俩在移动端才是王道。<br>Flex Box 由伸缩容器和伸缩项目组成。通过设置元素的 display 属性为 flex 或 inline-flex 可以得到一个伸缩容器。设置为 flex 的容器被渲染为一个块级元素，而设置为 inline-flex 的容器则渲染为一个行内元素。<br>伸缩容器中的每一个子元素都是一个伸缩项目。伸缩项目可以是任意数量的。伸缩容器外和伸缩项目内的一切元素都不受影响。简单地说，Flexbox 定义了伸缩容器内伸缩项目该如何布局。<br>醉饮山林，自是闲暇白云间。笑红尘，总是爱恨贪嗔痴。若问人间逍遥在，风生之谷，莲开其中。<br>详细参考:<a href=\"https://www.jianshu.com/p/e75f351e11f8\" target=\"_blank\" rel=\"noopener\">css3中的BFC,IFC,GFC和FFC </a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>未来的CSS太让人兴奋了：一方面，是全新的页面布局方式；另一方面，是酷炫的滤镜、颜色等视觉效果。这些CSS，受开发者追捧，被杂志和博客文章铺天盖地地介绍。<br>　　如果说这些特性是CSS华丽的一面，那我们来看看它朴实的一面：很不起眼的东西，如选择器、单位、函数（方法）。我经常说这是繁琐的东西，但我意思是它们能干漂亮的活，这就是我要分享的。<br>　　怎么说呢，让我们看看这些效果最好的朴实的CSS细节——这些细节远远没有那些酷炫的CSS效果那么引人注目。它们有些已经存在一段时间了，但值得我们更好地认识，而有些则刚刚面世。虽然不起眼，但是它们可以提高我们的工作效率——以谦虚的姿态。<br>相对单位<br>　　聪明又有前瞻头脑的开发者们已经使用相对单位了——如em或者百分比——所以，开发者们了解这个问题：往往因为元素的继承性而需要使用计算器作为辅助工具来计算大小。例如，现在普遍的做法是给页面的字体设置全局尺寸，然后用相对单位来定义页面中其它的元素。CSS大概会这样写：<br>html { font-size: 10px; } p { font-size: 1.4em; }</p>\n<p>　　这样写是没问题，直到有个子元素需要设置一个不同的字体大小，比如，在这样的标签当中：<br>The cat sat on the mat.</p>\n<p>　　如果你要设置span的字体大小为1.2em，你需要做什么？拿出计算器，算算1.2除以1.4是多少，结果如下：<br>p span { font-size: 0.85714em; }</p>\n<p>　　这个问题不局限于em。如果用百分比来创建响应式的流式布局网站，而百分比是与容器相关的，所以，如果要定义一个元素为它的容器的40%，它的高是75%，宽则需要设置为53.33333%。<br>　　很明显，这很不方便。<br>根相关的长度单位<br>　　为了修复字体大小定义的问题，现在可以使用单位rem（root em）。rem同样是相对单位，但是它所对应的是固定的基本值，这个固定的基本值也就是文档的根元素的字体大小（在HTML文件中，就是html元素）。假设和上个例子一样，同样设定10px的字体大小为根元素的大小，那么CSS这样写就OK了：<br>p { font-size: 1.4rem; } p span { font-size: 1.2rem; }</p>\n<p>　　这两个CSS规则都是相对于根元素的字体大小，这样的代码更加优雅和简便，特别是在设置简单的数值如10px或者12px的时候。这样和使用px值很相似，不同点在于rem是可扩展的。<br>　　在整篇文章介绍的特性中，rem特性相对来说是兼容性比较好，高级浏览器都能支持，包括IE9在内，除了Opera Mobile。<br>窗口相关的长度单位<br>　　觉得rem单位很酷吧，如果还有另外一组单位能解决百分比的问题，那就更酷了。它和rem的道理相似，不同点在于，它相对的不是文档的根元素，而是相对于设备窗口本身的大小。<br>　　这两个单位就是vh和vw，即是相对于窗口大小的高和宽。每个单位在前面加上数字，代表的是多少个百分比。<br>div { height: 50vh; }</p>\n<p>　　在上面的例子，高度被设定为窗口高度的一半。1vh相当于一个百分比的窗口高度，所以50vh即是50%的窗口高度。<br>　　如果窗口大小变了，那么这个值也随之改变。这相对百分比来说，好处是不需要担心父容器，不管它的父容器如何，10vw的元素会一直是10%的窗口大小。<br>　　相应地，有vmin单位，相当于vh或者vw的最小值，最近还宣布有vmax单位会被加到规范文档里面（虽然在这篇文章发布的时候还没有）。<br>　　现在支持这个特性的有IE9+、Chrome和Safari 6。<br>运算式的值<br>　　如果你在做响应式的流式布局网站，经常会遇到混合单位的问题——用百分比设置栅格，但是又用固定像素宽度设置margin。如：<br>div { margin: 0 20px; width: 33%;}</p>\n<p>　　如果布局只用到padding和border，你可以使用box-sizing来解决，但是对于margin就无能为力了。更好、更灵活的方法是使用calc()函数，设置不同单位之间的数学方程式，如：<br>div { margin: 0 20px; width: calc(33% - 40px);}</p>\n<p>　　它不仅可以用来计算宽，还可以用来计算长度——如果有必要，还可以在calc()里面再加calc()。<br>　　这个特性IE9+和Firefox都支持，Firefox需要加上 -moz- 前缀（在版本16或17可能不用加前缀），Chrome和Safari也支持，但需要加上 -webkit- 前缀。然而，移动Webkit还不支持。<br>加载字体库的部分字体<br>　　优越的性能往往很重要，尤其是市场上各种各样的移动设备——导致连接速度的差异和不确定性——更加体现了这个重要性。其中一个加快页面加载速度的方法，就是减少外部文件个数，@font-face的一个新属性unicode-range就是为此而生。<br>　　这个属性就是unicode-range（编码范围），代表的是编码字体的参数范围。在加载外部文件的时候，只有那些被使用的字体才会被加载，而不是整套字体库。下面的代码演示了如何从foo.ttf字体库中仅加载三个字体：<br>@font-face {font-family: foo;src: url(‘foo.ttf’);unicode-range: U+31-33;}</p>\n<p>　　这点对于使用字体图标的页面尤其有用。我测试过，使用unicode-range，加载字体文件的时间平均减少了0.85秒，也不是小数目了。当然，你可能不会这么想。<br>　　这个属性，目前可以在IE9+、Webkit浏览器（如Chrome和Safari）中运行。<br>新的伪类<br>　　单位和值都应该好好利用，但是，让我更兴奋的是选择器和伪类。完善的选择器模式，即使只有少数浏览器支持，都让我兴奋不已。引用乔布斯的话：你要把栅栏的里面修得和外面一样漂亮，即使别人看不到里面——因为你自己知道。<br>　　我第一次使用:nth-of-type()的时候，简直是一次突破，就像我冲出了思想的桎梏。好吧，我有些夸张了。但有些新的CSS伪类，确实值得狂热一番。<br>否定伪类<br>　　你大概不知道 :not() 伪类的好，除非你亲自实践一番。带有参数的 :not() 其实就是普通的选择器——不是复合选择器。一组元素加上选择器 :not()，表示满足这个参数的元素会被排除出去。听起来有些复杂吧？但是实际上非常简单。<br>　　假设：要对项目列表的奇数行进行选择，但是最后一行除外。如果是以前，需要这样写：<br>li { color: #00F; } li:nth-child(odd) { color: #F00; } li:last-child { color: #00F; }</p>\n<p>　　现在，通过设定:last-child作为否定伪类的参数，就可以把最后一个元素排除，这样少了一行代码，从而更加的简洁和易维护。<br>li { color: #00F; } li:nth-child(odd):not(:last-child) { color: #F00; }</p>\n<p>　　否定伪类看起来并没有什么惊人之处，你可以不用它，但是它还是挺实用的。我曾经把它用在基于Webkit的项目当中，优势还是挺明显的。说实话，它是我最喜欢的伪类之一。<br>　　是的，我有最喜欢的伪类。<br>　　在本文提到的特性当中，否定伪类是兼容性最好的，它被IE9+和高级浏览器支持（不需要加浏览器产商前缀）。如果你熟悉jQuery，你可能习惯用它——版本1.0开始就有了，以及相似的not()方法。<br>“适用于”伪类<br>　　:matches() 伪类可以用普通的选择器、复合选择器、逗号隔开的列表或任何的选择器组合作为参数。太棒了！但是，它能做什么？<br>　　:matches() 伪类最强大的地方就是聚合多行选择器。例如，要选择父容器里面其中几个不同子容器里面的p元素，在这之前，代码或许会写成这样：<br>.home header p,.home footer p,.home aside p {color: #F00;}</p>\n<p>　　有了:matches()伪类，就可以把共同点提取出来，缩减代码量。该例子里面，选择器的共同点是以home为起点、以p为终点，所以可以用:matches()把中间的所有元素集合起来。是不是有些困惑？看看代码就明白了：<br>.home :matches(header,footer,aside) p { color: #F00; }</p>\n<p>　　这其实是CSS4的一部分（确切地说，是CSS选择器第四等级），这份规范文档还提到将会有类似的语法（以逗号隔开的复合选择器）应用于:not()伪类。兴奋ing！<br>　　目前，:matches()可以在Chrome和Safari浏览器中运行，但是要加上前缀-webkit-，Firefox也支持，但是要按照旧的写法:any()，同时要加上-moz-前缀。<br>你爱上这些朴实的CSS细节了吗？<br>　　这篇文章讲到的特性，最赞的一点是它们解决了现实的问题，从琐碎而繁复的选择器到建立响应式网站的新挑战。实际上，我期待每一个特性被使用到最普通的项目当中。（web前端学习交流群：328058344 禁止闲聊，非喜勿进！）</p>\n<p>　　新特性如滤镜可能很直观很华丽，但是我更愿意发现隐藏在深处的实用小技巧。<br>　　在积极探索的过程中，每一个特性可以让你的职业生涯更顺利——想到这里，就不会觉得繁琐了ted below are all the plug</p>\n<h2 id=\"CSS相关\"><a href=\"#CSS相关\" class=\"headerlink\" title=\"CSS相关\"></a>CSS相关</h2><p>1、左边定宽，右边自适应方案：float + margin，float + calc</p>\n<p>/* 方案1 <em>/<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>    margin-left: 120px;<br>}<br>/</em> 方案2 */<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>    width: calc(100% - 120px);<br>    float: left;<br>}<br>2、左右两边定宽，中间自适应：float，float + calc, 圣杯布局（设置BFC，margin负值法），flex</p>\n<p>.wrap {<br>    width: 100%;<br>    height: 200px;<br>}<br>.wrap &gt; div {<br>    height: 100%;<br>}<br>/* 方案1 <em>/<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>    float: right;<br>    width: 120px;<br>}<br>.center {<br>    margin: 0 120px;<br>}<br>/</em> 方案2 <em>/<br>.left {<br>    width: 120px;<br>    float: left;<br>}<br>.right {<br>  float: right;<br>  width: 120px;<br>}<br>.center {<br>       width: calc(100% - 240px);<br>       margin-left: 120px;<br>}<br>/</em> 方案3 */<br>.wrap {<br>    display: flex;<br>}<br>.left {<br>    width: 120px;<br>}<br>.right {<br>    width: 120px;<br>}<br>.center {<br>    flex: 1;<br>}<br>3、左右居中</p>\n<p>行内元素: text-align: center<br>定宽块状元素: 左右 margin 值为 auto<br>不定宽块状元素: table布局，position + transform<br>/* 方案1 <em>/<br>.wrap {<br>    text-align: center<br>}<br>.center {<br>     display: inline;<br>         /</em> or <em>/<br>         /</em> display: inline-block; <em>/<br>}<br>/</em> 方案2 <em>/<br>.center {<br>    width: 100px;<br>    margin: 0 auto;<br>}<br>/</em> 方案2 */<br>.wrap {<br>    position: relative;<br>}<br>.center {<br>position: absulote;<br>    left: 50%;<br>    transform: translateX(-50%);<br>}<br>4、上下垂直居中：</p>\n<p>定高：margin，position + margin(负值)<br>    不定高：position + transform，flex，IFC + vertical-align:middle<br>    /* 定高方案1 <em>/<br>.center {<br>    height: 100px;<br>    margin: 50px 0;<br>    }<br>/</em> 定高方案2 <em>/<br>.center {<br>    height: 100px;<br>    position: absolute;<br>    top: 50%;<br>    margin-top: -25px;<br>}<br>/</em> 不定高方案1 <em>/<br>.center {<br>    position: absolute;<br>    top: 50%;<br>    transform: translateY(-50%);<br>}<br>/</em> 不定高方案2 <em>/<br>.wrap {<br>     display: flex;<br>     align-items: center;<br>}<br>.center {<br>width: 100%;<br>}<br>/</em> 不定高方案3 <em>/<br>/</em> 设置 inline-block 则会在外层产生 IFC，高度设为 100% 撑开 wrap 的高度 */<br>.wrap::before {<br>content: ‘’;<br>height: 100%;<br>display: inline-block;<br>         vertical-align: middle;<br>}<br>.wrap {<br>    text-align: center;<br>}<br>.center {<br>display: inline-block;<br>         vertical-align: middle;<br>}<br>5、盒模型：content（元素内容） + padding（内边距） + border（边框） + margin（外边距）</p>\n<p>延伸： box-sizing</p>\n<p>content-box：默认值，总宽度 = margin + border + padding + width<br>border-box：盒子宽度包含 padding 和 border，总宽度 = margin + width<br>inherit：从父元素继承 box-sizing 属性<br>6、BFC、IFC、GFC、FFC：FC（Formatting Contexts），格式化上下文</p>\n<p>BFC：块级格式化上下文，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此(按照这个理念来想，只要脱离文档流，肯定就能产生 BFC)。产生 BFC 方式如下<br>float 的值不为 none。<br>overflow 的值不为 visible。<br>position 的值不为 relative 和 static。<br>display 的值为 table-cell, table-caption, inline-block中的任何一个。<br>用处？常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。</p>\n<p>IFC：内联格式化上下文，IFC 的 line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的 padding/margin 影响)。<br>IFC中的line box一般左右都贴紧整个 IFC，但是会因为 float 元素而扰乱。float 元素会位于 IFC 与 line box 之间，使得 line box 宽度缩短。 同个 ifc 下的多个 line box 高度会不同。 IFC 中时不可能有块级元素的，当插入块级元素时（如 p 中插入 div ）会产生两个匿名块与 div 分隔开，即产生两个 IFC ，每个 IFC 对外表现为块级元素，与 div 垂直排列。</p>\n<p>用处？</p>\n<p>水平居中：当一个块要在环境中水平居中时，设置其为 inline-block 则会在外层产生IFC，通过 text-align 则可以使其水平居中。<br>垂直居中：创建一个 IFC，用其中一个元素撑开父元素的高度，然后设置其 vertical-align: middle，其他行内元素则可以在此父元素下垂直居中</p>\n<p>GFC：网格布局格式化上下文（display: grid）<br>FFC：自适应格式化上下文（display: flex）<br>CSS2.1中只有BFC和IFC, CSS3中才有GFC和FFC。<br>到底什么是BFC、IFC、GFC和FFC，次奥</p>\n<p>What’s FC？<br>一定不是KFC，FC的全称是：Formatting Contexts，是W3C CSS2.1规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。<br>BFC<br>BFC(Block Formatting Contexts)直译为”块级格式化上下文”。Block Formatting Contexts就是页面上的一个隔离的渲染区域，容器里面的子元素不会在布局上影响到外面的元素，反之也是如此。如何产生BFC？<br>float的值不为none。<br>overflow的值不为visible。<br>position的值不为relative和static。<br>display的值为table-cell, table-caption, inline-block中的任何一个。<br>那BFC一般有什么用呢？比如常见的多栏布局，结合块级别元素浮动，里面的元素则是在一个相对隔离的环境里运行。<br>IFC<br>IFC(Inline Formatting Contexts)直译为”内联格式化上下文”，IFC的line box（线框）高度由其包含行内元素中最高的实际高度计算而来（不受到竖直方向的padding/margin影响)<br>IFC中的line box一般左右都贴紧整个IFC，但是会因为float元素而扰乱。float元素会位于IFC与与line box之间，使得line box宽度缩短。 同个ifc下的多个line box高度会不同。 IFC中时不可能有块级元素的，当插入块级元素时（如p中插入div）会产生两个匿名块与div分隔开，即产生两个IFC，每个IFC对外表现为块级元素，与div垂直排列。<br>那么IFC一般有什么用呢？<br>水平居中：当一个块要在环境中水平居中时，设置其为inline-block则会在外层产生IFC，通过text-align则可以使其水平居中。<br>垂直居中：创建一个IFC，用其中一个元素撑开父元素的高度，然后设置其vertical-align:middle，其他行内元素则可以在此父元素下垂直居中。<br>GFC<br>GFC(GridLayout Formatting Contexts)直译为”网格布局格式化上下文”，当为一个元素设置display值为grid的时候，此元素将会获得一个独立的渲染区域，我们可以通过在网格容器（grid container）上定义网格定义行（grid definition rows）和网格定义列（grid definition columns）属性各在网格项目（grid item）上定义网格行（grid row）和网格列（grid columns）为每一个网格项目（grid item）定义位置和空间。<br>那么GFC有什么用呢，和table又有什么区别呢？首先同样是一个二维的表格，但GridLayout会有更加丰富的属性来控制行列，控制对齐以及更为精细的渲染语义和控制。<br>FFC<br>FFC(Flex Formatting Contexts)直译为”自适应格式化上下文”，display值为flex或者inline-flex的元素将会生成自适应容器（flex container），可惜这个牛逼的属性只有谷歌和火狐支持，不过在移动端也足够了，至少safari和chrome还是OK的，毕竟这俩在移动端才是王道。<br>Flex Box 由伸缩容器和伸缩项目组成。通过设置元素的 display 属性为 flex 或 inline-flex 可以得到一个伸缩容器。设置为 flex 的容器被渲染为一个块级元素，而设置为 inline-flex 的容器则渲染为一个行内元素。<br>伸缩容器中的每一个子元素都是一个伸缩项目。伸缩项目可以是任意数量的。伸缩容器外和伸缩项目内的一切元素都不受影响。简单地说，Flexbox 定义了伸缩容器内伸缩项目该如何布局。<br>醉饮山林，自是闲暇白云间。笑红尘，总是爱恨贪嗔痴。若问人间逍遥在，风生之谷，莲开其中。<br>详细参考:<a href=\"https://www.jianshu.com/p/e75f351e11f8\" target=\"_blank\" rel=\"noopener\">css3中的BFC,IFC,GFC和FFC </a></p>\n"},{"title":"楼市股市","date":"2017-02-12T03:40:19.000Z","_content":"\n## 在楼市几番拉住股市多次沉浮的常态下\n   16年下半年到17年楼市管制的背景下，底部的股市是否能在17年上半年可是起飞？\n## 17年已经开始，这一年如何进行？一年之计在于春\n","source":"_posts/20170212.md","raw":"---\ntitle: 楼市股市\ndate: 2017-02-12 11:40:19\ntags:\n---\n\n## 在楼市几番拉住股市多次沉浮的常态下\n   16年下半年到17年楼市管制的背景下，底部的股市是否能在17年上半年可是起飞？\n## 17年已经开始，这一年如何进行？一年之计在于春\n","slug":"20170212","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlt000k2oi8ohnji34x","content":"<h2 id=\"在楼市几番拉住股市多次沉浮的常态下\"><a href=\"#在楼市几番拉住股市多次沉浮的常态下\" class=\"headerlink\" title=\"在楼市几番拉住股市多次沉浮的常态下\"></a>在楼市几番拉住股市多次沉浮的常态下</h2><p>   16年下半年到17年楼市管制的背景下，底部的股市是否能在17年上半年可是起飞？</p>\n<h2 id=\"17年已经开始，这一年如何进行？一年之计在于春\"><a href=\"#17年已经开始，这一年如何进行？一年之计在于春\" class=\"headerlink\" title=\"17年已经开始，这一年如何进行？一年之计在于春\"></a>17年已经开始，这一年如何进行？一年之计在于春</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"在楼市几番拉住股市多次沉浮的常态下\"><a href=\"#在楼市几番拉住股市多次沉浮的常态下\" class=\"headerlink\" title=\"在楼市几番拉住股市多次沉浮的常态下\"></a>在楼市几番拉住股市多次沉浮的常态下</h2><p>   16年下半年到17年楼市管制的背景下，底部的股市是否能在17年上半年可是起飞？</p>\n<h2 id=\"17年已经开始，这一年如何进行？一年之计在于春\"><a href=\"#17年已经开始，这一年如何进行？一年之计在于春\" class=\"headerlink\" title=\"17年已经开始，这一年如何进行？一年之计在于春\"></a>17年已经开始，这一年如何进行？一年之计在于春</h2>"},{"title":"docker学习笔记","date":"2018-03-01T05:59:47.000Z","update":null,"_content":"\ndocker 官网地址：　https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository\n\n增加docker用户组\n\n1. Create the docker group.\n\n```\n$ sudo groupadd docker\n\n```\n\n2. Add your user to the docker group.\n\n```\n$ sudo usermod -aG docker $USER\n\n```\n","source":"_posts/docker-user-tips.md","raw":"---\ntitle: docker学习笔记\ndate: 2018-03-01 13:59:47\nupdate:\ntags:\n---\n\ndocker 官网地址：　https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository\n\n增加docker用户组\n\n1. Create the docker group.\n\n```\n$ sudo groupadd docker\n\n```\n\n2. Add your user to the docker group.\n\n```\n$ sudo usermod -aG docker $USER\n\n```\n","slug":"docker-user-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlt000l2oi8ez0a12ji","content":"<p>docker 官网地址：　<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository</a></p>\n<p>增加docker用户组</p>\n<ol>\n<li>Create the docker group.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo groupadd docker</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Add your user to the docker group.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>docker 官网地址：　<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository</a></p>\n<p>增加docker用户组</p>\n<ol>\n<li>Create the docker group.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo groupadd docker</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Add your user to the docker group.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>\n\n"},{"title":"git使用笔记","date":"2018-01-10T05:23:02.000Z","_content":"命令行查看版本变更常用命令\ngit log  ./ 当前目录变更版本列表\ngit show  <commit-hashId> 便可以显示某次提交的修改内容\n\n1. git log filename\n可以看到fileName相关的commit记录\n2. git log -p filename\n可以显示每次提交的diff\n3. 只看某次提交中的某个文件变化，可以直接加上fileName\ngit show commit-id filename\n4.根据commit-id查看某个提交\ngit show -s --pretty=raw  id(59047cce6eeb2d8fd9fa361e01dbb88d9a37cf4e)\n5.借助可视化工具 如 sourceTree 在最后一次修改的记录上 右键选中文件 查看历史修改\n6.git log 的常用选项\n注：filename （绝对路径） 或 （先进入此文件所在的目录下，当前文件名）\n\n","source":"_posts/git-tips.md","raw":"---\ntitle: git使用笔记\ndate: 2018-01-10 13:23:02\ntags:\n---\n命令行查看版本变更常用命令\ngit log  ./ 当前目录变更版本列表\ngit show  <commit-hashId> 便可以显示某次提交的修改内容\n\n1. git log filename\n可以看到fileName相关的commit记录\n2. git log -p filename\n可以显示每次提交的diff\n3. 只看某次提交中的某个文件变化，可以直接加上fileName\ngit show commit-id filename\n4.根据commit-id查看某个提交\ngit show -s --pretty=raw  id(59047cce6eeb2d8fd9fa361e01dbb88d9a37cf4e)\n5.借助可视化工具 如 sourceTree 在最后一次修改的记录上 右键选中文件 查看历史修改\n6.git log 的常用选项\n注：filename （绝对路径） 或 （先进入此文件所在的目录下，当前文件名）\n\n","slug":"git-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlu000m2oi8yjgwamqe","content":"<p>命令行查看版本变更常用命令<br>git log  ./ 当前目录变更版本列表<br>git show  <commit-hashid> 便可以显示某次提交的修改内容</commit-hashid></p>\n<ol>\n<li>git log filename<br>可以看到fileName相关的commit记录</li>\n<li>git log -p filename<br>可以显示每次提交的diff</li>\n<li>只看某次提交中的某个文件变化，可以直接加上fileName<br>git show commit-id filename</li>\n<li>根据commit-id查看某个提交<br>git show -s –pretty=raw  id(59047cce6eeb2d8fd9fa361e01dbb88d9a37cf4e)</li>\n<li>借助可视化工具 如 sourceTree 在最后一次修改的记录上 右键选中文件 查看历史修改</li>\n<li>git log 的常用选项<br>注：filename （绝对路径） 或 （先进入此文件所在的目录下，当前文件名）</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>命令行查看版本变更常用命令<br>git log  ./ 当前目录变更版本列表<br>git show  <commit-hashid> 便可以显示某次提交的修改内容</commit-hashid></p>\n<ol>\n<li>git log filename<br>可以看到fileName相关的commit记录</li>\n<li>git log -p filename<br>可以显示每次提交的diff</li>\n<li>只看某次提交中的某个文件变化，可以直接加上fileName<br>git show commit-id filename</li>\n<li>根据commit-id查看某个提交<br>git show -s –pretty=raw  id(59047cce6eeb2d8fd9fa361e01dbb88d9a37cf4e)</li>\n<li>借助可视化工具 如 sourceTree 在最后一次修改的记录上 右键选中文件 查看历史修改</li>\n<li>git log 的常用选项<br>注：filename （绝对路径） 或 （先进入此文件所在的目录下，当前文件名）</li>\n</ol>\n"},{"title":"前端流行框架和缓存运用","date":"2018-01-15T10:06:00.000Z","_content":"\n## 框架相关\n\n1、数据双向绑定原理：常见数据绑定的方案\n\nObject.defineProperty（vue）：劫持数据的 getter 和 setter\n脏值检测（angularjs）：通过特定事件进行轮循\n发布/订阅模式：通过消息发布并将消息进行订阅\n详细细节参考 实现一个属于我们自己的简易MVVM库\n\n扩充：如何监听数组变化\n\n2、VDOM：三个 part，\n\n虚拟节点类，将真实 DOM 节点用 js 对象的形式进行展示，并提供 render 方法，将虚拟节点渲染成真实 DOM\n节点 diff 比较：对虚拟节点进行 js 层面的计算，并将不同的操作都记录到 patch 对象\nre-render：解析 patch 对象，进行 re-render\n详细请参考 实现Virtual Dom && Diff\n\n补充1：VDOM 的必要性？\n创建真实DOM的代价高：真实的 DOM 节点 node 实现的属性很多，而 vnode 仅仅实现一些必要的属性，相比起来，创建一个 vnode 的成本比较低。\n触发多次浏览器重绘及回流：使用 vnode ，相当于加了一个缓冲，让一次数据变动所带来的所有 node 变化，先在 vnode 中进行修改，然后 diff 之后对所有产生差异的节点集中一次对 DOM tree 进行修改，以减少浏览器的重绘及回流。\n补充2：vue 为什么采用 vdom？\n引入 Virtual DOM 在性能方面的考量仅仅是一方面。\n\n性能受场景的影响是非常大的，不同的场景可能造成不同实现方案之间成倍的性能差距，所以依赖细粒度绑定及 Virtual DOM 哪个的性能更好还真不是一个容易下定论的问题。\n\nVue 之所以引入了 Virtual DOM，更重要的原因是为了解耦 HTML 依赖，这带来两个非常重要的好处是：\n\n不再依赖 HTML 解析器进行模版解析，可以进行更多的 AOT 工作提高运行时效率：通过模版 AOT 编译，Vue 的运行时体积可以进一步压缩，运行时效率可以进一步提升；\n可以渲染到 DOM 以外的平台，实现 SSR、同构渲染这些高级特性，Weex 等框架应用的就是这一特性。\n综上，Virtual DOM 在性能上的收益并不是最主要的，更重要的是它使得 Vue 具备了现代框架应有的高级特性。\n\n3、vue 和 react 区别\n\n相同点：都支持 ssr，都有 vdom，组件化开发，实现 webComponents 规范，数据驱动等\n不同点：vue 是双向数据流（当然为了实现单数据流方便管理组件状态，vuex 便出现了），react 是单向数据流。vue 的 vdom 是追踪每个组件的依赖关系，不会渲染整个组件树，react 每当应该状态被改变时，全部子组件都会 re-render。\n上面提到的每个点，具体细节还得看自己的理解\n\n4、为什么用 vue ：简洁、轻快、舒服、没了\n\n网络基础类\n\n1、跨域：很多种方法，但万变不离其宗，都是为了搞定同源策略。重用的有 jsonp、iframe、cors、img、HTML5 postMessage等等。其中用到 html 标签进行跨域的原理就是 html 不受同源策略影响。但只是接受 Get 的请求方式，这个得清楚。\n\n详细传送门\n\n延伸1：img iframe script 来发送跨域请求有什么优缺点？\niframe\n优点：跨域完毕之后DOM操作和互相之间的JavaScript调用都是没有问题的\n缺点：1.若结果要以URL参数传递，这就意味着在结果数据量很大的时候需要分割传递，巨烦。2.还有一个是iframe本身带来的，母页面和iframe本身的交互本身就有安全性限制。\nscript\n优点：可以直接返回json格式的数据，方便处理\n缺点：只接受GET请求方式\n图片ping\n优点：可以访问任何url，一般用来进行点击追踪，做页面分析常用的方法\n缺点：不能访问响应文本，只能监听是否响应\n延伸2：配合 webpack 进行反向代理？\nwebpack 在 devServer 选项里面提供了一个 proxy 的参数供开发人员进行反向代理\n\n'/api': {\ntarget: 'http://www.example.com', // your target host\n            changeOrigin: true, // needed for virtual hosted sites\n            pathRewrite: {\n                '^/api': ''  // rewrite path\n            }\n},\n    然后再配合 http-proxy-middleware 插件对 api 请求地址进行代理\n\n    const express = require('express');\n    const proxy = require('http-proxy-middleware');\n    // proxy api requests\n    const exampleProxy = proxy(options); // 这里的 options 就是 webpack 里面的 proxy 选项对应的每个选项\n\n    // mount `exampleProxy` in web server\n    const app = express();\n    app.use('/api', exampleProxy);\n    app.listen(3000);\n    然后再用 nginx 把允许跨域的源地址添加到报头里面即可\n\n    说到 nginx ，可以再谈谈 CORS 配置，大致如下\n\n    location / {\n        if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin' '*';  \n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS'; \n            add_header 'Access-Control-Allow-Credentials' 'true';\n            add_header 'Access-Control-Allow-Headers' 'DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type';  \n            add_header 'Access-Control-Max-Age' 86400;  \n            add_header 'Content-Type' 'text/plain charset=UTF-8';  \n            add_header 'Content-Length' 0;  \n            return 200;  \n        }\n    }\n2、http 无状态无连接\n\nhttp 协议对于事务处理没有记忆能力\n对同一个url请求没有上下文关系\n每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况\n服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器\n人生若只如初见，请求过的资源下一次会继续进行请求\nhttp协议无状态中的 状态 到底指的是什么？！\n\n【状态】的含义就是：客户端和服务器在某次会话中产生的数据\n\n那么对应的【无状态】就意味着：这些数据不会被保留\n\nbut\n\n通过增加cookie和session机制，现在的网络请求其实是有状态的\n在没有状态的http协议下，服务器也一定会保留你每次网络请求对数据的修改，但这跟保留每次访问的数据是不一样的，保留的只是会话产生的结果，而没有保留会话\n详细参考 HTTP是一个无状态的协议。这句话里的无状态是什么意思？\n\n3、http-cache：就是 http 缓存咯\n\n首先得明确 http 缓存的好处\n\n减少了冗余的数据传输，减少网费\n减少服务器端的压力\nWeb 缓存能够减少延迟与网络阻塞，进而减少显示某个资源所用的时间\n加快客户端加载网页的速度\n常见 http 缓存的类型\n\n私有缓存（一般为本地浏览器缓存）\n代理缓存\n然后谈谈本地缓存\n\n本地缓存是指浏览器请求资源时命中了浏览器本地的缓存资源，浏览器并不会发送真正的请求给服务器了。它的执行过程是：\n\n第一次浏览器发送请求给服务器时，此时浏览器还没有本地缓存副本，服务器返回资源给浏览器，响应码是200 OK，浏览器收到资源后，把资源和对应的响应头一起缓存下来。\n第二次浏览器准备发送请求给服务器时候，浏览器会先检查上一次服务端返回的响应头信息中的Cache-Control，它的值是一个相对值，单位为秒，表示资源在客户端缓存的最大有效期，过期时间为第一次请求的时间减去Cache-Control的值，过期时间跟当前的请求时间比较，如果本地缓存资源没过期，那么命中缓存，不再请求服务器。\n如果没有命中，浏览器就会把请求发送给服务器，进入缓存协商阶段。\n与本地缓存相关的头有：Cache-Control、Expires，Cache-Control有多个可选值代表不同的意义，而Expires就是一个日期格式的绝对值。\n\nCache-Control\n\nCache-Control是HTPP缓存策略中最重要的头，它是HTTP/1.1中出现的，它由如下几个值\n\nno-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在ETag，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。\nno-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。\npublic：可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器。\nprivate：只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。\nmax-age：从当前请求开始，允许获取的响应被重用的最长时间（秒）。\n例如：\n\nCache-Control: public, max-age=1000 \n# 表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\nExpires\n\nExpires是HTTP/1.0出现的头信息，同样是用于决定本地缓存策略的头，它是一个绝对时间，时间格式是如Mon, 10 Jun 2015 21:31:12 GMT，只要发送请求时间是在Expires之前，那么本地缓存始终有效，否则就会去服务器发送请求获取新的资源。如果同时出现Cache-Control：max-age和Expires，那么max-age优先级更高。他们可以这样组合使用\n\nCache-Control: public\nExpires: Wed, Jan 10 2018 00:27:04 GMT\n所谓的缓存协商\n\n当第一次请求时服务器返回的响应头中存在以下情况时\n\n没有 Cache-Control 和 Expires\nCache-Control 和 Expires 过期了\nCache-Control 的属性设置为 no-cache 时\n那么浏览器第二次请求时就会与服务器进行协商，询问浏览器中的缓存资源是不是旧版本，需不需要更新，此时，服务器就会做出判断，如果缓存和服务端资源的最新版本是一致的，那么就无需再次下载该资源，服务端直接返回304 Not Modified 状态码，如果服务器发现浏览器中的缓存已经是旧版本了，那么服务器就会把最新资源的完整内容返回给浏览器，状态码就是200 Ok，那么服务端是根据什么来判断浏览器的缓存是不是最新的呢？其实是根据HTTP的另外两组头信息，分别是：Last-Modified/If-Modified-Since 与 ETag/If-None-Match。\n\n\nLast-Modified 与 If-Modified-Since\n\n浏览器第一次请求资源时，服务器会把资源的最新修改时间Last-Modified:Thu, 29 Dec 2011 18:23:55 GMT放在响应头中返回给浏览器\n第二次请求时，浏览器就会把上一次服务器返回的修改时间放在请求头If-Modified-Since:Thu, 29 Dec 2011 18:23:55发送给服务器，服务器就会拿这个时间跟服务器上的资源的最新修改时间进行对比\n如果两者相等或者大于服务器上的最新修改时间，那么表示浏览器的缓存是有效的，此时缓存会命中，服务器就不再返回内容给浏览器了，同时Last-Modified头也不会返回，因为资源没被修改，返回了也没什么意义。如果没命中缓存则最新修改的资源连同Last-Modified头一起返回。\n\n第一次请求返回的响应头：\n\nCache-Control:max-age=3600\nExpires: Fri, Jan 12 2018 00:27:04 GMT\nLast-Modified: Wed, Jan 10 2018 00:27:04 GMT\n第二次请求的请求头信息：\n\nIf-Modified-Since: Wed, Jan 10 2018 00:27:04 GMT\n这组头信息是基于资源的修改时间来判断资源有没有更新，另一种方式就是根据资源的内容来判断，就是接下来要讨论的 ETag 与 If-None-Match\n\n\nETag与If-None-Match\n\nETag/If-None-Match与Last-Modified/If-Modified-Since的流程其实是类似的，唯一的区别是它基于资源的内容的摘要信息（比如MD5 hash）来判断\n\n浏览器发送第二次请求时，会把第一次的响应头信息ETag的值放在If-None-Match的请求头中发送到服务器，与最新的资源的摘要信息对比，如果相等，取浏览器缓存，否则内容有更新，最新的资源连同最新的摘要信息返回。用ETag的好处是如果因为某种原因到时资源的修改时间没改变，那么用ETag就能区分资源是不是有被更新。\n\n第一次请求返回的响应头：\n\nCache-Control: public, max-age=31536000\nETag: \"15f0fff99ed5aae4edffdd6496d7131f\"\n第二次请求的请求头信息：\n\nIf-None-Match: \"15f0fff99ed5aae4edffdd6496d7131f\"\n4、cookie 和 session\n\nsession： 是一个抽象概念，开发者为了实现中断和继续等操作，将 user agent 和 server 之间一对一的交互，抽象为“会话”，进而衍生出“会话状态”，也就是 session 的概念\ncookie：它是一个世纪存在的东西，http 协议中定义在 header 中的字段，可以认为是 session 的一种后端无状态实现\n现在我们常说的 “session”，是为了绕开 cookie 的各种限制，通常借助 cookie 本身和后端存储实现的，一种更高级的会话状态实现\n\nsession 的常见实现要借助cookie来发送 sessionID\n\n5、安全问题，如 XSS 和 CSRF\n\nXSS：跨站脚本攻击，是一种网站应用程序的安全漏洞攻击，是代码注入的一种。常见方式是将恶意代码注入合法代码里隐藏起来，再诱发恶意代码，从而进行各种各样的非法活动。\n防范：记住一点 “所有用户输入都是不可信的”，所以得做输入过滤和转义\n\n详细点击 [对于跨站脚本攻击（XSS攻击）的理解和总结](http://www.imooc.com/article/13553)\n\nCSRF：跨站请求伪造，也称 XSRF，是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。与 XSS 相比，XSS利用的是用户对指定网站的信任，CSRF利用的是网站对用户网页浏览器的信任。\n防范：用户操作验证（验证码），额外验证机制（token使用）等\n\n详细点击 [对于跨站伪造请求（CSRF）的理解和总结](http://www.imooc.com/article/13552)\n","source":"_posts/hello-world.md","raw":"---\ntitle: 前端流行框架和缓存运用\ndate: 2018-01-15 18:06:00\ntags:\n---\n\n## 框架相关\n\n1、数据双向绑定原理：常见数据绑定的方案\n\nObject.defineProperty（vue）：劫持数据的 getter 和 setter\n脏值检测（angularjs）：通过特定事件进行轮循\n发布/订阅模式：通过消息发布并将消息进行订阅\n详细细节参考 实现一个属于我们自己的简易MVVM库\n\n扩充：如何监听数组变化\n\n2、VDOM：三个 part，\n\n虚拟节点类，将真实 DOM 节点用 js 对象的形式进行展示，并提供 render 方法，将虚拟节点渲染成真实 DOM\n节点 diff 比较：对虚拟节点进行 js 层面的计算，并将不同的操作都记录到 patch 对象\nre-render：解析 patch 对象，进行 re-render\n详细请参考 实现Virtual Dom && Diff\n\n补充1：VDOM 的必要性？\n创建真实DOM的代价高：真实的 DOM 节点 node 实现的属性很多，而 vnode 仅仅实现一些必要的属性，相比起来，创建一个 vnode 的成本比较低。\n触发多次浏览器重绘及回流：使用 vnode ，相当于加了一个缓冲，让一次数据变动所带来的所有 node 变化，先在 vnode 中进行修改，然后 diff 之后对所有产生差异的节点集中一次对 DOM tree 进行修改，以减少浏览器的重绘及回流。\n补充2：vue 为什么采用 vdom？\n引入 Virtual DOM 在性能方面的考量仅仅是一方面。\n\n性能受场景的影响是非常大的，不同的场景可能造成不同实现方案之间成倍的性能差距，所以依赖细粒度绑定及 Virtual DOM 哪个的性能更好还真不是一个容易下定论的问题。\n\nVue 之所以引入了 Virtual DOM，更重要的原因是为了解耦 HTML 依赖，这带来两个非常重要的好处是：\n\n不再依赖 HTML 解析器进行模版解析，可以进行更多的 AOT 工作提高运行时效率：通过模版 AOT 编译，Vue 的运行时体积可以进一步压缩，运行时效率可以进一步提升；\n可以渲染到 DOM 以外的平台，实现 SSR、同构渲染这些高级特性，Weex 等框架应用的就是这一特性。\n综上，Virtual DOM 在性能上的收益并不是最主要的，更重要的是它使得 Vue 具备了现代框架应有的高级特性。\n\n3、vue 和 react 区别\n\n相同点：都支持 ssr，都有 vdom，组件化开发，实现 webComponents 规范，数据驱动等\n不同点：vue 是双向数据流（当然为了实现单数据流方便管理组件状态，vuex 便出现了），react 是单向数据流。vue 的 vdom 是追踪每个组件的依赖关系，不会渲染整个组件树，react 每当应该状态被改变时，全部子组件都会 re-render。\n上面提到的每个点，具体细节还得看自己的理解\n\n4、为什么用 vue ：简洁、轻快、舒服、没了\n\n网络基础类\n\n1、跨域：很多种方法，但万变不离其宗，都是为了搞定同源策略。重用的有 jsonp、iframe、cors、img、HTML5 postMessage等等。其中用到 html 标签进行跨域的原理就是 html 不受同源策略影响。但只是接受 Get 的请求方式，这个得清楚。\n\n详细传送门\n\n延伸1：img iframe script 来发送跨域请求有什么优缺点？\niframe\n优点：跨域完毕之后DOM操作和互相之间的JavaScript调用都是没有问题的\n缺点：1.若结果要以URL参数传递，这就意味着在结果数据量很大的时候需要分割传递，巨烦。2.还有一个是iframe本身带来的，母页面和iframe本身的交互本身就有安全性限制。\nscript\n优点：可以直接返回json格式的数据，方便处理\n缺点：只接受GET请求方式\n图片ping\n优点：可以访问任何url，一般用来进行点击追踪，做页面分析常用的方法\n缺点：不能访问响应文本，只能监听是否响应\n延伸2：配合 webpack 进行反向代理？\nwebpack 在 devServer 选项里面提供了一个 proxy 的参数供开发人员进行反向代理\n\n'/api': {\ntarget: 'http://www.example.com', // your target host\n            changeOrigin: true, // needed for virtual hosted sites\n            pathRewrite: {\n                '^/api': ''  // rewrite path\n            }\n},\n    然后再配合 http-proxy-middleware 插件对 api 请求地址进行代理\n\n    const express = require('express');\n    const proxy = require('http-proxy-middleware');\n    // proxy api requests\n    const exampleProxy = proxy(options); // 这里的 options 就是 webpack 里面的 proxy 选项对应的每个选项\n\n    // mount `exampleProxy` in web server\n    const app = express();\n    app.use('/api', exampleProxy);\n    app.listen(3000);\n    然后再用 nginx 把允许跨域的源地址添加到报头里面即可\n\n    说到 nginx ，可以再谈谈 CORS 配置，大致如下\n\n    location / {\n        if ($request_method = 'OPTIONS') {\n            add_header 'Access-Control-Allow-Origin' '*';  \n            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS'; \n            add_header 'Access-Control-Allow-Credentials' 'true';\n            add_header 'Access-Control-Allow-Headers' 'DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type';  \n            add_header 'Access-Control-Max-Age' 86400;  \n            add_header 'Content-Type' 'text/plain charset=UTF-8';  \n            add_header 'Content-Length' 0;  \n            return 200;  \n        }\n    }\n2、http 无状态无连接\n\nhttp 协议对于事务处理没有记忆能力\n对同一个url请求没有上下文关系\n每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况\n服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器\n人生若只如初见，请求过的资源下一次会继续进行请求\nhttp协议无状态中的 状态 到底指的是什么？！\n\n【状态】的含义就是：客户端和服务器在某次会话中产生的数据\n\n那么对应的【无状态】就意味着：这些数据不会被保留\n\nbut\n\n通过增加cookie和session机制，现在的网络请求其实是有状态的\n在没有状态的http协议下，服务器也一定会保留你每次网络请求对数据的修改，但这跟保留每次访问的数据是不一样的，保留的只是会话产生的结果，而没有保留会话\n详细参考 HTTP是一个无状态的协议。这句话里的无状态是什么意思？\n\n3、http-cache：就是 http 缓存咯\n\n首先得明确 http 缓存的好处\n\n减少了冗余的数据传输，减少网费\n减少服务器端的压力\nWeb 缓存能够减少延迟与网络阻塞，进而减少显示某个资源所用的时间\n加快客户端加载网页的速度\n常见 http 缓存的类型\n\n私有缓存（一般为本地浏览器缓存）\n代理缓存\n然后谈谈本地缓存\n\n本地缓存是指浏览器请求资源时命中了浏览器本地的缓存资源，浏览器并不会发送真正的请求给服务器了。它的执行过程是：\n\n第一次浏览器发送请求给服务器时，此时浏览器还没有本地缓存副本，服务器返回资源给浏览器，响应码是200 OK，浏览器收到资源后，把资源和对应的响应头一起缓存下来。\n第二次浏览器准备发送请求给服务器时候，浏览器会先检查上一次服务端返回的响应头信息中的Cache-Control，它的值是一个相对值，单位为秒，表示资源在客户端缓存的最大有效期，过期时间为第一次请求的时间减去Cache-Control的值，过期时间跟当前的请求时间比较，如果本地缓存资源没过期，那么命中缓存，不再请求服务器。\n如果没有命中，浏览器就会把请求发送给服务器，进入缓存协商阶段。\n与本地缓存相关的头有：Cache-Control、Expires，Cache-Control有多个可选值代表不同的意义，而Expires就是一个日期格式的绝对值。\n\nCache-Control\n\nCache-Control是HTPP缓存策略中最重要的头，它是HTTP/1.1中出现的，它由如下几个值\n\nno-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在ETag，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。\nno-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。\npublic：可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器。\nprivate：只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。\nmax-age：从当前请求开始，允许获取的响应被重用的最长时间（秒）。\n例如：\n\nCache-Control: public, max-age=1000 \n# 表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\nExpires\n\nExpires是HTTP/1.0出现的头信息，同样是用于决定本地缓存策略的头，它是一个绝对时间，时间格式是如Mon, 10 Jun 2015 21:31:12 GMT，只要发送请求时间是在Expires之前，那么本地缓存始终有效，否则就会去服务器发送请求获取新的资源。如果同时出现Cache-Control：max-age和Expires，那么max-age优先级更高。他们可以这样组合使用\n\nCache-Control: public\nExpires: Wed, Jan 10 2018 00:27:04 GMT\n所谓的缓存协商\n\n当第一次请求时服务器返回的响应头中存在以下情况时\n\n没有 Cache-Control 和 Expires\nCache-Control 和 Expires 过期了\nCache-Control 的属性设置为 no-cache 时\n那么浏览器第二次请求时就会与服务器进行协商，询问浏览器中的缓存资源是不是旧版本，需不需要更新，此时，服务器就会做出判断，如果缓存和服务端资源的最新版本是一致的，那么就无需再次下载该资源，服务端直接返回304 Not Modified 状态码，如果服务器发现浏览器中的缓存已经是旧版本了，那么服务器就会把最新资源的完整内容返回给浏览器，状态码就是200 Ok，那么服务端是根据什么来判断浏览器的缓存是不是最新的呢？其实是根据HTTP的另外两组头信息，分别是：Last-Modified/If-Modified-Since 与 ETag/If-None-Match。\n\n\nLast-Modified 与 If-Modified-Since\n\n浏览器第一次请求资源时，服务器会把资源的最新修改时间Last-Modified:Thu, 29 Dec 2011 18:23:55 GMT放在响应头中返回给浏览器\n第二次请求时，浏览器就会把上一次服务器返回的修改时间放在请求头If-Modified-Since:Thu, 29 Dec 2011 18:23:55发送给服务器，服务器就会拿这个时间跟服务器上的资源的最新修改时间进行对比\n如果两者相等或者大于服务器上的最新修改时间，那么表示浏览器的缓存是有效的，此时缓存会命中，服务器就不再返回内容给浏览器了，同时Last-Modified头也不会返回，因为资源没被修改，返回了也没什么意义。如果没命中缓存则最新修改的资源连同Last-Modified头一起返回。\n\n第一次请求返回的响应头：\n\nCache-Control:max-age=3600\nExpires: Fri, Jan 12 2018 00:27:04 GMT\nLast-Modified: Wed, Jan 10 2018 00:27:04 GMT\n第二次请求的请求头信息：\n\nIf-Modified-Since: Wed, Jan 10 2018 00:27:04 GMT\n这组头信息是基于资源的修改时间来判断资源有没有更新，另一种方式就是根据资源的内容来判断，就是接下来要讨论的 ETag 与 If-None-Match\n\n\nETag与If-None-Match\n\nETag/If-None-Match与Last-Modified/If-Modified-Since的流程其实是类似的，唯一的区别是它基于资源的内容的摘要信息（比如MD5 hash）来判断\n\n浏览器发送第二次请求时，会把第一次的响应头信息ETag的值放在If-None-Match的请求头中发送到服务器，与最新的资源的摘要信息对比，如果相等，取浏览器缓存，否则内容有更新，最新的资源连同最新的摘要信息返回。用ETag的好处是如果因为某种原因到时资源的修改时间没改变，那么用ETag就能区分资源是不是有被更新。\n\n第一次请求返回的响应头：\n\nCache-Control: public, max-age=31536000\nETag: \"15f0fff99ed5aae4edffdd6496d7131f\"\n第二次请求的请求头信息：\n\nIf-None-Match: \"15f0fff99ed5aae4edffdd6496d7131f\"\n4、cookie 和 session\n\nsession： 是一个抽象概念，开发者为了实现中断和继续等操作，将 user agent 和 server 之间一对一的交互，抽象为“会话”，进而衍生出“会话状态”，也就是 session 的概念\ncookie：它是一个世纪存在的东西，http 协议中定义在 header 中的字段，可以认为是 session 的一种后端无状态实现\n现在我们常说的 “session”，是为了绕开 cookie 的各种限制，通常借助 cookie 本身和后端存储实现的，一种更高级的会话状态实现\n\nsession 的常见实现要借助cookie来发送 sessionID\n\n5、安全问题，如 XSS 和 CSRF\n\nXSS：跨站脚本攻击，是一种网站应用程序的安全漏洞攻击，是代码注入的一种。常见方式是将恶意代码注入合法代码里隐藏起来，再诱发恶意代码，从而进行各种各样的非法活动。\n防范：记住一点 “所有用户输入都是不可信的”，所以得做输入过滤和转义\n\n详细点击 [对于跨站脚本攻击（XSS攻击）的理解和总结](http://www.imooc.com/article/13553)\n\nCSRF：跨站请求伪造，也称 XSRF，是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。与 XSS 相比，XSS利用的是用户对指定网站的信任，CSRF利用的是网站对用户网页浏览器的信任。\n防范：用户操作验证（验证码），额外验证机制（token使用）等\n\n详细点击 [对于跨站伪造请求（CSRF）的理解和总结](http://www.imooc.com/article/13552)\n","slug":"hello-world","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlv000n2oi8sjey9zk7","content":"<h2 id=\"框架相关\"><a href=\"#框架相关\" class=\"headerlink\" title=\"框架相关\"></a>框架相关</h2><p>1、数据双向绑定原理：常见数据绑定的方案</p>\n<p>Object.defineProperty（vue）：劫持数据的 getter 和 setter<br>脏值检测（angularjs）：通过特定事件进行轮循<br>发布/订阅模式：通过消息发布并将消息进行订阅<br>详细细节参考 实现一个属于我们自己的简易MVVM库</p>\n<p>扩充：如何监听数组变化</p>\n<p>2、VDOM：三个 part，</p>\n<p>虚拟节点类，将真实 DOM 节点用 js 对象的形式进行展示，并提供 render 方法，将虚拟节点渲染成真实 DOM<br>节点 diff 比较：对虚拟节点进行 js 层面的计算，并将不同的操作都记录到 patch 对象<br>re-render：解析 patch 对象，进行 re-render<br>详细请参考 实现Virtual Dom &amp;&amp; Diff</p>\n<p>补充1：VDOM 的必要性？<br>创建真实DOM的代价高：真实的 DOM 节点 node 实现的属性很多，而 vnode 仅仅实现一些必要的属性，相比起来，创建一个 vnode 的成本比较低。<br>触发多次浏览器重绘及回流：使用 vnode ，相当于加了一个缓冲，让一次数据变动所带来的所有 node 变化，先在 vnode 中进行修改，然后 diff 之后对所有产生差异的节点集中一次对 DOM tree 进行修改，以减少浏览器的重绘及回流。<br>补充2：vue 为什么采用 vdom？<br>引入 Virtual DOM 在性能方面的考量仅仅是一方面。</p>\n<p>性能受场景的影响是非常大的，不同的场景可能造成不同实现方案之间成倍的性能差距，所以依赖细粒度绑定及 Virtual DOM 哪个的性能更好还真不是一个容易下定论的问题。</p>\n<p>Vue 之所以引入了 Virtual DOM，更重要的原因是为了解耦 HTML 依赖，这带来两个非常重要的好处是：</p>\n<p>不再依赖 HTML 解析器进行模版解析，可以进行更多的 AOT 工作提高运行时效率：通过模版 AOT 编译，Vue 的运行时体积可以进一步压缩，运行时效率可以进一步提升；<br>可以渲染到 DOM 以外的平台，实现 SSR、同构渲染这些高级特性，Weex 等框架应用的就是这一特性。<br>综上，Virtual DOM 在性能上的收益并不是最主要的，更重要的是它使得 Vue 具备了现代框架应有的高级特性。</p>\n<p>3、vue 和 react 区别</p>\n<p>相同点：都支持 ssr，都有 vdom，组件化开发，实现 webComponents 规范，数据驱动等<br>不同点：vue 是双向数据流（当然为了实现单数据流方便管理组件状态，vuex 便出现了），react 是单向数据流。vue 的 vdom 是追踪每个组件的依赖关系，不会渲染整个组件树，react 每当应该状态被改变时，全部子组件都会 re-render。<br>上面提到的每个点，具体细节还得看自己的理解</p>\n<p>4、为什么用 vue ：简洁、轻快、舒服、没了</p>\n<p>网络基础类</p>\n<p>1、跨域：很多种方法，但万变不离其宗，都是为了搞定同源策略。重用的有 jsonp、iframe、cors、img、HTML5 postMessage等等。其中用到 html 标签进行跨域的原理就是 html 不受同源策略影响。但只是接受 Get 的请求方式，这个得清楚。</p>\n<p>详细传送门</p>\n<p>延伸1：img iframe script 来发送跨域请求有什么优缺点？<br>iframe<br>优点：跨域完毕之后DOM操作和互相之间的JavaScript调用都是没有问题的<br>缺点：1.若结果要以URL参数传递，这就意味着在结果数据量很大的时候需要分割传递，巨烦。2.还有一个是iframe本身带来的，母页面和iframe本身的交互本身就有安全性限制。<br>script<br>优点：可以直接返回json格式的数据，方便处理<br>缺点：只接受GET请求方式<br>图片ping<br>优点：可以访问任何url，一般用来进行点击追踪，做页面分析常用的方法<br>缺点：不能访问响应文本，只能监听是否响应<br>延伸2：配合 webpack 进行反向代理？<br>webpack 在 devServer 选项里面提供了一个 proxy 的参数供开发人员进行反向代理</p>\n<p>‘/api’: {<br>target: ‘<a href=\"http://www.example.com&#39;\" target=\"_blank\" rel=\"noopener\">http://www.example.com&#39;</a>, // your target host<br>            changeOrigin: true, // needed for virtual hosted sites<br>            pathRewrite: {<br>                ‘^/api’: ‘’  // rewrite path<br>            }<br>},<br>    然后再配合 http-proxy-middleware 插件对 api 请求地址进行代理</p>\n<pre><code>const express = require(&apos;express&apos;);\nconst proxy = require(&apos;http-proxy-middleware&apos;);\n// proxy api requests\nconst exampleProxy = proxy(options); // 这里的 options 就是 webpack 里面的 proxy 选项对应的每个选项\n\n// mount `exampleProxy` in web server\nconst app = express();\napp.use(&apos;/api&apos;, exampleProxy);\napp.listen(3000);\n然后再用 nginx 把允许跨域的源地址添加到报头里面即可\n\n说到 nginx ，可以再谈谈 CORS 配置，大致如下\n\nlocation / {\n    if ($request_method = &apos;OPTIONS&apos;) {\n        add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;  \n        add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET, POST, OPTIONS&apos;; \n        add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;;\n        add_header &apos;Access-Control-Allow-Headers&apos; &apos;DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type&apos;;  \n        add_header &apos;Access-Control-Max-Age&apos; 86400;  \n        add_header &apos;Content-Type&apos; &apos;text/plain charset=UTF-8&apos;;  \n        add_header &apos;Content-Length&apos; 0;  \n        return 200;  \n    }\n}</code></pre><p>2、http 无状态无连接</p>\n<p>http 协议对于事务处理没有记忆能力<br>对同一个url请求没有上下文关系<br>每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况<br>服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器<br>人生若只如初见，请求过的资源下一次会继续进行请求<br>http协议无状态中的 状态 到底指的是什么？！</p>\n<p>【状态】的含义就是：客户端和服务器在某次会话中产生的数据</p>\n<p>那么对应的【无状态】就意味着：这些数据不会被保留</p>\n<p>but</p>\n<p>通过增加cookie和session机制，现在的网络请求其实是有状态的<br>在没有状态的http协议下，服务器也一定会保留你每次网络请求对数据的修改，但这跟保留每次访问的数据是不一样的，保留的只是会话产生的结果，而没有保留会话<br>详细参考 HTTP是一个无状态的协议。这句话里的无状态是什么意思？</p>\n<p>3、http-cache：就是 http 缓存咯</p>\n<p>首先得明确 http 缓存的好处</p>\n<p>减少了冗余的数据传输，减少网费<br>减少服务器端的压力<br>Web 缓存能够减少延迟与网络阻塞，进而减少显示某个资源所用的时间<br>加快客户端加载网页的速度<br>常见 http 缓存的类型</p>\n<p>私有缓存（一般为本地浏览器缓存）<br>代理缓存<br>然后谈谈本地缓存</p>\n<p>本地缓存是指浏览器请求资源时命中了浏览器本地的缓存资源，浏览器并不会发送真正的请求给服务器了。它的执行过程是：</p>\n<p>第一次浏览器发送请求给服务器时，此时浏览器还没有本地缓存副本，服务器返回资源给浏览器，响应码是200 OK，浏览器收到资源后，把资源和对应的响应头一起缓存下来。<br>第二次浏览器准备发送请求给服务器时候，浏览器会先检查上一次服务端返回的响应头信息中的Cache-Control，它的值是一个相对值，单位为秒，表示资源在客户端缓存的最大有效期，过期时间为第一次请求的时间减去Cache-Control的值，过期时间跟当前的请求时间比较，如果本地缓存资源没过期，那么命中缓存，不再请求服务器。<br>如果没有命中，浏览器就会把请求发送给服务器，进入缓存协商阶段。<br>与本地缓存相关的头有：Cache-Control、Expires，Cache-Control有多个可选值代表不同的意义，而Expires就是一个日期格式的绝对值。</p>\n<p>Cache-Control</p>\n<p>Cache-Control是HTPP缓存策略中最重要的头，它是HTTP/1.1中出现的，它由如下几个值</p>\n<p>no-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在ETag，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。<br>no-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。<br>public：可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器。<br>private：只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。<br>max-age：从当前请求开始，允许获取的响应被重用的最长时间（秒）。<br>例如：</p>\n<p>Cache-Control: public, max-age=1000 </p>\n<h1 id=\"表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\"><a href=\"#表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\" class=\"headerlink\" title=\"表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\"></a>表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。</h1><p>Expires</p>\n<p>Expires是HTTP/1.0出现的头信息，同样是用于决定本地缓存策略的头，它是一个绝对时间，时间格式是如Mon, 10 Jun 2015 21:31:12 GMT，只要发送请求时间是在Expires之前，那么本地缓存始终有效，否则就会去服务器发送请求获取新的资源。如果同时出现Cache-Control：max-age和Expires，那么max-age优先级更高。他们可以这样组合使用</p>\n<p>Cache-Control: public<br>Expires: Wed, Jan 10 2018 00:27:04 GMT<br>所谓的缓存协商</p>\n<p>当第一次请求时服务器返回的响应头中存在以下情况时</p>\n<p>没有 Cache-Control 和 Expires<br>Cache-Control 和 Expires 过期了<br>Cache-Control 的属性设置为 no-cache 时<br>那么浏览器第二次请求时就会与服务器进行协商，询问浏览器中的缓存资源是不是旧版本，需不需要更新，此时，服务器就会做出判断，如果缓存和服务端资源的最新版本是一致的，那么就无需再次下载该资源，服务端直接返回304 Not Modified 状态码，如果服务器发现浏览器中的缓存已经是旧版本了，那么服务器就会把最新资源的完整内容返回给浏览器，状态码就是200 Ok，那么服务端是根据什么来判断浏览器的缓存是不是最新的呢？其实是根据HTTP的另外两组头信息，分别是：Last-Modified/If-Modified-Since 与 ETag/If-None-Match。</p>\n<p>Last-Modified 与 If-Modified-Since</p>\n<p>浏览器第一次请求资源时，服务器会把资源的最新修改时间Last-Modified:Thu, 29 Dec 2011 18:23:55 GMT放在响应头中返回给浏览器<br>第二次请求时，浏览器就会把上一次服务器返回的修改时间放在请求头If-Modified-Since:Thu, 29 Dec 2011 18:23:55发送给服务器，服务器就会拿这个时间跟服务器上的资源的最新修改时间进行对比<br>如果两者相等或者大于服务器上的最新修改时间，那么表示浏览器的缓存是有效的，此时缓存会命中，服务器就不再返回内容给浏览器了，同时Last-Modified头也不会返回，因为资源没被修改，返回了也没什么意义。如果没命中缓存则最新修改的资源连同Last-Modified头一起返回。</p>\n<p>第一次请求返回的响应头：</p>\n<p>Cache-Control:max-age=3600<br>Expires: Fri, Jan 12 2018 00:27:04 GMT<br>Last-Modified: Wed, Jan 10 2018 00:27:04 GMT<br>第二次请求的请求头信息：</p>\n<p>If-Modified-Since: Wed, Jan 10 2018 00:27:04 GMT<br>这组头信息是基于资源的修改时间来判断资源有没有更新，另一种方式就是根据资源的内容来判断，就是接下来要讨论的 ETag 与 If-None-Match</p>\n<p>ETag与If-None-Match</p>\n<p>ETag/If-None-Match与Last-Modified/If-Modified-Since的流程其实是类似的，唯一的区别是它基于资源的内容的摘要信息（比如MD5 hash）来判断</p>\n<p>浏览器发送第二次请求时，会把第一次的响应头信息ETag的值放在If-None-Match的请求头中发送到服务器，与最新的资源的摘要信息对比，如果相等，取浏览器缓存，否则内容有更新，最新的资源连同最新的摘要信息返回。用ETag的好处是如果因为某种原因到时资源的修改时间没改变，那么用ETag就能区分资源是不是有被更新。</p>\n<p>第一次请求返回的响应头：</p>\n<p>Cache-Control: public, max-age=31536000<br>ETag: “15f0fff99ed5aae4edffdd6496d7131f”<br>第二次请求的请求头信息：</p>\n<p>If-None-Match: “15f0fff99ed5aae4edffdd6496d7131f”<br>4、cookie 和 session</p>\n<p>session： 是一个抽象概念，开发者为了实现中断和继续等操作，将 user agent 和 server 之间一对一的交互，抽象为“会话”，进而衍生出“会话状态”，也就是 session 的概念<br>cookie：它是一个世纪存在的东西，http 协议中定义在 header 中的字段，可以认为是 session 的一种后端无状态实现<br>现在我们常说的 “session”，是为了绕开 cookie 的各种限制，通常借助 cookie 本身和后端存储实现的，一种更高级的会话状态实现</p>\n<p>session 的常见实现要借助cookie来发送 sessionID</p>\n<p>5、安全问题，如 XSS 和 CSRF</p>\n<p>XSS：跨站脚本攻击，是一种网站应用程序的安全漏洞攻击，是代码注入的一种。常见方式是将恶意代码注入合法代码里隐藏起来，再诱发恶意代码，从而进行各种各样的非法活动。<br>防范：记住一点 “所有用户输入都是不可信的”，所以得做输入过滤和转义</p>\n<p>详细点击 <a href=\"http://www.imooc.com/article/13553\" target=\"_blank\" rel=\"noopener\">对于跨站脚本攻击（XSS攻击）的理解和总结</a></p>\n<p>CSRF：跨站请求伪造，也称 XSRF，是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。与 XSS 相比，XSS利用的是用户对指定网站的信任，CSRF利用的是网站对用户网页浏览器的信任。<br>防范：用户操作验证（验证码），额外验证机制（token使用）等</p>\n<p>详细点击 <a href=\"http://www.imooc.com/article/13552\" target=\"_blank\" rel=\"noopener\">对于跨站伪造请求（CSRF）的理解和总结</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"框架相关\"><a href=\"#框架相关\" class=\"headerlink\" title=\"框架相关\"></a>框架相关</h2><p>1、数据双向绑定原理：常见数据绑定的方案</p>\n<p>Object.defineProperty（vue）：劫持数据的 getter 和 setter<br>脏值检测（angularjs）：通过特定事件进行轮循<br>发布/订阅模式：通过消息发布并将消息进行订阅<br>详细细节参考 实现一个属于我们自己的简易MVVM库</p>\n<p>扩充：如何监听数组变化</p>\n<p>2、VDOM：三个 part，</p>\n<p>虚拟节点类，将真实 DOM 节点用 js 对象的形式进行展示，并提供 render 方法，将虚拟节点渲染成真实 DOM<br>节点 diff 比较：对虚拟节点进行 js 层面的计算，并将不同的操作都记录到 patch 对象<br>re-render：解析 patch 对象，进行 re-render<br>详细请参考 实现Virtual Dom &amp;&amp; Diff</p>\n<p>补充1：VDOM 的必要性？<br>创建真实DOM的代价高：真实的 DOM 节点 node 实现的属性很多，而 vnode 仅仅实现一些必要的属性，相比起来，创建一个 vnode 的成本比较低。<br>触发多次浏览器重绘及回流：使用 vnode ，相当于加了一个缓冲，让一次数据变动所带来的所有 node 变化，先在 vnode 中进行修改，然后 diff 之后对所有产生差异的节点集中一次对 DOM tree 进行修改，以减少浏览器的重绘及回流。<br>补充2：vue 为什么采用 vdom？<br>引入 Virtual DOM 在性能方面的考量仅仅是一方面。</p>\n<p>性能受场景的影响是非常大的，不同的场景可能造成不同实现方案之间成倍的性能差距，所以依赖细粒度绑定及 Virtual DOM 哪个的性能更好还真不是一个容易下定论的问题。</p>\n<p>Vue 之所以引入了 Virtual DOM，更重要的原因是为了解耦 HTML 依赖，这带来两个非常重要的好处是：</p>\n<p>不再依赖 HTML 解析器进行模版解析，可以进行更多的 AOT 工作提高运行时效率：通过模版 AOT 编译，Vue 的运行时体积可以进一步压缩，运行时效率可以进一步提升；<br>可以渲染到 DOM 以外的平台，实现 SSR、同构渲染这些高级特性，Weex 等框架应用的就是这一特性。<br>综上，Virtual DOM 在性能上的收益并不是最主要的，更重要的是它使得 Vue 具备了现代框架应有的高级特性。</p>\n<p>3、vue 和 react 区别</p>\n<p>相同点：都支持 ssr，都有 vdom，组件化开发，实现 webComponents 规范，数据驱动等<br>不同点：vue 是双向数据流（当然为了实现单数据流方便管理组件状态，vuex 便出现了），react 是单向数据流。vue 的 vdom 是追踪每个组件的依赖关系，不会渲染整个组件树，react 每当应该状态被改变时，全部子组件都会 re-render。<br>上面提到的每个点，具体细节还得看自己的理解</p>\n<p>4、为什么用 vue ：简洁、轻快、舒服、没了</p>\n<p>网络基础类</p>\n<p>1、跨域：很多种方法，但万变不离其宗，都是为了搞定同源策略。重用的有 jsonp、iframe、cors、img、HTML5 postMessage等等。其中用到 html 标签进行跨域的原理就是 html 不受同源策略影响。但只是接受 Get 的请求方式，这个得清楚。</p>\n<p>详细传送门</p>\n<p>延伸1：img iframe script 来发送跨域请求有什么优缺点？<br>iframe<br>优点：跨域完毕之后DOM操作和互相之间的JavaScript调用都是没有问题的<br>缺点：1.若结果要以URL参数传递，这就意味着在结果数据量很大的时候需要分割传递，巨烦。2.还有一个是iframe本身带来的，母页面和iframe本身的交互本身就有安全性限制。<br>script<br>优点：可以直接返回json格式的数据，方便处理<br>缺点：只接受GET请求方式<br>图片ping<br>优点：可以访问任何url，一般用来进行点击追踪，做页面分析常用的方法<br>缺点：不能访问响应文本，只能监听是否响应<br>延伸2：配合 webpack 进行反向代理？<br>webpack 在 devServer 选项里面提供了一个 proxy 的参数供开发人员进行反向代理</p>\n<p>‘/api’: {<br>target: ‘<a href=\"http://www.example.com&#39;\" target=\"_blank\" rel=\"noopener\">http://www.example.com&#39;</a>, // your target host<br>            changeOrigin: true, // needed for virtual hosted sites<br>            pathRewrite: {<br>                ‘^/api’: ‘’  // rewrite path<br>            }<br>},<br>    然后再配合 http-proxy-middleware 插件对 api 请求地址进行代理</p>\n<pre><code>const express = require(&apos;express&apos;);\nconst proxy = require(&apos;http-proxy-middleware&apos;);\n// proxy api requests\nconst exampleProxy = proxy(options); // 这里的 options 就是 webpack 里面的 proxy 选项对应的每个选项\n\n// mount `exampleProxy` in web server\nconst app = express();\napp.use(&apos;/api&apos;, exampleProxy);\napp.listen(3000);\n然后再用 nginx 把允许跨域的源地址添加到报头里面即可\n\n说到 nginx ，可以再谈谈 CORS 配置，大致如下\n\nlocation / {\n    if ($request_method = &apos;OPTIONS&apos;) {\n        add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;;  \n        add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET, POST, OPTIONS&apos;; \n        add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;;\n        add_header &apos;Access-Control-Allow-Headers&apos; &apos;DNT, X-Mx-ReqToken, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type&apos;;  \n        add_header &apos;Access-Control-Max-Age&apos; 86400;  \n        add_header &apos;Content-Type&apos; &apos;text/plain charset=UTF-8&apos;;  \n        add_header &apos;Content-Length&apos; 0;  \n        return 200;  \n    }\n}</code></pre><p>2、http 无状态无连接</p>\n<p>http 协议对于事务处理没有记忆能力<br>对同一个url请求没有上下文关系<br>每次的请求都是独立的，它的执行情况和结果与前面的请求和之后的请求是无直接关系的，它不会受前面的请求应答情况直接影响，也不会直接影响后面的请求应答情况<br>服务器中没有保存客户端的状态，客户端必须每次带上自己的状态去请求服务器<br>人生若只如初见，请求过的资源下一次会继续进行请求<br>http协议无状态中的 状态 到底指的是什么？！</p>\n<p>【状态】的含义就是：客户端和服务器在某次会话中产生的数据</p>\n<p>那么对应的【无状态】就意味着：这些数据不会被保留</p>\n<p>but</p>\n<p>通过增加cookie和session机制，现在的网络请求其实是有状态的<br>在没有状态的http协议下，服务器也一定会保留你每次网络请求对数据的修改，但这跟保留每次访问的数据是不一样的，保留的只是会话产生的结果，而没有保留会话<br>详细参考 HTTP是一个无状态的协议。这句话里的无状态是什么意思？</p>\n<p>3、http-cache：就是 http 缓存咯</p>\n<p>首先得明确 http 缓存的好处</p>\n<p>减少了冗余的数据传输，减少网费<br>减少服务器端的压力<br>Web 缓存能够减少延迟与网络阻塞，进而减少显示某个资源所用的时间<br>加快客户端加载网页的速度<br>常见 http 缓存的类型</p>\n<p>私有缓存（一般为本地浏览器缓存）<br>代理缓存<br>然后谈谈本地缓存</p>\n<p>本地缓存是指浏览器请求资源时命中了浏览器本地的缓存资源，浏览器并不会发送真正的请求给服务器了。它的执行过程是：</p>\n<p>第一次浏览器发送请求给服务器时，此时浏览器还没有本地缓存副本，服务器返回资源给浏览器，响应码是200 OK，浏览器收到资源后，把资源和对应的响应头一起缓存下来。<br>第二次浏览器准备发送请求给服务器时候，浏览器会先检查上一次服务端返回的响应头信息中的Cache-Control，它的值是一个相对值，单位为秒，表示资源在客户端缓存的最大有效期，过期时间为第一次请求的时间减去Cache-Control的值，过期时间跟当前的请求时间比较，如果本地缓存资源没过期，那么命中缓存，不再请求服务器。<br>如果没有命中，浏览器就会把请求发送给服务器，进入缓存协商阶段。<br>与本地缓存相关的头有：Cache-Control、Expires，Cache-Control有多个可选值代表不同的意义，而Expires就是一个日期格式的绝对值。</p>\n<p>Cache-Control</p>\n<p>Cache-Control是HTPP缓存策略中最重要的头，它是HTTP/1.1中出现的，它由如下几个值</p>\n<p>no-cache：不使用本地缓存。需要使用缓存协商，先与服务器确认返回的响应是否被更改，如果之前的响应中存在ETag，那么请求的时候会与服务端验证，如果资源未被更改，则可以避免重新下载。<br>no-store：直接禁止游览器缓存数据，每次用户请求该资源，都会向服务器发送一个请求，每次都会下载完整的资源。<br>public：可以被所有的用户缓存，包括终端用户和CDN等中间代理服务器。<br>private：只能被终端用户的浏览器缓存，不允许CDN等中继缓存服务器对其缓存。<br>max-age：从当前请求开始，允许获取的响应被重用的最长时间（秒）。<br>例如：</p>\n<p>Cache-Control: public, max-age=1000 </p>\n<h1 id=\"表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\"><a href=\"#表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\" class=\"headerlink\" title=\"表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。\"></a>表示资源可以被所有用户以及代理服务器缓存，最长时间为1000秒。</h1><p>Expires</p>\n<p>Expires是HTTP/1.0出现的头信息，同样是用于决定本地缓存策略的头，它是一个绝对时间，时间格式是如Mon, 10 Jun 2015 21:31:12 GMT，只要发送请求时间是在Expires之前，那么本地缓存始终有效，否则就会去服务器发送请求获取新的资源。如果同时出现Cache-Control：max-age和Expires，那么max-age优先级更高。他们可以这样组合使用</p>\n<p>Cache-Control: public<br>Expires: Wed, Jan 10 2018 00:27:04 GMT<br>所谓的缓存协商</p>\n<p>当第一次请求时服务器返回的响应头中存在以下情况时</p>\n<p>没有 Cache-Control 和 Expires<br>Cache-Control 和 Expires 过期了<br>Cache-Control 的属性设置为 no-cache 时<br>那么浏览器第二次请求时就会与服务器进行协商，询问浏览器中的缓存资源是不是旧版本，需不需要更新，此时，服务器就会做出判断，如果缓存和服务端资源的最新版本是一致的，那么就无需再次下载该资源，服务端直接返回304 Not Modified 状态码，如果服务器发现浏览器中的缓存已经是旧版本了，那么服务器就会把最新资源的完整内容返回给浏览器，状态码就是200 Ok，那么服务端是根据什么来判断浏览器的缓存是不是最新的呢？其实是根据HTTP的另外两组头信息，分别是：Last-Modified/If-Modified-Since 与 ETag/If-None-Match。</p>\n<p>Last-Modified 与 If-Modified-Since</p>\n<p>浏览器第一次请求资源时，服务器会把资源的最新修改时间Last-Modified:Thu, 29 Dec 2011 18:23:55 GMT放在响应头中返回给浏览器<br>第二次请求时，浏览器就会把上一次服务器返回的修改时间放在请求头If-Modified-Since:Thu, 29 Dec 2011 18:23:55发送给服务器，服务器就会拿这个时间跟服务器上的资源的最新修改时间进行对比<br>如果两者相等或者大于服务器上的最新修改时间，那么表示浏览器的缓存是有效的，此时缓存会命中，服务器就不再返回内容给浏览器了，同时Last-Modified头也不会返回，因为资源没被修改，返回了也没什么意义。如果没命中缓存则最新修改的资源连同Last-Modified头一起返回。</p>\n<p>第一次请求返回的响应头：</p>\n<p>Cache-Control:max-age=3600<br>Expires: Fri, Jan 12 2018 00:27:04 GMT<br>Last-Modified: Wed, Jan 10 2018 00:27:04 GMT<br>第二次请求的请求头信息：</p>\n<p>If-Modified-Since: Wed, Jan 10 2018 00:27:04 GMT<br>这组头信息是基于资源的修改时间来判断资源有没有更新，另一种方式就是根据资源的内容来判断，就是接下来要讨论的 ETag 与 If-None-Match</p>\n<p>ETag与If-None-Match</p>\n<p>ETag/If-None-Match与Last-Modified/If-Modified-Since的流程其实是类似的，唯一的区别是它基于资源的内容的摘要信息（比如MD5 hash）来判断</p>\n<p>浏览器发送第二次请求时，会把第一次的响应头信息ETag的值放在If-None-Match的请求头中发送到服务器，与最新的资源的摘要信息对比，如果相等，取浏览器缓存，否则内容有更新，最新的资源连同最新的摘要信息返回。用ETag的好处是如果因为某种原因到时资源的修改时间没改变，那么用ETag就能区分资源是不是有被更新。</p>\n<p>第一次请求返回的响应头：</p>\n<p>Cache-Control: public, max-age=31536000<br>ETag: “15f0fff99ed5aae4edffdd6496d7131f”<br>第二次请求的请求头信息：</p>\n<p>If-None-Match: “15f0fff99ed5aae4edffdd6496d7131f”<br>4、cookie 和 session</p>\n<p>session： 是一个抽象概念，开发者为了实现中断和继续等操作，将 user agent 和 server 之间一对一的交互，抽象为“会话”，进而衍生出“会话状态”，也就是 session 的概念<br>cookie：它是一个世纪存在的东西，http 协议中定义在 header 中的字段，可以认为是 session 的一种后端无状态实现<br>现在我们常说的 “session”，是为了绕开 cookie 的各种限制，通常借助 cookie 本身和后端存储实现的，一种更高级的会话状态实现</p>\n<p>session 的常见实现要借助cookie来发送 sessionID</p>\n<p>5、安全问题，如 XSS 和 CSRF</p>\n<p>XSS：跨站脚本攻击，是一种网站应用程序的安全漏洞攻击，是代码注入的一种。常见方式是将恶意代码注入合法代码里隐藏起来，再诱发恶意代码，从而进行各种各样的非法活动。<br>防范：记住一点 “所有用户输入都是不可信的”，所以得做输入过滤和转义</p>\n<p>详细点击 <a href=\"http://www.imooc.com/article/13553\" target=\"_blank\" rel=\"noopener\">对于跨站脚本攻击（XSS攻击）的理解和总结</a></p>\n<p>CSRF：跨站请求伪造，也称 XSRF，是一种挟制用户在当前已登录的Web应用程序上执行非本意的操作的攻击方法。与 XSS 相比，XSS利用的是用户对指定网站的信任，CSRF利用的是网站对用户网页浏览器的信任。<br>防范：用户操作验证（验证码），额外验证机制（token使用）等</p>\n<p>详细点击 <a href=\"http://www.imooc.com/article/13552\" target=\"_blank\" rel=\"noopener\">对于跨站伪造请求（CSRF）的理解和总结</a></p>\n"},{"title":"面试合集","date":"2018-02-07T03:25:31.000Z","update":null,"_content":"\njava合集：　http://blog.csdn.net/longyajidi/article/details/73456675\n博客文章：　http://www.cnblogs.com/luyucheng/\njava合集:   http://blog.csdn.net/moneyshi/article/details/50786786\n","source":"_posts/interview-tips.md","raw":"---\ntitle: 面试合集\ndate: 2018-02-07 11:25:31\nupdate:\ntags:\n---\n\njava合集：　http://blog.csdn.net/longyajidi/article/details/73456675\n博客文章：　http://www.cnblogs.com/luyucheng/\njava合集:   http://blog.csdn.net/moneyshi/article/details/50786786\n","slug":"interview-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlv000o2oi830ep4a6b","content":"<p>java合集：　<a href=\"http://blog.csdn.net/longyajidi/article/details/73456675\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/longyajidi/article/details/73456675</a><br>博客文章：　<a href=\"http://www.cnblogs.com/luyucheng/\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/luyucheng/</a><br>java合集:   <a href=\"http://blog.csdn.net/moneyshi/article/details/50786786\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/moneyshi/article/details/50786786</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>java合集：　<a href=\"http://blog.csdn.net/longyajidi/article/details/73456675\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/longyajidi/article/details/73456675</a><br>博客文章：　<a href=\"http://www.cnblogs.com/luyucheng/\" target=\"_blank\" rel=\"noopener\">http://www.cnblogs.com/luyucheng/</a><br>java合集:   <a href=\"http://blog.csdn.net/moneyshi/article/details/50786786\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/moneyshi/article/details/50786786</a></p>\n"},{"title":"javascript_tips","date":"2018-01-09T07:39:17.000Z","_content":"javascript function bind 的实现方法 \n```\nFunction.prototype.bind = function (oThis) {\n    if (typeof this !== \"function\") {\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n    }\n\n    var aArgs = Array.prototype.slice.call(arguments, 1), \n        fToBind = this, \n        fNOP = function () {},\n        fBound = function () {\n            return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis || window,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                    );\n        };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n\n    return fBound;\n};\n```\n","source":"_posts/javascript-tips.md","raw":"---\ntitle: javascript_tips\ndate: 2018-01-09 15:39:17\ntags:\n---\njavascript function bind 的实现方法 \n```\nFunction.prototype.bind = function (oThis) {\n    if (typeof this !== \"function\") {\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n    }\n\n    var aArgs = Array.prototype.slice.call(arguments, 1), \n        fToBind = this, \n        fNOP = function () {},\n        fBound = function () {\n            return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis || window,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                    );\n        };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n\n    return fBound;\n};\n```\n","slug":"javascript-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlw000p2oi81zc946gt","content":"<p>javascript function bind 的实现方法 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Function.prototype.bind = function (oThis) &#123;</span><br><span class=\"line\">    if (typeof this !== &quot;function&quot;) &#123;</span><br><span class=\"line\">        throw new TypeError(&quot;Function.prototype.bind - what is trying to be bound is not callable&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var aArgs = Array.prototype.slice.call(arguments, 1), </span><br><span class=\"line\">        fToBind = this, </span><br><span class=\"line\">        fNOP = function () &#123;&#125;,</span><br><span class=\"line\">        fBound = function () &#123;</span><br><span class=\"line\">            return fToBind.apply(</span><br><span class=\"line\">                    this instanceof fNOP &amp;&amp; oThis ? this : oThis || window,</span><br><span class=\"line\">                    aArgs.concat(Array.prototype.slice.call(arguments))</span><br><span class=\"line\">                    );</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    fNOP.prototype = this.prototype;</span><br><span class=\"line\">    fBound.prototype = new fNOP();</span><br><span class=\"line\"></span><br><span class=\"line\">    return fBound;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>javascript function bind 的实现方法 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Function.prototype.bind = function (oThis) &#123;</span><br><span class=\"line\">    if (typeof this !== &quot;function&quot;) &#123;</span><br><span class=\"line\">        throw new TypeError(&quot;Function.prototype.bind - what is trying to be bound is not callable&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    var aArgs = Array.prototype.slice.call(arguments, 1), </span><br><span class=\"line\">        fToBind = this, </span><br><span class=\"line\">        fNOP = function () &#123;&#125;,</span><br><span class=\"line\">        fBound = function () &#123;</span><br><span class=\"line\">            return fToBind.apply(</span><br><span class=\"line\">                    this instanceof fNOP &amp;&amp; oThis ? this : oThis || window,</span><br><span class=\"line\">                    aArgs.concat(Array.prototype.slice.call(arguments))</span><br><span class=\"line\">                    );</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    fNOP.prototype = this.prototype;</span><br><span class=\"line\">    fBound.prototype = new fNOP();</span><br><span class=\"line\"></span><br><span class=\"line\">    return fBound;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"linux下的压缩命令","date":"2017-11-21T10:06:00.000Z","_content":"\n## Linux下的压缩zip,解压缩unzip命令详解及实例\n\nLinux下的压缩解压缩命令详解及实例\n\n实例：压缩服务器上当前目录的内容为xxx.zip文件\n\nzip -r xxx.zip ./*\n\n### 解压zip文件到当前目录\n\nunzip filename.zip\n\n============================\n\n另：有些服务器没有安装zip包执行不了zip命令，但基本上都可以用tar命令的，实例如下：\n\n\ntar -zcvf /home/zdzlibs.tar.gz /home/zdz/java/zdzlibs/\n\n============================\n\nlinux zip命令\n\nzip -r myfile.zip ./*\n将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件.\n\n2.unzip\nunzip -o -d /home/sunny myfile.zip\n把myfile.zip文件解压到 /home/sunny/\n-o:不提示的情况下覆盖文件；\n-d:-d /home/sunny 指明将文件解压缩到/home/sunny目录下；\n\n3.其他\nzip -d myfile.zip smart.txt\n删除压缩文件中smart.txt文件\nzip -m myfile.zip ./rpm_info.txt\n向压缩文件中myfile.zip中添加rpm_info.txt文件\n-------------------------------------------------------------------------------\n\n要使用 zip 来压缩文件，在 shell 提示下键入下面的命令：\n\nzip -r filename.zip filesdir\n\n\n在这个例子里，filename.zip 代表你创建的文件，filesdir 代表你想放置新 zip 文件的目录。-r 选项指定你想递归地（recursively）包括所有包括在 filesdir 目录中的文件。\n\n要抽取 zip 文件的内容，键入以下命令：\n\nunzip filename.zip\n\n\n你可以使用 zip 命令同时处理多个文件和目录，方法是将它们逐一列出，并用空格间隔：\n\nzip -r filename.zip file1 file2 file3 /usr/work/school\n\n\n上面的命令把 file1、file2、 file3、以及 /usr/work/school 目录的内容（假设这个目录存在）压缩起来，然后放入 filename.zip 文件中。\n\n\n\ntar 命令详解\n\n　　-c: 建立压缩档案\n\n　　-x：解压\n\n　　-t：查看内容\n\n　　-r：向压缩归档文件末尾追加文件\n\n　　-u：更新原压缩包中的文件\n\n　　这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。\n\n　　-c: 建立压缩档案\n\n　　-x：解压\n\n　　-t：查看内容\n\n　　-r：向压缩归档文件末尾追加文件\n\n　　-u：更新原压缩包中的文件\n\n　　下面的参数-f是必须的\n\n　　-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。\n\n　　# tar -cf all.tar *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\n\n　　# tar -rf all.tar *.gif\n\n　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\n\n　　# tar -uf all.tar logo.gif\n\n　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n　　# tar -tf all.tar\n\n　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n　　# tar -xf all.tar\n\n　　这条命令是解出all.tar包中所有文件，-t是解开的意思\n\n　　压缩\n\n　　tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg\n\n　　tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz\n\n　　tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2\n\n　　tar –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z\n\n　　rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux\n\n　　zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux\n\n　　解压\n\n　　tar –xvf file.tar //解压 tar包\n\n　　tar -xzvf file.tar.gz //解压tar.gz\n\n　　tar -xjvf file.tar.bz2 //解压 tar.bz2\n\n　　tar –xZvf file.tar.Z //解压tar.Z\n\n　　unrar e file.rar //解压rar\n\n　　unzip file.zip //解压zip\n\n　　总结\n\n　　1、*.tar 用 tar –xvf 解压\n\n　　2、*.gz 用 gzip -d或者gunzip 解压\n\n　　3、*.tar.gz和*.tgz 用 tar –xzf 解压\n\n　　4、*.bz2 用 bzip2 -d或者用bunzip2 解压\n\n　　5、*.tar.bz2用tar –xjf 解压\n\n　　6、*.Z 用 uncompress 解压\n\n　　7、*.tar.Z 用tar –xZf 解压\n\n　　8、*.rar 用 unrar e解压\n\n　　9、*.zip 用 unzip 解压\n\n　　Linux中tar命令详解(转载的资料)\n\n 　2008年04月17日 星期四 15:37\n\n    　　tar命令\n\n    　　tar 可以为文件和目录创建档案。利用tar，用户可以为某一特定文件创建档案(备份文件)，也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被 用来在磁带上创建档案，现在，用户可以在任何设备上创建档案，如软盘。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将 几个文件组合成为一个文件以便于网络传输是非常有用的。Linux上的tar是GNU版本的。\n\n    　　语法：tar [主选项+辅选项] 文件或者目录\n\n    　　使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。\n\n    　　主选项：\n\n    　　c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。\n\n    　　r 把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。\n\n    　　t 列出档案文件的内容，查看已经备份了哪些文件。\n\n    　　u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。\n\n    　　x 从档案文件中释放文件。\n\n    　　辅助选项：\n\n    　　b 该选项是为磁带机设定的。其后跟一数字，用来说明区块的大小，系统预设值为20(20*512 bytes)。\n\n    　　f 使用档案文件或设备，这个选项通常是必选的。\n\n    　　k 保存已经存在的文件。例如我们把某个文件还原，在还原的过程中，遇到相同的文件，不会进行覆盖。\n\n    　　m 在还原文件时，把所有文件的修改时间设定为现在。\n\n    　　M 创建多卷的档案文件，以便在几个磁盘中存放。\n\n    　　v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。\n\n    　　w 每一步都要求确认。\n\n    　　z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。\n\n    　　Linux下的压缩文件剖析\n\n    　　对于刚刚接触Linux的人来说，一定会给Linux下一大堆各式各样的文件名给搞晕。别个不说，单单就压缩文件为例，我们知道在Windows下最常见 的压缩文件就只有两种，一是,zip，另一个是.rap。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的 压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些 常见的压缩文件进行一番小结，希望你下次遇到这些文件时不至于被搞晕。\n\n    　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压 缩算法变成一个小文件。为什么要区分这两个概念呢?其实这源于Linux中的很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就 得先借助另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。\n\n    Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩了，所以首先就来讲讲tar命令的基本用法：\n\n    　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面来举例说明一下：\n\n    　　# tar -cf all.tar *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\n\n    　　# tar -rf all.tar *.gif\n\n    　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\n\n    　　# tar -uf all.tar logo.gif\n\n    　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n    　　# tar -tf all.tar\n\n    　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n    　　# tar -xf all.tar\n\n    　　这条命令是解出all.tar包中所有文件，-t是解开的意思\n\n    　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压缩程序，比如调用gzip、bzip2等。\n\n    　　1) tar调用gzip\n\n    　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下：\n\n    　　# tar -czf all.tar.gz *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包，包名为all.tar.gz\n\n    　　# tar -xzf all.tar.gz\n\n    　　这条命令是将上面产生的包解开。\n\n    　　2) tar调用bzip2\n\n    　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例说明一下：\n\n    　　# tar -cjf all.tar.bz2 *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包，包名为all.tar.bz2\n\n    　　# tar -xjf all.tar.bz2\n\n    　　这条命令是将上面产生的包解开。\n\n    　　3)tar调用compress\n\n    　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress。tar中使用-Z这个参数来调用gzip。下面来举例说明一下：\n\n    　　# tar -cZf all.tar.Z *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包，包名为all.tar.Z\n\n    　　# tar -xZf all.tar.Z\n\n    　　这条命令是将上面产生的包解开\n\n    　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文件作一个小结：\n\n    　　1)对于.tar结尾的文件\n\n    　　tar -xf all.tar\n\n    　　2)对于.gz结尾的文件\n\n    　　gzip -d all.gz\n\n    　　gunzip all.gz\n\n    　　3)对于.tgz或.tar.gz结尾的文件\n\n    　　tar -xzf all.tar.gz\n\n    　　tar -xzf all.tgz\n\n    　　4)对于.bz2结尾的文件\n\n    　　bzip2 -d all.bz2\n\n    　　bunzip2 all.bz2\n\n    　　5)对于tar.bz2结尾的文件\n\n    　　tar -xjf all.tar.bz2\n\n    　　6)对于.Z结尾的文件\n\n    　　uncompress all.Z\n\n    　　7)对于.tar.Z结尾的文件\n\n    　　tar -xZf all.tar.z\n\n    　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它们：\n\n    　　1)对于.zip\n\n    　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n    　　# zip all.zip *.jpg\n\n    　　这条命令是将所有.jpg的文件压缩成一个zip包\n\n    　　# unzip all.zip\n\n    　　这条命令是将all.zip中的所有文件解压出来\n\n    　　2)对于.rar\n\n    　　要在linux下处理.rar文件，需要安装RAR for Linux，可以从网上下载，但要记住，RAR for Linux\n\n    　　不是免费的;然后安装：\n\n    　　# tar -xzpvf rarlinux-3.2.0.tar.gz\n\n    　　# cd rar\n\n    　　# make\n\n    　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n    　　# rar a all *.jpg\n\n    　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar 扩展名将自动附加到包名后。\n\n    　　# unrar e all.rar\n\n    　　这条命令是将all.rar中的所有文件解压出来\n\n    　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress、uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦恼了。而且以上方 法对于Unix也基本有效。\n\n    本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、 compress、uncompress、zip、unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz、.tar.gz、. tgz、.bz2、.tar.bz2、.Z、.tar.Z、.zip、.rar这10种压缩文件进行操作\n","source":"_posts/linux-help-compress.md","raw":"---\ntitle: linux下的压缩命令\ndate: 2017-11-21 18:06:00\ntags:\n---\n\n## Linux下的压缩zip,解压缩unzip命令详解及实例\n\nLinux下的压缩解压缩命令详解及实例\n\n实例：压缩服务器上当前目录的内容为xxx.zip文件\n\nzip -r xxx.zip ./*\n\n### 解压zip文件到当前目录\n\nunzip filename.zip\n\n============================\n\n另：有些服务器没有安装zip包执行不了zip命令，但基本上都可以用tar命令的，实例如下：\n\n\ntar -zcvf /home/zdzlibs.tar.gz /home/zdz/java/zdzlibs/\n\n============================\n\nlinux zip命令\n\nzip -r myfile.zip ./*\n将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件.\n\n2.unzip\nunzip -o -d /home/sunny myfile.zip\n把myfile.zip文件解压到 /home/sunny/\n-o:不提示的情况下覆盖文件；\n-d:-d /home/sunny 指明将文件解压缩到/home/sunny目录下；\n\n3.其他\nzip -d myfile.zip smart.txt\n删除压缩文件中smart.txt文件\nzip -m myfile.zip ./rpm_info.txt\n向压缩文件中myfile.zip中添加rpm_info.txt文件\n-------------------------------------------------------------------------------\n\n要使用 zip 来压缩文件，在 shell 提示下键入下面的命令：\n\nzip -r filename.zip filesdir\n\n\n在这个例子里，filename.zip 代表你创建的文件，filesdir 代表你想放置新 zip 文件的目录。-r 选项指定你想递归地（recursively）包括所有包括在 filesdir 目录中的文件。\n\n要抽取 zip 文件的内容，键入以下命令：\n\nunzip filename.zip\n\n\n你可以使用 zip 命令同时处理多个文件和目录，方法是将它们逐一列出，并用空格间隔：\n\nzip -r filename.zip file1 file2 file3 /usr/work/school\n\n\n上面的命令把 file1、file2、 file3、以及 /usr/work/school 目录的内容（假设这个目录存在）压缩起来，然后放入 filename.zip 文件中。\n\n\n\ntar 命令详解\n\n　　-c: 建立压缩档案\n\n　　-x：解压\n\n　　-t：查看内容\n\n　　-r：向压缩归档文件末尾追加文件\n\n　　-u：更新原压缩包中的文件\n\n　　这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。\n\n　　-c: 建立压缩档案\n\n　　-x：解压\n\n　　-t：查看内容\n\n　　-r：向压缩归档文件末尾追加文件\n\n　　-u：更新原压缩包中的文件\n\n　　下面的参数-f是必须的\n\n　　-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。\n\n　　# tar -cf all.tar *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\n\n　　# tar -rf all.tar *.gif\n\n　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\n\n　　# tar -uf all.tar logo.gif\n\n　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n　　# tar -tf all.tar\n\n　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n　　# tar -xf all.tar\n\n　　这条命令是解出all.tar包中所有文件，-t是解开的意思\n\n　　压缩\n\n　　tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg\n\n　　tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz\n\n　　tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2\n\n　　tar –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z\n\n　　rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux\n\n　　zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux\n\n　　解压\n\n　　tar –xvf file.tar //解压 tar包\n\n　　tar -xzvf file.tar.gz //解压tar.gz\n\n　　tar -xjvf file.tar.bz2 //解压 tar.bz2\n\n　　tar –xZvf file.tar.Z //解压tar.Z\n\n　　unrar e file.rar //解压rar\n\n　　unzip file.zip //解压zip\n\n　　总结\n\n　　1、*.tar 用 tar –xvf 解压\n\n　　2、*.gz 用 gzip -d或者gunzip 解压\n\n　　3、*.tar.gz和*.tgz 用 tar –xzf 解压\n\n　　4、*.bz2 用 bzip2 -d或者用bunzip2 解压\n\n　　5、*.tar.bz2用tar –xjf 解压\n\n　　6、*.Z 用 uncompress 解压\n\n　　7、*.tar.Z 用tar –xZf 解压\n\n　　8、*.rar 用 unrar e解压\n\n　　9、*.zip 用 unzip 解压\n\n　　Linux中tar命令详解(转载的资料)\n\n 　2008年04月17日 星期四 15:37\n\n    　　tar命令\n\n    　　tar 可以为文件和目录创建档案。利用tar，用户可以为某一特定文件创建档案(备份文件)，也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被 用来在磁带上创建档案，现在，用户可以在任何设备上创建档案，如软盘。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将 几个文件组合成为一个文件以便于网络传输是非常有用的。Linux上的tar是GNU版本的。\n\n    　　语法：tar [主选项+辅选项] 文件或者目录\n\n    　　使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。\n\n    　　主选项：\n\n    　　c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。\n\n    　　r 把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。\n\n    　　t 列出档案文件的内容，查看已经备份了哪些文件。\n\n    　　u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。\n\n    　　x 从档案文件中释放文件。\n\n    　　辅助选项：\n\n    　　b 该选项是为磁带机设定的。其后跟一数字，用来说明区块的大小，系统预设值为20(20*512 bytes)。\n\n    　　f 使用档案文件或设备，这个选项通常是必选的。\n\n    　　k 保存已经存在的文件。例如我们把某个文件还原，在还原的过程中，遇到相同的文件，不会进行覆盖。\n\n    　　m 在还原文件时，把所有文件的修改时间设定为现在。\n\n    　　M 创建多卷的档案文件，以便在几个磁盘中存放。\n\n    　　v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。\n\n    　　w 每一步都要求确认。\n\n    　　z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。\n\n    　　Linux下的压缩文件剖析\n\n    　　对于刚刚接触Linux的人来说，一定会给Linux下一大堆各式各样的文件名给搞晕。别个不说，单单就压缩文件为例，我们知道在Windows下最常见 的压缩文件就只有两种，一是,zip，另一个是.rap。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的 压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些 常见的压缩文件进行一番小结，希望你下次遇到这些文件时不至于被搞晕。\n\n    　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压 缩算法变成一个小文件。为什么要区分这两个概念呢?其实这源于Linux中的很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就 得先借助另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。\n\n    Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩了，所以首先就来讲讲tar命令的基本用法：\n\n    　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面来举例说明一下：\n\n    　　# tar -cf all.tar *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\n\n    　　# tar -rf all.tar *.gif\n\n    　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\n\n    　　# tar -uf all.tar logo.gif\n\n    　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n    　　# tar -tf all.tar\n\n    　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n    　　# tar -xf all.tar\n\n    　　这条命令是解出all.tar包中所有文件，-t是解开的意思\n\n    　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压缩程序，比如调用gzip、bzip2等。\n\n    　　1) tar调用gzip\n\n    　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下：\n\n    　　# tar -czf all.tar.gz *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包，包名为all.tar.gz\n\n    　　# tar -xzf all.tar.gz\n\n    　　这条命令是将上面产生的包解开。\n\n    　　2) tar调用bzip2\n\n    　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例说明一下：\n\n    　　# tar -cjf all.tar.bz2 *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包，包名为all.tar.bz2\n\n    　　# tar -xjf all.tar.bz2\n\n    　　这条命令是将上面产生的包解开。\n\n    　　3)tar调用compress\n\n    　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress。tar中使用-Z这个参数来调用gzip。下面来举例说明一下：\n\n    　　# tar -cZf all.tar.Z *.jpg\n\n    　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包，包名为all.tar.Z\n\n    　　# tar -xZf all.tar.Z\n\n    　　这条命令是将上面产生的包解开\n\n    　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文件作一个小结：\n\n    　　1)对于.tar结尾的文件\n\n    　　tar -xf all.tar\n\n    　　2)对于.gz结尾的文件\n\n    　　gzip -d all.gz\n\n    　　gunzip all.gz\n\n    　　3)对于.tgz或.tar.gz结尾的文件\n\n    　　tar -xzf all.tar.gz\n\n    　　tar -xzf all.tgz\n\n    　　4)对于.bz2结尾的文件\n\n    　　bzip2 -d all.bz2\n\n    　　bunzip2 all.bz2\n\n    　　5)对于tar.bz2结尾的文件\n\n    　　tar -xjf all.tar.bz2\n\n    　　6)对于.Z结尾的文件\n\n    　　uncompress all.Z\n\n    　　7)对于.tar.Z结尾的文件\n\n    　　tar -xZf all.tar.z\n\n    　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它们：\n\n    　　1)对于.zip\n\n    　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n    　　# zip all.zip *.jpg\n\n    　　这条命令是将所有.jpg的文件压缩成一个zip包\n\n    　　# unzip all.zip\n\n    　　这条命令是将all.zip中的所有文件解压出来\n\n    　　2)对于.rar\n\n    　　要在linux下处理.rar文件，需要安装RAR for Linux，可以从网上下载，但要记住，RAR for Linux\n\n    　　不是免费的;然后安装：\n\n    　　# tar -xzpvf rarlinux-3.2.0.tar.gz\n\n    　　# cd rar\n\n    　　# make\n\n    　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n    　　# rar a all *.jpg\n\n    　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar 扩展名将自动附加到包名后。\n\n    　　# unrar e all.rar\n\n    　　这条命令是将all.rar中的所有文件解压出来\n\n    　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress、uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦恼了。而且以上方 法对于Unix也基本有效。\n\n    本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、 compress、uncompress、zip、unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz、.tar.gz、. tgz、.bz2、.tar.bz2、.Z、.tar.Z、.zip、.rar这10种压缩文件进行操作\n","slug":"linux-help-compress","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlx000q2oi8jenvkq85","content":"<h2 id=\"Linux下的压缩zip-解压缩unzip命令详解及实例\"><a href=\"#Linux下的压缩zip-解压缩unzip命令详解及实例\" class=\"headerlink\" title=\"Linux下的压缩zip,解压缩unzip命令详解及实例\"></a>Linux下的压缩zip,解压缩unzip命令详解及实例</h2><p>Linux下的压缩解压缩命令详解及实例</p>\n<p>实例：压缩服务器上当前目录的内容为xxx.zip文件</p>\n<p>zip -r xxx.zip ./*</p>\n<h3 id=\"解压zip文件到当前目录\"><a href=\"#解压zip文件到当前目录\" class=\"headerlink\" title=\"解压zip文件到当前目录\"></a>解压zip文件到当前目录</h3><p>unzip filename.zip</p>\n<p>============================</p>\n<p>另：有些服务器没有安装zip包执行不了zip命令，但基本上都可以用tar命令的，实例如下：</p>\n<p>tar -zcvf /home/zdzlibs.tar.gz /home/zdz/java/zdzlibs/</p>\n<p>============================</p>\n<p>linux zip命令</p>\n<p>zip -r myfile.zip ./*<br>将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件.</p>\n<p>2.unzip<br>unzip -o -d /home/sunny myfile.zip<br>把myfile.zip文件解压到 /home/sunny/<br>-o:不提示的情况下覆盖文件；<br>-d:-d /home/sunny 指明将文件解压缩到/home/sunny目录下；</p>\n<p>3.其他<br>zip -d myfile.zip smart.txt<br>删除压缩文件中smart.txt文件<br>zip -m myfile.zip ./rpm_info.txt</p>\n<h2 id=\"向压缩文件中myfile-zip中添加rpm-info-txt文件\"><a href=\"#向压缩文件中myfile-zip中添加rpm-info-txt文件\" class=\"headerlink\" title=\"向压缩文件中myfile.zip中添加rpm_info.txt文件\"></a>向压缩文件中myfile.zip中添加rpm_info.txt文件</h2><p>要使用 zip 来压缩文件，在 shell 提示下键入下面的命令：</p>\n<p>zip -r filename.zip filesdir</p>\n<p>在这个例子里，filename.zip 代表你创建的文件，filesdir 代表你想放置新 zip 文件的目录。-r 选项指定你想递归地（recursively）包括所有包括在 filesdir 目录中的文件。</p>\n<p>要抽取 zip 文件的内容，键入以下命令：</p>\n<p>unzip filename.zip</p>\n<p>你可以使用 zip 命令同时处理多个文件和目录，方法是将它们逐一列出，并用空格间隔：</p>\n<p>zip -r filename.zip file1 file2 file3 /usr/work/school</p>\n<p>上面的命令把 file1、file2、 file3、以及 /usr/work/school 目录的内容（假设这个目录存在）压缩起来，然后放入 filename.zip 文件中。</p>\n<p>tar 命令详解</p>\n<p>　　-c: 建立压缩档案</p>\n<p>　　-x：解压</p>\n<p>　　-t：查看内容</p>\n<p>　　-r：向压缩归档文件末尾追加文件</p>\n<p>　　-u：更新原压缩包中的文件</p>\n<p>　　这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</p>\n<p>　　-c: 建立压缩档案</p>\n<p>　　-x：解压</p>\n<p>　　-t：查看内容</p>\n<p>　　-r：向压缩归档文件末尾追加文件</p>\n<p>　　-u：更新原压缩包中的文件</p>\n<p>　　下面的参数-f是必须的</p>\n<p>　　-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</p>\n<p>　　# tar -cf all.tar *.jpg</p>\n<p>　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。</p>\n<p>　　# tar -rf all.tar *.gif</p>\n<p>　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。</p>\n<p>　　# tar -uf all.tar logo.gif</p>\n<p>　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</p>\n<p>　　# tar -tf all.tar</p>\n<p>　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思</p>\n<p>　　# tar -xf all.tar</p>\n<p>　　这条命令是解出all.tar包中所有文件，-t是解开的意思</p>\n<p>　　压缩</p>\n<p>　　tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg</p>\n<p>　　tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</p>\n<p>　　tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</p>\n<p>　　tar –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</p>\n<p>　　rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux</p>\n<p>　　zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux</p>\n<p>　　解压</p>\n<p>　　tar –xvf file.tar //解压 tar包</p>\n<p>　　tar -xzvf file.tar.gz //解压tar.gz</p>\n<p>　　tar -xjvf file.tar.bz2 //解压 tar.bz2</p>\n<p>　　tar –xZvf file.tar.Z //解压tar.Z</p>\n<p>　　unrar e file.rar //解压rar</p>\n<p>　　unzip file.zip //解压zip</p>\n<p>　　总结</p>\n<p>　　1、*.tar 用 tar –xvf 解压</p>\n<p>　　2、*.gz 用 gzip -d或者gunzip 解压</p>\n<p>　　3、<em>.tar.gz和</em>.tgz 用 tar –xzf 解压</p>\n<p>　　4、*.bz2 用 bzip2 -d或者用bunzip2 解压</p>\n<p>　　5、*.tar.bz2用tar –xjf 解压</p>\n<p>　　6、*.Z 用 uncompress 解压</p>\n<p>　　7、*.tar.Z 用tar –xZf 解压</p>\n<p>　　8、*.rar 用 unrar e解压</p>\n<p>　　9、*.zip 用 unzip 解压</p>\n<p>　　Linux中tar命令详解(转载的资料)</p>\n<p> 　2008年04月17日 星期四 15:37</p>\n<pre><code>　　tar命令\n\n　　tar 可以为文件和目录创建档案。利用tar，用户可以为某一特定文件创建档案(备份文件)，也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被 用来在磁带上创建档案，现在，用户可以在任何设备上创建档案，如软盘。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将 几个文件组合成为一个文件以便于网络传输是非常有用的。Linux上的tar是GNU版本的。\n\n　　语法：tar [主选项+辅选项] 文件或者目录\n\n　　使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。\n\n　　主选项：\n\n　　c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。\n\n　　r 把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。\n\n　　t 列出档案文件的内容，查看已经备份了哪些文件。\n\n　　u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。\n\n　　x 从档案文件中释放文件。\n\n　　辅助选项：\n\n　　b 该选项是为磁带机设定的。其后跟一数字，用来说明区块的大小，系统预设值为20(20*512 bytes)。\n\n　　f 使用档案文件或设备，这个选项通常是必选的。\n\n　　k 保存已经存在的文件。例如我们把某个文件还原，在还原的过程中，遇到相同的文件，不会进行覆盖。\n\n　　m 在还原文件时，把所有文件的修改时间设定为现在。\n\n　　M 创建多卷的档案文件，以便在几个磁盘中存放。\n\n　　v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。\n\n　　w 每一步都要求确认。\n\n　　z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。\n\n　　Linux下的压缩文件剖析\n\n　　对于刚刚接触Linux的人来说，一定会给Linux下一大堆各式各样的文件名给搞晕。别个不说，单单就压缩文件为例，我们知道在Windows下最常见 的压缩文件就只有两种，一是,zip，另一个是.rap。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的 压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些 常见的压缩文件进行一番小结，希望你下次遇到这些文件时不至于被搞晕。\n\n　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压 缩算法变成一个小文件。为什么要区分这两个概念呢?其实这源于Linux中的很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就 得先借助另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。\n\nLinux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩了，所以首先就来讲讲tar命令的基本用法：\n\n　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面来举例说明一下：\n\n　　# tar -cf all.tar *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\n\n　　# tar -rf all.tar *.gif\n\n　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\n\n　　# tar -uf all.tar logo.gif\n\n　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n　　# tar -tf all.tar\n\n　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n　　# tar -xf all.tar\n\n　　这条命令是解出all.tar包中所有文件，-t是解开的意思\n\n　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压缩程序，比如调用gzip、bzip2等。\n\n　　1) tar调用gzip\n\n　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下：\n\n　　# tar -czf all.tar.gz *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包，包名为all.tar.gz\n\n　　# tar -xzf all.tar.gz\n\n　　这条命令是将上面产生的包解开。\n\n　　2) tar调用bzip2\n\n　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例说明一下：\n\n　　# tar -cjf all.tar.bz2 *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包，包名为all.tar.bz2\n\n　　# tar -xjf all.tar.bz2\n\n　　这条命令是将上面产生的包解开。\n\n　　3)tar调用compress\n\n　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress。tar中使用-Z这个参数来调用gzip。下面来举例说明一下：\n\n　　# tar -cZf all.tar.Z *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包，包名为all.tar.Z\n\n　　# tar -xZf all.tar.Z\n\n　　这条命令是将上面产生的包解开\n\n　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文件作一个小结：\n\n　　1)对于.tar结尾的文件\n\n　　tar -xf all.tar\n\n　　2)对于.gz结尾的文件\n\n　　gzip -d all.gz\n\n　　gunzip all.gz\n\n　　3)对于.tgz或.tar.gz结尾的文件\n\n　　tar -xzf all.tar.gz\n\n　　tar -xzf all.tgz\n\n　　4)对于.bz2结尾的文件\n\n　　bzip2 -d all.bz2\n\n　　bunzip2 all.bz2\n\n　　5)对于tar.bz2结尾的文件\n\n　　tar -xjf all.tar.bz2\n\n　　6)对于.Z结尾的文件\n\n　　uncompress all.Z\n\n　　7)对于.tar.Z结尾的文件\n\n　　tar -xZf all.tar.z\n\n　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它们：\n\n　　1)对于.zip\n\n　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n　　# zip all.zip *.jpg\n\n　　这条命令是将所有.jpg的文件压缩成一个zip包\n\n　　# unzip all.zip\n\n　　这条命令是将all.zip中的所有文件解压出来\n\n　　2)对于.rar\n\n　　要在linux下处理.rar文件，需要安装RAR for Linux，可以从网上下载，但要记住，RAR for Linux\n\n　　不是免费的;然后安装：\n\n　　# tar -xzpvf rarlinux-3.2.0.tar.gz\n\n　　# cd rar\n\n　　# make\n\n　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n　　# rar a all *.jpg\n\n　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar 扩展名将自动附加到包名后。\n\n　　# unrar e all.rar\n\n　　这条命令是将all.rar中的所有文件解压出来\n\n　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress、uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦恼了。而且以上方 法对于Unix也基本有效。\n\n本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、 compress、uncompress、zip、unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz、.tar.gz、. tgz、.bz2、.tar.bz2、.Z、.tar.Z、.zip、.rar这10种压缩文件进行操作</code></pre>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Linux下的压缩zip-解压缩unzip命令详解及实例\"><a href=\"#Linux下的压缩zip-解压缩unzip命令详解及实例\" class=\"headerlink\" title=\"Linux下的压缩zip,解压缩unzip命令详解及实例\"></a>Linux下的压缩zip,解压缩unzip命令详解及实例</h2><p>Linux下的压缩解压缩命令详解及实例</p>\n<p>实例：压缩服务器上当前目录的内容为xxx.zip文件</p>\n<p>zip -r xxx.zip ./*</p>\n<h3 id=\"解压zip文件到当前目录\"><a href=\"#解压zip文件到当前目录\" class=\"headerlink\" title=\"解压zip文件到当前目录\"></a>解压zip文件到当前目录</h3><p>unzip filename.zip</p>\n<p>============================</p>\n<p>另：有些服务器没有安装zip包执行不了zip命令，但基本上都可以用tar命令的，实例如下：</p>\n<p>tar -zcvf /home/zdzlibs.tar.gz /home/zdz/java/zdzlibs/</p>\n<p>============================</p>\n<p>linux zip命令</p>\n<p>zip -r myfile.zip ./*<br>将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件.</p>\n<p>2.unzip<br>unzip -o -d /home/sunny myfile.zip<br>把myfile.zip文件解压到 /home/sunny/<br>-o:不提示的情况下覆盖文件；<br>-d:-d /home/sunny 指明将文件解压缩到/home/sunny目录下；</p>\n<p>3.其他<br>zip -d myfile.zip smart.txt<br>删除压缩文件中smart.txt文件<br>zip -m myfile.zip ./rpm_info.txt</p>\n<h2 id=\"向压缩文件中myfile-zip中添加rpm-info-txt文件\"><a href=\"#向压缩文件中myfile-zip中添加rpm-info-txt文件\" class=\"headerlink\" title=\"向压缩文件中myfile.zip中添加rpm_info.txt文件\"></a>向压缩文件中myfile.zip中添加rpm_info.txt文件</h2><p>要使用 zip 来压缩文件，在 shell 提示下键入下面的命令：</p>\n<p>zip -r filename.zip filesdir</p>\n<p>在这个例子里，filename.zip 代表你创建的文件，filesdir 代表你想放置新 zip 文件的目录。-r 选项指定你想递归地（recursively）包括所有包括在 filesdir 目录中的文件。</p>\n<p>要抽取 zip 文件的内容，键入以下命令：</p>\n<p>unzip filename.zip</p>\n<p>你可以使用 zip 命令同时处理多个文件和目录，方法是将它们逐一列出，并用空格间隔：</p>\n<p>zip -r filename.zip file1 file2 file3 /usr/work/school</p>\n<p>上面的命令把 file1、file2、 file3、以及 /usr/work/school 目录的内容（假设这个目录存在）压缩起来，然后放入 filename.zip 文件中。</p>\n<p>tar 命令详解</p>\n<p>　　-c: 建立压缩档案</p>\n<p>　　-x：解压</p>\n<p>　　-t：查看内容</p>\n<p>　　-r：向压缩归档文件末尾追加文件</p>\n<p>　　-u：更新原压缩包中的文件</p>\n<p>　　这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</p>\n<p>　　-c: 建立压缩档案</p>\n<p>　　-x：解压</p>\n<p>　　-t：查看内容</p>\n<p>　　-r：向压缩归档文件末尾追加文件</p>\n<p>　　-u：更新原压缩包中的文件</p>\n<p>　　下面的参数-f是必须的</p>\n<p>　　-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</p>\n<p>　　# tar -cf all.tar *.jpg</p>\n<p>　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。</p>\n<p>　　# tar -rf all.tar *.gif</p>\n<p>　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。</p>\n<p>　　# tar -uf all.tar logo.gif</p>\n<p>　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</p>\n<p>　　# tar -tf all.tar</p>\n<p>　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思</p>\n<p>　　# tar -xf all.tar</p>\n<p>　　这条命令是解出all.tar包中所有文件，-t是解开的意思</p>\n<p>　　压缩</p>\n<p>　　tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg</p>\n<p>　　tar –czf jpg.tar.gz *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</p>\n<p>　　tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</p>\n<p>　　tar –cZf jpg.tar.Z *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</p>\n<p>　　rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux</p>\n<p>　　zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux</p>\n<p>　　解压</p>\n<p>　　tar –xvf file.tar //解压 tar包</p>\n<p>　　tar -xzvf file.tar.gz //解压tar.gz</p>\n<p>　　tar -xjvf file.tar.bz2 //解压 tar.bz2</p>\n<p>　　tar –xZvf file.tar.Z //解压tar.Z</p>\n<p>　　unrar e file.rar //解压rar</p>\n<p>　　unzip file.zip //解压zip</p>\n<p>　　总结</p>\n<p>　　1、*.tar 用 tar –xvf 解压</p>\n<p>　　2、*.gz 用 gzip -d或者gunzip 解压</p>\n<p>　　3、<em>.tar.gz和</em>.tgz 用 tar –xzf 解压</p>\n<p>　　4、*.bz2 用 bzip2 -d或者用bunzip2 解压</p>\n<p>　　5、*.tar.bz2用tar –xjf 解压</p>\n<p>　　6、*.Z 用 uncompress 解压</p>\n<p>　　7、*.tar.Z 用tar –xZf 解压</p>\n<p>　　8、*.rar 用 unrar e解压</p>\n<p>　　9、*.zip 用 unzip 解压</p>\n<p>　　Linux中tar命令详解(转载的资料)</p>\n<p> 　2008年04月17日 星期四 15:37</p>\n<pre><code>　　tar命令\n\n　　tar 可以为文件和目录创建档案。利用tar，用户可以为某一特定文件创建档案(备份文件)，也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被 用来在磁带上创建档案，现在，用户可以在任何设备上创建档案，如软盘。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将 几个文件组合成为一个文件以便于网络传输是非常有用的。Linux上的tar是GNU版本的。\n\n　　语法：tar [主选项+辅选项] 文件或者目录\n\n　　使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。\n\n　　主选项：\n\n　　c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。\n\n　　r 把要存档的文件追加到档案文件的未尾。例如用户已经作好备份文件，又发现还有一个目录或是一些文件忘记备份了，这时可以使用该选项，将忘记的目录或文件追加到备份文件中。\n\n　　t 列出档案文件的内容，查看已经备份了哪些文件。\n\n　　u 更新文件。就是说，用新增的文件取代原备份文件，如果在备份文件中找不到要更新的文件，则把它追加到备份文件的最后。\n\n　　x 从档案文件中释放文件。\n\n　　辅助选项：\n\n　　b 该选项是为磁带机设定的。其后跟一数字，用来说明区块的大小，系统预设值为20(20*512 bytes)。\n\n　　f 使用档案文件或设备，这个选项通常是必选的。\n\n　　k 保存已经存在的文件。例如我们把某个文件还原，在还原的过程中，遇到相同的文件，不会进行覆盖。\n\n　　m 在还原文件时，把所有文件的修改时间设定为现在。\n\n　　M 创建多卷的档案文件，以便在几个磁盘中存放。\n\n　　v 详细报告tar处理的文件信息。如无此选项，tar不报告文件信息。\n\n　　w 每一步都要求确认。\n\n　　z 用gzip来压缩/解压缩文件，加上该选项后可以将档案文件进行压缩，但还原时也一定要使用该选项进行解压缩。\n\n　　Linux下的压缩文件剖析\n\n　　对于刚刚接触Linux的人来说，一定会给Linux下一大堆各式各样的文件名给搞晕。别个不说，单单就压缩文件为例，我们知道在Windows下最常见 的压缩文件就只有两种，一是,zip，另一个是.rap。可是Linux就不同了，它有.gz、.tar.gz、tgz、bz2、.Z、.tar等众多的 压缩文件名，此外windows下的.zip和.rar也可以在Linux下使用，不过在Linux使用.zip和.rar的人就太少了。本文就来对这些 常见的压缩文件进行一番小结，希望你下次遇到这些文件时不至于被搞晕。\n\n　　在具体总结各类压缩文件之前呢，首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压 缩算法变成一个小文件。为什么要区分这两个概念呢?其实这源于Linux中的很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就 得先借助另它的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。\n\nLinux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩了，所以首先就来讲讲tar命令的基本用法：\n\n　　tar命令的选项有很多(用man tar可以查看到)，但常用的就那么几个选项，下面来举例说明一下：\n\n　　# tar -cf all.tar *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。\n\n　　# tar -rf all.tar *.gif\n\n　　这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。\n\n　　# tar -uf all.tar logo.gif\n\n　　这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。\n\n　　# tar -tf all.tar\n\n　　这条命令是列出all.tar包中所有文件，-t是列出文件的意思\n\n　　# tar -xf all.tar\n\n　　这条命令是解出all.tar包中所有文件，-t是解开的意思\n\n　　以上就是tar的最基本的用法。为了方便用户在打包解包的同时可以压缩或解压文件，tar提供了一种特殊的功能。这就是tar可以在打包或解包的同时调用其它的压缩程序，比如调用gzip、bzip2等。\n\n　　1) tar调用gzip\n\n　　gzip是GNU组织开发的一个压缩程序，.gz结尾的文件就是gzip压缩的结果。与gzip相对的解压程序是gunzip。tar中使用-z这个参数来调用gzip。下面来举例说明一下：\n\n　　# tar -czf all.tar.gz *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用gzip压缩，生成一个gzip压缩过的包，包名为all.tar.gz\n\n　　# tar -xzf all.tar.gz\n\n　　这条命令是将上面产生的包解开。\n\n　　2) tar调用bzip2\n\n　　bzip2是一个压缩能力更强的压缩程序，.bz2结尾的文件就是bzip2压缩的结果。与bzip2相对的解压程序是bunzip2。tar中使用-j这个参数来调用gzip。下面来举例说明一下：\n\n　　# tar -cjf all.tar.bz2 *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用bzip2压缩，生成一个bzip2压缩过的包，包名为all.tar.bz2\n\n　　# tar -xjf all.tar.bz2\n\n　　这条命令是将上面产生的包解开。\n\n　　3)tar调用compress\n\n　　compress也是一个压缩程序，但是好象使用compress的人不如gzip和bzip2的人多。.Z结尾的文件就是bzip2压缩的结果。与 compress相对的解压程序是uncompress。tar中使用-Z这个参数来调用gzip。下面来举例说明一下：\n\n　　# tar -cZf all.tar.Z *.jpg\n\n　　这条命令是将所有.jpg的文件打成一个tar包，并且将其用compress压缩，生成一个uncompress压缩过的包，包名为all.tar.Z\n\n　　# tar -xZf all.tar.Z\n\n　　这条命令是将上面产生的包解开\n\n　　有了上面的知识，你应该可以解开多种压缩文件了，下面对于tar系列的压缩文件作一个小结：\n\n　　1)对于.tar结尾的文件\n\n　　tar -xf all.tar\n\n　　2)对于.gz结尾的文件\n\n　　gzip -d all.gz\n\n　　gunzip all.gz\n\n　　3)对于.tgz或.tar.gz结尾的文件\n\n　　tar -xzf all.tar.gz\n\n　　tar -xzf all.tgz\n\n　　4)对于.bz2结尾的文件\n\n　　bzip2 -d all.bz2\n\n　　bunzip2 all.bz2\n\n　　5)对于tar.bz2结尾的文件\n\n　　tar -xjf all.tar.bz2\n\n　　6)对于.Z结尾的文件\n\n　　uncompress all.Z\n\n　　7)对于.tar.Z结尾的文件\n\n　　tar -xZf all.tar.z\n\n　　另外对于Window下的常见压缩文件.zip和.rar，Linux也有相应的方法来解压它们：\n\n　　1)对于.zip\n\n　　linux下提供了zip和unzip程序，zip是压缩程序，unzip是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n　　# zip all.zip *.jpg\n\n　　这条命令是将所有.jpg的文件压缩成一个zip包\n\n　　# unzip all.zip\n\n　　这条命令是将all.zip中的所有文件解压出来\n\n　　2)对于.rar\n\n　　要在linux下处理.rar文件，需要安装RAR for Linux，可以从网上下载，但要记住，RAR for Linux\n\n　　不是免费的;然后安装：\n\n　　# tar -xzpvf rarlinux-3.2.0.tar.gz\n\n　　# cd rar\n\n　　# make\n\n　　这样就安装好了，安装后就有了rar和unrar这两个程序，rar是压缩程序，unrar是解压程序。它们的参数选项很多，这里只做简单介绍，依旧举例说明一下其用法：\n\n　　# rar a all *.jpg\n\n　　这条命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar 扩展名将自动附加到包名后。\n\n　　# unrar e all.rar\n\n　　这条命令是将all.rar中的所有文件解压出来\n\n　到此为至，我们已经介绍过linux下的tar、gzip、gunzip、bzip2、bunzip2、compress、uncompress、 zip、unzip、rar、unrar等程式，你应该已经能够使用它们对.tar、.gz、.tar.gz、.tgz、.bz2、.tar.bz2、. Z、.tar.Z、.zip、.rar这10种压缩文件进行解压了，以后应该不需要为下载了一个软件而不知道如何在Linux下解开而烦恼了。而且以上方 法对于Unix也基本有效。\n\n本文介绍了linux下的压缩程式tar、gzip、gunzip、bzip2、bunzip2、 compress、uncompress、zip、unzip、rar、unrar等程式，以及如何使用它们对.tar、.gz、.tar.gz、. tgz、.bz2、.tar.bz2、.Z、.tar.Z、.zip、.rar这10种压缩文件进行操作</code></pre>"},{"title":"nc_note","date":"2017-11-23T05:39:12.000Z","_content":"","source":"_posts/nc-note.md","raw":"---\ntitle: nc_note\ndate: 2017-11-23 13:39:12\ntags:\n---\n","slug":"nc-note","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zly000r2oi88b778msm","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"linux 学习笔记","date":"2018-01-09T07:39:18.000Z","_content":"iftop: display bandwidth usage on an interface\nhttp://www.ex-parrot.com/pdw/iftop/\n\n\n","source":"_posts/linux-tips.md","raw":"---\ntitle: linux 学习笔记\ndate: 2018-01-09 15:39:18\ntags:\n---\niftop: display bandwidth usage on an interface\nhttp://www.ex-parrot.com/pdw/iftop/\n\n\n","slug":"linux-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zly000s2oi8li3otmqi","content":"<p>iftop: display bandwidth usage on an interface<br><a href=\"http://www.ex-parrot.com/pdw/iftop/\" target=\"_blank\" rel=\"noopener\">http://www.ex-parrot.com/pdw/iftop/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>iftop: display bandwidth usage on an interface<br><a href=\"http://www.ex-parrot.com/pdw/iftop/\" target=\"_blank\" rel=\"noopener\">http://www.ex-parrot.com/pdw/iftop/</a></p>\n"},{"title":"nice websites","date":"2017-12-01T01:17:12.000Z","_content":"\n|名称|网址|描述|超链接|\n|:-:|:-:|:-:|:-:|\n| 广播 | https://syntax.fm | 技术电台 | [链接](https://syntax.fm) |\n| web开发 | https://medium.com | 技术资讯 | [链接](https://medium.com) |\n| css样式 | https://css-tricks.com | css样式 | [链接](https://css-tricks.com) |\n|reddit  | https://www.reddit.com/| Reddit名字是一个双关语：“I read it”。这个理念就是如果你经常地去浏览Reddit，你将不会错过网站任何重要的信息。 | [链接](https://www.reddit.com/) |\n|subredditfinder |subredditfinder.com | 哪些看板是最热门的，哪些是上升最快的，哪些欢迎度是在下降和需要帮助的。| [链接](subredditfinder.com) |\n| css样式 | https://hackernoon.com | css样式 | [链接](https://hackernoon.com) |\n| RFC | https://tools.ietf.org/ | RFC | [链接](https://tools.ietf.org/) |\n| css in javascript 样式 |https://css-in-js-playground.com/| css样式 | [链接](https://css-in-js-playground.com/) |\n| 设计模式 |https://sourcemaking.com/| 设计模式 | [链接](https://sourcemaking.com) |\n|web performance|http://www.perfplanet.com/| News and views from the web performance blogosphere | [链接](http://www.perfplanet.com/) |\n|qt 官网 |http://download.qt.io/archive/qt/| qt的官方网站 | [链接](http://download.qt.io/archive/qt/) |\n|design |http://bradfrost.com/blog/post/atomic-web-design/| 设计design网站 atom | [链接](http://bradfrost.com/blog/post/atomic-web-design/) |\n|掘金 |https://juejin.im/|程序员社区 | [链接](https://juejin.im/) |\n\n\n\n谷歌镜像：https://coderschool.cn/1853.html\n\n\n","source":"_posts/nice-sites.md","raw":"---\ntitle: nice websites\ndate: 2017-12-01 09:17:12\ntags:\n---\n\n|名称|网址|描述|超链接|\n|:-:|:-:|:-:|:-:|\n| 广播 | https://syntax.fm | 技术电台 | [链接](https://syntax.fm) |\n| web开发 | https://medium.com | 技术资讯 | [链接](https://medium.com) |\n| css样式 | https://css-tricks.com | css样式 | [链接](https://css-tricks.com) |\n|reddit  | https://www.reddit.com/| Reddit名字是一个双关语：“I read it”。这个理念就是如果你经常地去浏览Reddit，你将不会错过网站任何重要的信息。 | [链接](https://www.reddit.com/) |\n|subredditfinder |subredditfinder.com | 哪些看板是最热门的，哪些是上升最快的，哪些欢迎度是在下降和需要帮助的。| [链接](subredditfinder.com) |\n| css样式 | https://hackernoon.com | css样式 | [链接](https://hackernoon.com) |\n| RFC | https://tools.ietf.org/ | RFC | [链接](https://tools.ietf.org/) |\n| css in javascript 样式 |https://css-in-js-playground.com/| css样式 | [链接](https://css-in-js-playground.com/) |\n| 设计模式 |https://sourcemaking.com/| 设计模式 | [链接](https://sourcemaking.com) |\n|web performance|http://www.perfplanet.com/| News and views from the web performance blogosphere | [链接](http://www.perfplanet.com/) |\n|qt 官网 |http://download.qt.io/archive/qt/| qt的官方网站 | [链接](http://download.qt.io/archive/qt/) |\n|design |http://bradfrost.com/blog/post/atomic-web-design/| 设计design网站 atom | [链接](http://bradfrost.com/blog/post/atomic-web-design/) |\n|掘金 |https://juejin.im/|程序员社区 | [链接](https://juejin.im/) |\n\n\n\n谷歌镜像：https://coderschool.cn/1853.html\n\n\n","slug":"nice-sites","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zlz000t2oi8byihlsjn","content":"<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">网址</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">超链接</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">广播</td>\n<td align=\"center\"><a href=\"https://syntax.fm\" target=\"_blank\" rel=\"noopener\">https://syntax.fm</a></td>\n<td align=\"center\">技术电台</td>\n<td align=\"center\"><a href=\"https://syntax.fm\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">web开发</td>\n<td align=\"center\"><a href=\"https://medium.com\" target=\"_blank\" rel=\"noopener\">https://medium.com</a></td>\n<td align=\"center\">技术资讯</td>\n<td align=\"center\"><a href=\"https://medium.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://css-tricks.com\" target=\"_blank\" rel=\"noopener\">https://css-tricks.com</a></td>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://css-tricks.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">reddit</td>\n<td align=\"center\"><a href=\"https://www.reddit.com/\" target=\"_blank\" rel=\"noopener\">https://www.reddit.com/</a></td>\n<td align=\"center\">Reddit名字是一个双关语：“I read it”。这个理念就是如果你经常地去浏览Reddit，你将不会错过网站任何重要的信息。</td>\n<td align=\"center\"><a href=\"https://www.reddit.com/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">subredditfinder</td>\n<td align=\"center\">subredditfinder.com</td>\n<td align=\"center\">哪些看板是最热门的，哪些是上升最快的，哪些欢迎度是在下降和需要帮助的。</td>\n<td align=\"center\"><a href=\"subredditfinder.com\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://hackernoon.com\" target=\"_blank\" rel=\"noopener\">https://hackernoon.com</a></td>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://hackernoon.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">RFC</td>\n<td align=\"center\"><a href=\"https://tools.ietf.org/\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/</a></td>\n<td align=\"center\">RFC</td>\n<td align=\"center\"><a href=\"https://tools.ietf.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css in javascript 样式</td>\n<td align=\"center\"><a href=\"https://css-in-js-playground.com/\" target=\"_blank\" rel=\"noopener\">https://css-in-js-playground.com/</a></td>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://css-in-js-playground.com/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">设计模式</td>\n<td align=\"center\"><a href=\"https://sourcemaking.com/\" target=\"_blank\" rel=\"noopener\">https://sourcemaking.com/</a></td>\n<td align=\"center\">设计模式</td>\n<td align=\"center\"><a href=\"https://sourcemaking.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">web performance</td>\n<td align=\"center\"><a href=\"http://www.perfplanet.com/\" target=\"_blank\" rel=\"noopener\">http://www.perfplanet.com/</a></td>\n<td align=\"center\">News and views from the web performance blogosphere</td>\n<td align=\"center\"><a href=\"http://www.perfplanet.com/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">qt 官网</td>\n<td align=\"center\"><a href=\"http://download.qt.io/archive/qt/\" target=\"_blank\" rel=\"noopener\">http://download.qt.io/archive/qt/</a></td>\n<td align=\"center\">qt的官方网站</td>\n<td align=\"center\"><a href=\"http://download.qt.io/archive/qt/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">design</td>\n<td align=\"center\"><a href=\"http://bradfrost.com/blog/post/atomic-web-design/\" target=\"_blank\" rel=\"noopener\">http://bradfrost.com/blog/post/atomic-web-design/</a></td>\n<td align=\"center\">设计design网站 atom</td>\n<td align=\"center\"><a href=\"http://bradfrost.com/blog/post/atomic-web-design/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">掘金</td>\n<td align=\"center\"><a href=\"https://juejin.im/\" target=\"_blank\" rel=\"noopener\">https://juejin.im/</a></td>\n<td align=\"center\">程序员社区</td>\n<td align=\"center\"><a href=\"https://juejin.im/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n</tbody></table>\n<p>谷歌镜像：<a href=\"https://coderschool.cn/1853.html\" target=\"_blank\" rel=\"noopener\">https://coderschool.cn/1853.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">网址</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">超链接</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">广播</td>\n<td align=\"center\"><a href=\"https://syntax.fm\" target=\"_blank\" rel=\"noopener\">https://syntax.fm</a></td>\n<td align=\"center\">技术电台</td>\n<td align=\"center\"><a href=\"https://syntax.fm\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">web开发</td>\n<td align=\"center\"><a href=\"https://medium.com\" target=\"_blank\" rel=\"noopener\">https://medium.com</a></td>\n<td align=\"center\">技术资讯</td>\n<td align=\"center\"><a href=\"https://medium.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://css-tricks.com\" target=\"_blank\" rel=\"noopener\">https://css-tricks.com</a></td>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://css-tricks.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">reddit</td>\n<td align=\"center\"><a href=\"https://www.reddit.com/\" target=\"_blank\" rel=\"noopener\">https://www.reddit.com/</a></td>\n<td align=\"center\">Reddit名字是一个双关语：“I read it”。这个理念就是如果你经常地去浏览Reddit，你将不会错过网站任何重要的信息。</td>\n<td align=\"center\"><a href=\"https://www.reddit.com/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">subredditfinder</td>\n<td align=\"center\">subredditfinder.com</td>\n<td align=\"center\">哪些看板是最热门的，哪些是上升最快的，哪些欢迎度是在下降和需要帮助的。</td>\n<td align=\"center\"><a href=\"subredditfinder.com\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://hackernoon.com\" target=\"_blank\" rel=\"noopener\">https://hackernoon.com</a></td>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://hackernoon.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">RFC</td>\n<td align=\"center\"><a href=\"https://tools.ietf.org/\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/</a></td>\n<td align=\"center\">RFC</td>\n<td align=\"center\"><a href=\"https://tools.ietf.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css in javascript 样式</td>\n<td align=\"center\"><a href=\"https://css-in-js-playground.com/\" target=\"_blank\" rel=\"noopener\">https://css-in-js-playground.com/</a></td>\n<td align=\"center\">css样式</td>\n<td align=\"center\"><a href=\"https://css-in-js-playground.com/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">设计模式</td>\n<td align=\"center\"><a href=\"https://sourcemaking.com/\" target=\"_blank\" rel=\"noopener\">https://sourcemaking.com/</a></td>\n<td align=\"center\">设计模式</td>\n<td align=\"center\"><a href=\"https://sourcemaking.com\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">web performance</td>\n<td align=\"center\"><a href=\"http://www.perfplanet.com/\" target=\"_blank\" rel=\"noopener\">http://www.perfplanet.com/</a></td>\n<td align=\"center\">News and views from the web performance blogosphere</td>\n<td align=\"center\"><a href=\"http://www.perfplanet.com/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">qt 官网</td>\n<td align=\"center\"><a href=\"http://download.qt.io/archive/qt/\" target=\"_blank\" rel=\"noopener\">http://download.qt.io/archive/qt/</a></td>\n<td align=\"center\">qt的官方网站</td>\n<td align=\"center\"><a href=\"http://download.qt.io/archive/qt/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">design</td>\n<td align=\"center\"><a href=\"http://bradfrost.com/blog/post/atomic-web-design/\" target=\"_blank\" rel=\"noopener\">http://bradfrost.com/blog/post/atomic-web-design/</a></td>\n<td align=\"center\">设计design网站 atom</td>\n<td align=\"center\"><a href=\"http://bradfrost.com/blog/post/atomic-web-design/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">掘金</td>\n<td align=\"center\"><a href=\"https://juejin.im/\" target=\"_blank\" rel=\"noopener\">https://juejin.im/</a></td>\n<td align=\"center\">程序员社区</td>\n<td align=\"center\"><a href=\"https://juejin.im/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n</tbody></table>\n<p>谷歌镜像：<a href=\"https://coderschool.cn/1853.html\" target=\"_blank\" rel=\"noopener\">https://coderschool.cn/1853.html</a></p>\n"},{"title":"前端应关注的网站(集合)","date":"2017-07-31T03:55:38.000Z","_content":"\n## 网址\n\n1. chriscoyier\n\thttps://chriscoyier.net/blog/\n2. paulirish\n\thttps://www.paulirish.com/  已经有一段时间没更新了\n3. shoptalkshow   播客\n\thttp://shoptalkshow.com/\n4. codrops\n\thttps://tympanus.net/codrops/\n5. css-tricks\n\thttps://css-tricks.com/\n6. web-design-weekly\n\thttps://web-design-weekly.com/\n7. sidebar\n\thttps://sidebar.io/\n8. responsivedesignweekly\n\thttp://responsivedesignweekly.com/\n9. javascriptweekly\n\thttp://javascriptweekly.com/\n10. frontendfoci (适合手机浏览) \n\thttps://frontendfoc.us/\n11. css-weekly\n\thttp://css-weekly.com/\n\n\n","source":"_posts/nice_front_sites20170731.md","raw":"---\ntitle: 前端应关注的网站(集合)\ndate: 2017-07-31 11:55:38\ntags:\n---\n\n## 网址\n\n1. chriscoyier\n\thttps://chriscoyier.net/blog/\n2. paulirish\n\thttps://www.paulirish.com/  已经有一段时间没更新了\n3. shoptalkshow   播客\n\thttp://shoptalkshow.com/\n4. codrops\n\thttps://tympanus.net/codrops/\n5. css-tricks\n\thttps://css-tricks.com/\n6. web-design-weekly\n\thttps://web-design-weekly.com/\n7. sidebar\n\thttps://sidebar.io/\n8. responsivedesignweekly\n\thttp://responsivedesignweekly.com/\n9. javascriptweekly\n\thttp://javascriptweekly.com/\n10. frontendfoci (适合手机浏览) \n\thttps://frontendfoc.us/\n11. css-weekly\n\thttp://css-weekly.com/\n\n\n","slug":"nice_front_sites20170731","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm0000u2oi80nyqumlq","content":"<h2 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h2><ol>\n<li>chriscoyier<br> <a href=\"https://chriscoyier.net/blog/\" target=\"_blank\" rel=\"noopener\">https://chriscoyier.net/blog/</a></li>\n<li>paulirish<br> <a href=\"https://www.paulirish.com/\" target=\"_blank\" rel=\"noopener\">https://www.paulirish.com/</a>  已经有一段时间没更新了</li>\n<li>shoptalkshow   播客<br> <a href=\"http://shoptalkshow.com/\" target=\"_blank\" rel=\"noopener\">http://shoptalkshow.com/</a></li>\n<li>codrops<br> <a href=\"https://tympanus.net/codrops/\" target=\"_blank\" rel=\"noopener\">https://tympanus.net/codrops/</a></li>\n<li>css-tricks<br> <a href=\"https://css-tricks.com/\" target=\"_blank\" rel=\"noopener\">https://css-tricks.com/</a></li>\n<li>web-design-weekly<br> <a href=\"https://web-design-weekly.com/\" target=\"_blank\" rel=\"noopener\">https://web-design-weekly.com/</a></li>\n<li>sidebar<br> <a href=\"https://sidebar.io/\" target=\"_blank\" rel=\"noopener\">https://sidebar.io/</a></li>\n<li>responsivedesignweekly<br> <a href=\"http://responsivedesignweekly.com/\" target=\"_blank\" rel=\"noopener\">http://responsivedesignweekly.com/</a></li>\n<li>javascriptweekly<br> <a href=\"http://javascriptweekly.com/\" target=\"_blank\" rel=\"noopener\">http://javascriptweekly.com/</a></li>\n<li>frontendfoci (适合手机浏览)<br><a href=\"https://frontendfoc.us/\" target=\"_blank\" rel=\"noopener\">https://frontendfoc.us/</a></li>\n<li>css-weekly<br><a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">http://css-weekly.com/</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"网址\"><a href=\"#网址\" class=\"headerlink\" title=\"网址\"></a>网址</h2><ol>\n<li>chriscoyier<br> <a href=\"https://chriscoyier.net/blog/\" target=\"_blank\" rel=\"noopener\">https://chriscoyier.net/blog/</a></li>\n<li>paulirish<br> <a href=\"https://www.paulirish.com/\" target=\"_blank\" rel=\"noopener\">https://www.paulirish.com/</a>  已经有一段时间没更新了</li>\n<li>shoptalkshow   播客<br> <a href=\"http://shoptalkshow.com/\" target=\"_blank\" rel=\"noopener\">http://shoptalkshow.com/</a></li>\n<li>codrops<br> <a href=\"https://tympanus.net/codrops/\" target=\"_blank\" rel=\"noopener\">https://tympanus.net/codrops/</a></li>\n<li>css-tricks<br> <a href=\"https://css-tricks.com/\" target=\"_blank\" rel=\"noopener\">https://css-tricks.com/</a></li>\n<li>web-design-weekly<br> <a href=\"https://web-design-weekly.com/\" target=\"_blank\" rel=\"noopener\">https://web-design-weekly.com/</a></li>\n<li>sidebar<br> <a href=\"https://sidebar.io/\" target=\"_blank\" rel=\"noopener\">https://sidebar.io/</a></li>\n<li>responsivedesignweekly<br> <a href=\"http://responsivedesignweekly.com/\" target=\"_blank\" rel=\"noopener\">http://responsivedesignweekly.com/</a></li>\n<li>javascriptweekly<br> <a href=\"http://javascriptweekly.com/\" target=\"_blank\" rel=\"noopener\">http://javascriptweekly.com/</a></li>\n<li>frontendfoci (适合手机浏览)<br><a href=\"https://frontendfoc.us/\" target=\"_blank\" rel=\"noopener\">https://frontendfoc.us/</a></li>\n<li>css-weekly<br><a href=\"http://css-weekly.com/\" target=\"_blank\" rel=\"noopener\">http://css-weekly.com/</a></li>\n</ol>\n"},{"title":"页面卡顿优化","date":"2018-02-25T08:12:01.000Z","update":null,"_content":"\n最近做项目时遇到了页面加载卡顿问题，一时没有头绪，感到无从下手，看到这篇文章，所以整体梳理了一下，在此记录。\n\n在富客户端网页应用中，界面上的UI的更改是通过DOM操作实现的。\n\n尽管DOM提供了丰富接口供外部调用，但是dom操作的代价很高，\n\n页面前端代码的性能瓶颈大多集中在DOM操作上，因此，前端性能优化的\n\n一个主要的关注点是dom操作的优化，因此我们可以想办法通过尽量减少\n\nDOM操作来优化性能。\n\n首先，DOM操作为什么会影响性能。在浏览器中，DOM的实现和ECMAScript\n\n的实现是分离的。例如，在IE中，ECMAScript的实现在jscript.dll中，而DOM的\n\n实现在mshtml.dll中；在chrome中使用webkit的WebCore处理DOM和渲染，但\n\nECMAScript是在V8引擎中实现的，其他浏览器的情况类似，所以通过Javascript\n\n调用dom接口，是相当于两个模块的交互。相比较在同一模块中的调用，这种跨模块的\n\n调用其性能损耗是很高的，但DOM操作对性能影响最大是因为它导致了浏览器的重绘\n\n和重排。\n\n浏览器渲染原理的简单说明\n\n从下载文档到渲染页面的过程中，浏览器会通过解析HTML文档来构建DOM树，解析\n\nCSS产生CSS规则树。javascript在代码解析的过程中，可能会修改生成的dom树\n\n和css规则树，之后根据dom树和css规则树构建渲染树，在这个过程中css会根据\n\n选择器匹配HTML元素。渲染树包括了每个元素的大小，边距等样式属性。渲染树\n\n中不包含隐藏元素及head元素等不可见元素。最后浏览器根据元素的坐标和大小\n\n来计算每个元素的位置，并绘制这些元素到页面上。重绘指的是元素的位置或尺寸\n\n发生了改变，浏览器会重新绘制页面上受影响的元素，重排的代价高于重绘。\n\n之下的DOM操作会导致重绘或重排：\n\n1.增加，删除和修改可见DOM元素\n\n2. 页面初始化的渲染\n\n3.移动dom元素\n\n4.修改css样式，改变dom元素的尺寸\n\n5.dom元素内容改变，使得尺寸被撑大\n\n6.浏览器窗口尺寸改变\n\n7.浏览器窗口滚动\n\n现代浏览器会针对重排或重绘做性能优化，例如，把DOM操作积累一批后统一\n\n做一次重排或重绘，但在有些情况下，浏览器会立即进行重排或重绘，比如请求如下的\n\ndom元素布局信息\n\noffsetTop/Left/Width/Height\n\nscrollTop/Left/Width/Height\n\nclientTop/Left/Width/Height\n\ngetComputeStyle()或currentStyle\n\n因为这些值都是动态计算的，所以浏览器需尽快完成页面绘制，计算返回值，打乱了重绘或\n\n重排优化。\n\n可以遵循一些最佳实践来降低影响-->\n\n方法一：合并多此dom操作为单次dom操作\n\n通过class类名来元素的大量样式更改，代码维护性较好。\n\n通过innerHTML接口来修改DOM元素的内容时，以字符串方式拼接好代码后，一次性赋值给\n\nDOM元素的innerHTML接口。\n\n方法二： 把DOM元素离线或隐藏后修改\n\n把元素从页面流中脱离或隐藏，这样处理后，只会在DOM元素脱离或添加时，或者是隐藏或显示时才会造成页面的重绘会重排，对脱离了页面布局的DOM元素操作就不会导致页面的性能问题。\n\n这种方式适合需要大批量修改dom元素的情况。具体方式由三种：\n\n(1) 使用文档片段\n\n文档片段是一个轻量级的document对象，并不会和特定的页面关联，通过在文档片段上进行DOM操作，可以降低DOM操作对页面性能的影响，这种方式是创建一个文档片段，并在此片段上\n\n进行必要的DOM操作，操作完成后将它附加在页面中，对页面的影响只存在于最后把文档片段附加到页面的这一步操作上。\n\nvar fragment=document.createDocumentFragment();\n\n//一些基于fragment的大量dom操作\n\n...\n\ndocument.getElementById('myElement').appendChild(fragment);\n\n(2)隐藏元素\n\n通过隐藏元素，达到在页面上移除元素的效果，经过大量的DOM操作后恢复元素原来的display样式，只有隐藏和显示元素时会引起页面重绘或重排操作。\n\nvar myElement=document.getElementById('myElement')；\nmyElement.style.display='none';\n\n//dom操作\n\nmyElement.style.display='block';\n\n(3)克隆DOM元素到内存中\n\n把页面上的DOM元素克隆一份到内存中，然后在内存中操作克隆的元素，操作完成后使用此克隆元素替换页面中原来的DOM元素，只有替换元素时会影响性能,在内存中操作克隆元素不会引起页面上的性能损耗。\n\nvar old=document.getElementById('myElement');\n\nvar clone=old.cloneNode(true);\n\n//dom操作\n\nold.parentNode.replaceChild(clone,old);\n\n3.设置具有动画效果的DOM元素的position属性为fixed或absolute\n\n把页面中具有动画效果的元素设置为绝对定位，使得元素脱离页面布局流，从未避免了页面频繁的重排，只涉及动画元素自身的重排。这种做法可以提高动画效果的展示性能。(在动画开始时将其设置为绝对定位，等动画结束后恢复原始的定位设置)。\n\n4.谨慎获得dom元素的布局信息，变量本地化。\n\n把获取到的元素的布局信息值缓存在局部变量中。在有大量的DOM操作时，避免获取dom元素的布局信息，如果需要布局信息，最好在DOM操作之前就取好存放。\n\n5.使用事件托管方式绑定事件\n\n在DOM元素上绑定事件或影响页面的性能，一方面，绑定事件本身会占用处理时间，另一方面，浏览器保存事件绑定也会占用内存。使用事件托管方式，即利用事件冒泡机制，只在父元素上绑定事件处理，用于处理所有子元素的事件，在事件处理函数中根据传入的参数判断事件源元素，针对不同的元素做不同的处理。这种方式有很大的灵活性，可以方便的添加或删除子元素，不需要考虑因元素移除或添加需要修改事件绑定。\n\n\n","source":"_posts/pageoptimization.md","raw":"---\ntitle: 页面卡顿优化\ndate: 2018-02-25 16:12:01\nupdate:\ntags:\n---\n\n最近做项目时遇到了页面加载卡顿问题，一时没有头绪，感到无从下手，看到这篇文章，所以整体梳理了一下，在此记录。\n\n在富客户端网页应用中，界面上的UI的更改是通过DOM操作实现的。\n\n尽管DOM提供了丰富接口供外部调用，但是dom操作的代价很高，\n\n页面前端代码的性能瓶颈大多集中在DOM操作上，因此，前端性能优化的\n\n一个主要的关注点是dom操作的优化，因此我们可以想办法通过尽量减少\n\nDOM操作来优化性能。\n\n首先，DOM操作为什么会影响性能。在浏览器中，DOM的实现和ECMAScript\n\n的实现是分离的。例如，在IE中，ECMAScript的实现在jscript.dll中，而DOM的\n\n实现在mshtml.dll中；在chrome中使用webkit的WebCore处理DOM和渲染，但\n\nECMAScript是在V8引擎中实现的，其他浏览器的情况类似，所以通过Javascript\n\n调用dom接口，是相当于两个模块的交互。相比较在同一模块中的调用，这种跨模块的\n\n调用其性能损耗是很高的，但DOM操作对性能影响最大是因为它导致了浏览器的重绘\n\n和重排。\n\n浏览器渲染原理的简单说明\n\n从下载文档到渲染页面的过程中，浏览器会通过解析HTML文档来构建DOM树，解析\n\nCSS产生CSS规则树。javascript在代码解析的过程中，可能会修改生成的dom树\n\n和css规则树，之后根据dom树和css规则树构建渲染树，在这个过程中css会根据\n\n选择器匹配HTML元素。渲染树包括了每个元素的大小，边距等样式属性。渲染树\n\n中不包含隐藏元素及head元素等不可见元素。最后浏览器根据元素的坐标和大小\n\n来计算每个元素的位置，并绘制这些元素到页面上。重绘指的是元素的位置或尺寸\n\n发生了改变，浏览器会重新绘制页面上受影响的元素，重排的代价高于重绘。\n\n之下的DOM操作会导致重绘或重排：\n\n1.增加，删除和修改可见DOM元素\n\n2. 页面初始化的渲染\n\n3.移动dom元素\n\n4.修改css样式，改变dom元素的尺寸\n\n5.dom元素内容改变，使得尺寸被撑大\n\n6.浏览器窗口尺寸改变\n\n7.浏览器窗口滚动\n\n现代浏览器会针对重排或重绘做性能优化，例如，把DOM操作积累一批后统一\n\n做一次重排或重绘，但在有些情况下，浏览器会立即进行重排或重绘，比如请求如下的\n\ndom元素布局信息\n\noffsetTop/Left/Width/Height\n\nscrollTop/Left/Width/Height\n\nclientTop/Left/Width/Height\n\ngetComputeStyle()或currentStyle\n\n因为这些值都是动态计算的，所以浏览器需尽快完成页面绘制，计算返回值，打乱了重绘或\n\n重排优化。\n\n可以遵循一些最佳实践来降低影响-->\n\n方法一：合并多此dom操作为单次dom操作\n\n通过class类名来元素的大量样式更改，代码维护性较好。\n\n通过innerHTML接口来修改DOM元素的内容时，以字符串方式拼接好代码后，一次性赋值给\n\nDOM元素的innerHTML接口。\n\n方法二： 把DOM元素离线或隐藏后修改\n\n把元素从页面流中脱离或隐藏，这样处理后，只会在DOM元素脱离或添加时，或者是隐藏或显示时才会造成页面的重绘会重排，对脱离了页面布局的DOM元素操作就不会导致页面的性能问题。\n\n这种方式适合需要大批量修改dom元素的情况。具体方式由三种：\n\n(1) 使用文档片段\n\n文档片段是一个轻量级的document对象，并不会和特定的页面关联，通过在文档片段上进行DOM操作，可以降低DOM操作对页面性能的影响，这种方式是创建一个文档片段，并在此片段上\n\n进行必要的DOM操作，操作完成后将它附加在页面中，对页面的影响只存在于最后把文档片段附加到页面的这一步操作上。\n\nvar fragment=document.createDocumentFragment();\n\n//一些基于fragment的大量dom操作\n\n...\n\ndocument.getElementById('myElement').appendChild(fragment);\n\n(2)隐藏元素\n\n通过隐藏元素，达到在页面上移除元素的效果，经过大量的DOM操作后恢复元素原来的display样式，只有隐藏和显示元素时会引起页面重绘或重排操作。\n\nvar myElement=document.getElementById('myElement')；\nmyElement.style.display='none';\n\n//dom操作\n\nmyElement.style.display='block';\n\n(3)克隆DOM元素到内存中\n\n把页面上的DOM元素克隆一份到内存中，然后在内存中操作克隆的元素，操作完成后使用此克隆元素替换页面中原来的DOM元素，只有替换元素时会影响性能,在内存中操作克隆元素不会引起页面上的性能损耗。\n\nvar old=document.getElementById('myElement');\n\nvar clone=old.cloneNode(true);\n\n//dom操作\n\nold.parentNode.replaceChild(clone,old);\n\n3.设置具有动画效果的DOM元素的position属性为fixed或absolute\n\n把页面中具有动画效果的元素设置为绝对定位，使得元素脱离页面布局流，从未避免了页面频繁的重排，只涉及动画元素自身的重排。这种做法可以提高动画效果的展示性能。(在动画开始时将其设置为绝对定位，等动画结束后恢复原始的定位设置)。\n\n4.谨慎获得dom元素的布局信息，变量本地化。\n\n把获取到的元素的布局信息值缓存在局部变量中。在有大量的DOM操作时，避免获取dom元素的布局信息，如果需要布局信息，最好在DOM操作之前就取好存放。\n\n5.使用事件托管方式绑定事件\n\n在DOM元素上绑定事件或影响页面的性能，一方面，绑定事件本身会占用处理时间，另一方面，浏览器保存事件绑定也会占用内存。使用事件托管方式，即利用事件冒泡机制，只在父元素上绑定事件处理，用于处理所有子元素的事件，在事件处理函数中根据传入的参数判断事件源元素，针对不同的元素做不同的处理。这种方式有很大的灵活性，可以方便的添加或删除子元素，不需要考虑因元素移除或添加需要修改事件绑定。\n\n\n","slug":"pageoptimization","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm1000v2oi8jjjfzd19","content":"<p>最近做项目时遇到了页面加载卡顿问题，一时没有头绪，感到无从下手，看到这篇文章，所以整体梳理了一下，在此记录。</p>\n<p>在富客户端网页应用中，界面上的UI的更改是通过DOM操作实现的。</p>\n<p>尽管DOM提供了丰富接口供外部调用，但是dom操作的代价很高，</p>\n<p>页面前端代码的性能瓶颈大多集中在DOM操作上，因此，前端性能优化的</p>\n<p>一个主要的关注点是dom操作的优化，因此我们可以想办法通过尽量减少</p>\n<p>DOM操作来优化性能。</p>\n<p>首先，DOM操作为什么会影响性能。在浏览器中，DOM的实现和ECMAScript</p>\n<p>的实现是分离的。例如，在IE中，ECMAScript的实现在jscript.dll中，而DOM的</p>\n<p>实现在mshtml.dll中；在chrome中使用webkit的WebCore处理DOM和渲染，但</p>\n<p>ECMAScript是在V8引擎中实现的，其他浏览器的情况类似，所以通过Javascript</p>\n<p>调用dom接口，是相当于两个模块的交互。相比较在同一模块中的调用，这种跨模块的</p>\n<p>调用其性能损耗是很高的，但DOM操作对性能影响最大是因为它导致了浏览器的重绘</p>\n<p>和重排。</p>\n<p>浏览器渲染原理的简单说明</p>\n<p>从下载文档到渲染页面的过程中，浏览器会通过解析HTML文档来构建DOM树，解析</p>\n<p>CSS产生CSS规则树。javascript在代码解析的过程中，可能会修改生成的dom树</p>\n<p>和css规则树，之后根据dom树和css规则树构建渲染树，在这个过程中css会根据</p>\n<p>选择器匹配HTML元素。渲染树包括了每个元素的大小，边距等样式属性。渲染树</p>\n<p>中不包含隐藏元素及head元素等不可见元素。最后浏览器根据元素的坐标和大小</p>\n<p>来计算每个元素的位置，并绘制这些元素到页面上。重绘指的是元素的位置或尺寸</p>\n<p>发生了改变，浏览器会重新绘制页面上受影响的元素，重排的代价高于重绘。</p>\n<p>之下的DOM操作会导致重绘或重排：</p>\n<p>1.增加，删除和修改可见DOM元素</p>\n<ol start=\"2\">\n<li>页面初始化的渲染</li>\n</ol>\n<p>3.移动dom元素</p>\n<p>4.修改css样式，改变dom元素的尺寸</p>\n<p>5.dom元素内容改变，使得尺寸被撑大</p>\n<p>6.浏览器窗口尺寸改变</p>\n<p>7.浏览器窗口滚动</p>\n<p>现代浏览器会针对重排或重绘做性能优化，例如，把DOM操作积累一批后统一</p>\n<p>做一次重排或重绘，但在有些情况下，浏览器会立即进行重排或重绘，比如请求如下的</p>\n<p>dom元素布局信息</p>\n<p>offsetTop/Left/Width/Height</p>\n<p>scrollTop/Left/Width/Height</p>\n<p>clientTop/Left/Width/Height</p>\n<p>getComputeStyle()或currentStyle</p>\n<p>因为这些值都是动态计算的，所以浏览器需尽快完成页面绘制，计算返回值，打乱了重绘或</p>\n<p>重排优化。</p>\n<p>可以遵循一些最佳实践来降低影响–&gt;</p>\n<p>方法一：合并多此dom操作为单次dom操作</p>\n<p>通过class类名来元素的大量样式更改，代码维护性较好。</p>\n<p>通过innerHTML接口来修改DOM元素的内容时，以字符串方式拼接好代码后，一次性赋值给</p>\n<p>DOM元素的innerHTML接口。</p>\n<p>方法二： 把DOM元素离线或隐藏后修改</p>\n<p>把元素从页面流中脱离或隐藏，这样处理后，只会在DOM元素脱离或添加时，或者是隐藏或显示时才会造成页面的重绘会重排，对脱离了页面布局的DOM元素操作就不会导致页面的性能问题。</p>\n<p>这种方式适合需要大批量修改dom元素的情况。具体方式由三种：</p>\n<p>(1) 使用文档片段</p>\n<p>文档片段是一个轻量级的document对象，并不会和特定的页面关联，通过在文档片段上进行DOM操作，可以降低DOM操作对页面性能的影响，这种方式是创建一个文档片段，并在此片段上</p>\n<p>进行必要的DOM操作，操作完成后将它附加在页面中，对页面的影响只存在于最后把文档片段附加到页面的这一步操作上。</p>\n<p>var fragment=document.createDocumentFragment();</p>\n<p>//一些基于fragment的大量dom操作</p>\n<p>…</p>\n<p>document.getElementById(‘myElement’).appendChild(fragment);</p>\n<p>(2)隐藏元素</p>\n<p>通过隐藏元素，达到在页面上移除元素的效果，经过大量的DOM操作后恢复元素原来的display样式，只有隐藏和显示元素时会引起页面重绘或重排操作。</p>\n<p>var myElement=document.getElementById(‘myElement’)；<br>myElement.style.display=’none’;</p>\n<p>//dom操作</p>\n<p>myElement.style.display=’block’;</p>\n<p>(3)克隆DOM元素到内存中</p>\n<p>把页面上的DOM元素克隆一份到内存中，然后在内存中操作克隆的元素，操作完成后使用此克隆元素替换页面中原来的DOM元素，只有替换元素时会影响性能,在内存中操作克隆元素不会引起页面上的性能损耗。</p>\n<p>var old=document.getElementById(‘myElement’);</p>\n<p>var clone=old.cloneNode(true);</p>\n<p>//dom操作</p>\n<p>old.parentNode.replaceChild(clone,old);</p>\n<p>3.设置具有动画效果的DOM元素的position属性为fixed或absolute</p>\n<p>把页面中具有动画效果的元素设置为绝对定位，使得元素脱离页面布局流，从未避免了页面频繁的重排，只涉及动画元素自身的重排。这种做法可以提高动画效果的展示性能。(在动画开始时将其设置为绝对定位，等动画结束后恢复原始的定位设置)。</p>\n<p>4.谨慎获得dom元素的布局信息，变量本地化。</p>\n<p>把获取到的元素的布局信息值缓存在局部变量中。在有大量的DOM操作时，避免获取dom元素的布局信息，如果需要布局信息，最好在DOM操作之前就取好存放。</p>\n<p>5.使用事件托管方式绑定事件</p>\n<p>在DOM元素上绑定事件或影响页面的性能，一方面，绑定事件本身会占用处理时间，另一方面，浏览器保存事件绑定也会占用内存。使用事件托管方式，即利用事件冒泡机制，只在父元素上绑定事件处理，用于处理所有子元素的事件，在事件处理函数中根据传入的参数判断事件源元素，针对不同的元素做不同的处理。这种方式有很大的灵活性，可以方便的添加或删除子元素，不需要考虑因元素移除或添加需要修改事件绑定。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近做项目时遇到了页面加载卡顿问题，一时没有头绪，感到无从下手，看到这篇文章，所以整体梳理了一下，在此记录。</p>\n<p>在富客户端网页应用中，界面上的UI的更改是通过DOM操作实现的。</p>\n<p>尽管DOM提供了丰富接口供外部调用，但是dom操作的代价很高，</p>\n<p>页面前端代码的性能瓶颈大多集中在DOM操作上，因此，前端性能优化的</p>\n<p>一个主要的关注点是dom操作的优化，因此我们可以想办法通过尽量减少</p>\n<p>DOM操作来优化性能。</p>\n<p>首先，DOM操作为什么会影响性能。在浏览器中，DOM的实现和ECMAScript</p>\n<p>的实现是分离的。例如，在IE中，ECMAScript的实现在jscript.dll中，而DOM的</p>\n<p>实现在mshtml.dll中；在chrome中使用webkit的WebCore处理DOM和渲染，但</p>\n<p>ECMAScript是在V8引擎中实现的，其他浏览器的情况类似，所以通过Javascript</p>\n<p>调用dom接口，是相当于两个模块的交互。相比较在同一模块中的调用，这种跨模块的</p>\n<p>调用其性能损耗是很高的，但DOM操作对性能影响最大是因为它导致了浏览器的重绘</p>\n<p>和重排。</p>\n<p>浏览器渲染原理的简单说明</p>\n<p>从下载文档到渲染页面的过程中，浏览器会通过解析HTML文档来构建DOM树，解析</p>\n<p>CSS产生CSS规则树。javascript在代码解析的过程中，可能会修改生成的dom树</p>\n<p>和css规则树，之后根据dom树和css规则树构建渲染树，在这个过程中css会根据</p>\n<p>选择器匹配HTML元素。渲染树包括了每个元素的大小，边距等样式属性。渲染树</p>\n<p>中不包含隐藏元素及head元素等不可见元素。最后浏览器根据元素的坐标和大小</p>\n<p>来计算每个元素的位置，并绘制这些元素到页面上。重绘指的是元素的位置或尺寸</p>\n<p>发生了改变，浏览器会重新绘制页面上受影响的元素，重排的代价高于重绘。</p>\n<p>之下的DOM操作会导致重绘或重排：</p>\n<p>1.增加，删除和修改可见DOM元素</p>\n<ol start=\"2\">\n<li>页面初始化的渲染</li>\n</ol>\n<p>3.移动dom元素</p>\n<p>4.修改css样式，改变dom元素的尺寸</p>\n<p>5.dom元素内容改变，使得尺寸被撑大</p>\n<p>6.浏览器窗口尺寸改变</p>\n<p>7.浏览器窗口滚动</p>\n<p>现代浏览器会针对重排或重绘做性能优化，例如，把DOM操作积累一批后统一</p>\n<p>做一次重排或重绘，但在有些情况下，浏览器会立即进行重排或重绘，比如请求如下的</p>\n<p>dom元素布局信息</p>\n<p>offsetTop/Left/Width/Height</p>\n<p>scrollTop/Left/Width/Height</p>\n<p>clientTop/Left/Width/Height</p>\n<p>getComputeStyle()或currentStyle</p>\n<p>因为这些值都是动态计算的，所以浏览器需尽快完成页面绘制，计算返回值，打乱了重绘或</p>\n<p>重排优化。</p>\n<p>可以遵循一些最佳实践来降低影响–&gt;</p>\n<p>方法一：合并多此dom操作为单次dom操作</p>\n<p>通过class类名来元素的大量样式更改，代码维护性较好。</p>\n<p>通过innerHTML接口来修改DOM元素的内容时，以字符串方式拼接好代码后，一次性赋值给</p>\n<p>DOM元素的innerHTML接口。</p>\n<p>方法二： 把DOM元素离线或隐藏后修改</p>\n<p>把元素从页面流中脱离或隐藏，这样处理后，只会在DOM元素脱离或添加时，或者是隐藏或显示时才会造成页面的重绘会重排，对脱离了页面布局的DOM元素操作就不会导致页面的性能问题。</p>\n<p>这种方式适合需要大批量修改dom元素的情况。具体方式由三种：</p>\n<p>(1) 使用文档片段</p>\n<p>文档片段是一个轻量级的document对象，并不会和特定的页面关联，通过在文档片段上进行DOM操作，可以降低DOM操作对页面性能的影响，这种方式是创建一个文档片段，并在此片段上</p>\n<p>进行必要的DOM操作，操作完成后将它附加在页面中，对页面的影响只存在于最后把文档片段附加到页面的这一步操作上。</p>\n<p>var fragment=document.createDocumentFragment();</p>\n<p>//一些基于fragment的大量dom操作</p>\n<p>…</p>\n<p>document.getElementById(‘myElement’).appendChild(fragment);</p>\n<p>(2)隐藏元素</p>\n<p>通过隐藏元素，达到在页面上移除元素的效果，经过大量的DOM操作后恢复元素原来的display样式，只有隐藏和显示元素时会引起页面重绘或重排操作。</p>\n<p>var myElement=document.getElementById(‘myElement’)；<br>myElement.style.display=’none’;</p>\n<p>//dom操作</p>\n<p>myElement.style.display=’block’;</p>\n<p>(3)克隆DOM元素到内存中</p>\n<p>把页面上的DOM元素克隆一份到内存中，然后在内存中操作克隆的元素，操作完成后使用此克隆元素替换页面中原来的DOM元素，只有替换元素时会影响性能,在内存中操作克隆元素不会引起页面上的性能损耗。</p>\n<p>var old=document.getElementById(‘myElement’);</p>\n<p>var clone=old.cloneNode(true);</p>\n<p>//dom操作</p>\n<p>old.parentNode.replaceChild(clone,old);</p>\n<p>3.设置具有动画效果的DOM元素的position属性为fixed或absolute</p>\n<p>把页面中具有动画效果的元素设置为绝对定位，使得元素脱离页面布局流，从未避免了页面频繁的重排，只涉及动画元素自身的重排。这种做法可以提高动画效果的展示性能。(在动画开始时将其设置为绝对定位，等动画结束后恢复原始的定位设置)。</p>\n<p>4.谨慎获得dom元素的布局信息，变量本地化。</p>\n<p>把获取到的元素的布局信息值缓存在局部变量中。在有大量的DOM操作时，避免获取dom元素的布局信息，如果需要布局信息，最好在DOM操作之前就取好存放。</p>\n<p>5.使用事件托管方式绑定事件</p>\n<p>在DOM元素上绑定事件或影响页面的性能，一方面，绑定事件本身会占用处理时间，另一方面，浏览器保存事件绑定也会占用内存。使用事件托管方式，即利用事件冒泡机制，只在父元素上绑定事件处理，用于处理所有子元素的事件，在事件处理函数中根据传入的参数判断事件源元素，针对不同的元素做不同的处理。这种方式有很大的灵活性，可以方便的添加或删除子元素，不需要考虑因元素移除或添加需要修改事件绑定。</p>\n"},{"title":"记录","date":"2017-05-19T14:02:48.000Z","_content":"\nhttp://blog.hotoo.me/\nhttp://bradfrost.com/blog/post/atomic-web-design/\n\nhttps://www.gnupg.org/\n","source":"_posts/nice_sites_20170519.md","raw":"---\ntitle: 记录\ndate: 2017-05-19 22:02:48\ntags:\n---\n\nhttp://blog.hotoo.me/\nhttp://bradfrost.com/blog/post/atomic-web-design/\n\nhttps://www.gnupg.org/\n","slug":"nice_sites_20170519","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm2000w2oi823t9dna1","content":"<p><a href=\"http://blog.hotoo.me/\" target=\"_blank\" rel=\"noopener\">http://blog.hotoo.me/</a><br><a href=\"http://bradfrost.com/blog/post/atomic-web-design/\" target=\"_blank\" rel=\"noopener\">http://bradfrost.com/blog/post/atomic-web-design/</a></p>\n<p><a href=\"https://www.gnupg.org/\" target=\"_blank\" rel=\"noopener\">https://www.gnupg.org/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://blog.hotoo.me/\" target=\"_blank\" rel=\"noopener\">http://blog.hotoo.me/</a><br><a href=\"http://bradfrost.com/blog/post/atomic-web-design/\" target=\"_blank\" rel=\"noopener\">http://bradfrost.com/blog/post/atomic-web-design/</a></p>\n<p><a href=\"https://www.gnupg.org/\" target=\"_blank\" rel=\"noopener\">https://www.gnupg.org/</a></p>\n"},{"title":"react源码分析","date":"2018-01-19T11:41:55.000Z","_content":"\n## 相关文档资源\nreact IRC https://webchat.freenode.net/?channels=reactjs\nreact git 地址　https://github.com/facebook/react.git\n使用flow进行数据校验　 地址：https://flow.org/en/docs/install/\n##  好的源码分析文章\n\n官网说明文档：　 https://github.com/facebook/react/issues/10294\n16.x 源码解析：　http://zxc0328.github.io/2017/09/28/react-16-source/\n                 http://blog.codingplayboy.com/2017/12/02/react_fiber/\n                 https://zhuanlan.zhihu.com/p/28697362\n                 https://juejin.im/post/5a2276d5518825619a027f57\n15.x 源码解析：　https://www.cnblogs.com/JhoneLee/p/5886759.html\n15.x 源码解析：　https://zhuanlan.zhihu.com/p/28697362\n                 https://zhuanlan.zhihu.com/p/33833594\n15.x 源码解析：　http://blog.csdn.net/p77ll9l53x/article/details/72675590\n15.x react diff算法解析　http://blog.csdn.net/yczz/article/details/49886061\nhttps://segmentfault.com/a/1190000011235844 司徒正美谈　react diff 算法\n重新实现一个react 的难点与思路　https://www.cnblogs.com/sven36/p/6486860.html\n\n对比es6 extends写法\n说了一堆，其实 createClass 主要就做了这么几件事。\n\n生成并返回一个Constructor构造函数，该函数有props，context，refs，updater和state5个属性。\n绑定了作用域。\n将属性或方法添加到 Constructor.prototype 上。\n调用 getDefaultProps 初始化 Constructor.defaultProps 属性。\n以上3点通过 class xxx extends React.Component 写法都能办到。\n\n\n## 源码分析笔记\n\n\n分析入口：　ReactDOM.render   Component.prototype.setState  这两个函数是react应用开发中经常用到的触发页面渲染函数.\n\n\n###  ReactDOM.render \n\n```\n\nReactDOM.render --> legacyRenderSubtreeIntoContainer --> legacyCreateRootFromDOMContainer --> legacyCreateRootFromDOMContainer --> new ReactRoot /\n--> DOMRenderer.createContainer(container, isAsync, hydrate) --> DOMRenderer.updateContainer\n                                                     --> DOMRenderer.unbatchedUpdates  \n                                                     --> root.legacy_renderSubtreeIntoContainer\n                                                     --> root.render\n                                                     --> DOMRenderer.getPublicRootInstance(root._internalRoot)\n\n\nconst root = {\n      current: uninitializedFiber,\n      containerInfo: containerInfo,\n      pendingChildren: null,\n      remainingExpirationTime: NoWork,\n      isReadyForCommit: false,\n      finishedWork: null,\n      context: null,\n      pendingContext: null,\n      hydrate,\n      firstBatch: null,\n      nextScheduledRoot: null,\n;\n\n```\n\n\nfunction call stack \n\nscheduleWork\nscheduleWorkImpl\nrequestWork\nperformWork\nperformWorkOnRoot\nrenderRoot \nworkLoop\nperformUnitOfWork\nbeginWork\nupdateHostRoot\n\n","source":"_posts/react-source-tips.md","raw":"---\ntitle: react源码分析\ndate: 2018-01-19 19:41:55\ntags:\n---\n\n## 相关文档资源\nreact IRC https://webchat.freenode.net/?channels=reactjs\nreact git 地址　https://github.com/facebook/react.git\n使用flow进行数据校验　 地址：https://flow.org/en/docs/install/\n##  好的源码分析文章\n\n官网说明文档：　 https://github.com/facebook/react/issues/10294\n16.x 源码解析：　http://zxc0328.github.io/2017/09/28/react-16-source/\n                 http://blog.codingplayboy.com/2017/12/02/react_fiber/\n                 https://zhuanlan.zhihu.com/p/28697362\n                 https://juejin.im/post/5a2276d5518825619a027f57\n15.x 源码解析：　https://www.cnblogs.com/JhoneLee/p/5886759.html\n15.x 源码解析：　https://zhuanlan.zhihu.com/p/28697362\n                 https://zhuanlan.zhihu.com/p/33833594\n15.x 源码解析：　http://blog.csdn.net/p77ll9l53x/article/details/72675590\n15.x react diff算法解析　http://blog.csdn.net/yczz/article/details/49886061\nhttps://segmentfault.com/a/1190000011235844 司徒正美谈　react diff 算法\n重新实现一个react 的难点与思路　https://www.cnblogs.com/sven36/p/6486860.html\n\n对比es6 extends写法\n说了一堆，其实 createClass 主要就做了这么几件事。\n\n生成并返回一个Constructor构造函数，该函数有props，context，refs，updater和state5个属性。\n绑定了作用域。\n将属性或方法添加到 Constructor.prototype 上。\n调用 getDefaultProps 初始化 Constructor.defaultProps 属性。\n以上3点通过 class xxx extends React.Component 写法都能办到。\n\n\n## 源码分析笔记\n\n\n分析入口：　ReactDOM.render   Component.prototype.setState  这两个函数是react应用开发中经常用到的触发页面渲染函数.\n\n\n###  ReactDOM.render \n\n```\n\nReactDOM.render --> legacyRenderSubtreeIntoContainer --> legacyCreateRootFromDOMContainer --> legacyCreateRootFromDOMContainer --> new ReactRoot /\n--> DOMRenderer.createContainer(container, isAsync, hydrate) --> DOMRenderer.updateContainer\n                                                     --> DOMRenderer.unbatchedUpdates  \n                                                     --> root.legacy_renderSubtreeIntoContainer\n                                                     --> root.render\n                                                     --> DOMRenderer.getPublicRootInstance(root._internalRoot)\n\n\nconst root = {\n      current: uninitializedFiber,\n      containerInfo: containerInfo,\n      pendingChildren: null,\n      remainingExpirationTime: NoWork,\n      isReadyForCommit: false,\n      finishedWork: null,\n      context: null,\n      pendingContext: null,\n      hydrate,\n      firstBatch: null,\n      nextScheduledRoot: null,\n;\n\n```\n\n\nfunction call stack \n\nscheduleWork\nscheduleWorkImpl\nrequestWork\nperformWork\nperformWorkOnRoot\nrenderRoot \nworkLoop\nperformUnitOfWork\nbeginWork\nupdateHostRoot\n\n","slug":"react-source-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm2000x2oi8asfv3pc1","content":"<h2 id=\"相关文档资源\"><a href=\"#相关文档资源\" class=\"headerlink\" title=\"相关文档资源\"></a>相关文档资源</h2><p>react IRC <a href=\"https://webchat.freenode.net/?channels=reactjs\" target=\"_blank\" rel=\"noopener\">https://webchat.freenode.net/?channels=reactjs</a><br>react git 地址　<a href=\"https://github.com/facebook/react.git\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react.git</a><br>使用flow进行数据校验　 地址：<a href=\"https://flow.org/en/docs/install/\" target=\"_blank\" rel=\"noopener\">https://flow.org/en/docs/install/</a></p>\n<h2 id=\"好的源码分析文章\"><a href=\"#好的源码分析文章\" class=\"headerlink\" title=\"好的源码分析文章\"></a>好的源码分析文章</h2><p>官网说明文档：　 <a href=\"https://github.com/facebook/react/issues/10294\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react/issues/10294</a><br>16.x 源码解析：　<a href=\"http://zxc0328.github.io/2017/09/28/react-16-source/\" target=\"_blank\" rel=\"noopener\">http://zxc0328.github.io/2017/09/28/react-16-source/</a><br>                 <a href=\"http://blog.codingplayboy.com/2017/12/02/react_fiber/\" target=\"_blank\" rel=\"noopener\">http://blog.codingplayboy.com/2017/12/02/react_fiber/</a><br>                 <a href=\"https://zhuanlan.zhihu.com/p/28697362\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/28697362</a><br>                 <a href=\"https://juejin.im/post/5a2276d5518825619a027f57\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5a2276d5518825619a027f57</a><br>15.x 源码解析：　<a href=\"https://www.cnblogs.com/JhoneLee/p/5886759.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/JhoneLee/p/5886759.html</a><br>15.x 源码解析：　<a href=\"https://zhuanlan.zhihu.com/p/28697362\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/28697362</a><br>                 <a href=\"https://zhuanlan.zhihu.com/p/33833594\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/33833594</a><br>15.x 源码解析：　<a href=\"http://blog.csdn.net/p77ll9l53x/article/details/72675590\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/p77ll9l53x/article/details/72675590</a><br>15.x react diff算法解析　<a href=\"http://blog.csdn.net/yczz/article/details/49886061\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/yczz/article/details/49886061</a><br><a href=\"https://segmentfault.com/a/1190000011235844\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000011235844</a> 司徒正美谈　react diff 算法<br>重新实现一个react 的难点与思路　<a href=\"https://www.cnblogs.com/sven36/p/6486860.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/sven36/p/6486860.html</a></p>\n<p>对比es6 extends写法<br>说了一堆，其实 createClass 主要就做了这么几件事。</p>\n<p>生成并返回一个Constructor构造函数，该函数有props，context，refs，updater和state5个属性。<br>绑定了作用域。<br>将属性或方法添加到 Constructor.prototype 上。<br>调用 getDefaultProps 初始化 Constructor.defaultProps 属性。<br>以上3点通过 class xxx extends React.Component 写法都能办到。</p>\n<h2 id=\"源码分析笔记\"><a href=\"#源码分析笔记\" class=\"headerlink\" title=\"源码分析笔记\"></a>源码分析笔记</h2><p>分析入口：　ReactDOM.render   Component.prototype.setState  这两个函数是react应用开发中经常用到的触发页面渲染函数.</p>\n<h3 id=\"ReactDOM-render\"><a href=\"#ReactDOM-render\" class=\"headerlink\" title=\"ReactDOM.render\"></a>ReactDOM.render</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render --&gt; legacyRenderSubtreeIntoContainer --&gt; legacyCreateRootFromDOMContainer --&gt; legacyCreateRootFromDOMContainer --&gt; new ReactRoot /</span><br><span class=\"line\">--&gt; DOMRenderer.createContainer(container, isAsync, hydrate) --&gt; DOMRenderer.updateContainer</span><br><span class=\"line\">                                                     --&gt; DOMRenderer.unbatchedUpdates  </span><br><span class=\"line\">                                                     --&gt; root.legacy_renderSubtreeIntoContainer</span><br><span class=\"line\">                                                     --&gt; root.render</span><br><span class=\"line\">                                                     --&gt; DOMRenderer.getPublicRootInstance(root._internalRoot)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const root = &#123;</span><br><span class=\"line\">      current: uninitializedFiber,</span><br><span class=\"line\">      containerInfo: containerInfo,</span><br><span class=\"line\">      pendingChildren: null,</span><br><span class=\"line\">      remainingExpirationTime: NoWork,</span><br><span class=\"line\">      isReadyForCommit: false,</span><br><span class=\"line\">      finishedWork: null,</span><br><span class=\"line\">      context: null,</span><br><span class=\"line\">      pendingContext: null,</span><br><span class=\"line\">      hydrate,</span><br><span class=\"line\">      firstBatch: null,</span><br><span class=\"line\">      nextScheduledRoot: null,</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n\n<p>function call stack </p>\n<p>scheduleWork<br>scheduleWorkImpl<br>requestWork<br>performWork<br>performWorkOnRoot<br>renderRoot<br>workLoop<br>performUnitOfWork<br>beginWork<br>updateHostRoot</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"相关文档资源\"><a href=\"#相关文档资源\" class=\"headerlink\" title=\"相关文档资源\"></a>相关文档资源</h2><p>react IRC <a href=\"https://webchat.freenode.net/?channels=reactjs\" target=\"_blank\" rel=\"noopener\">https://webchat.freenode.net/?channels=reactjs</a><br>react git 地址　<a href=\"https://github.com/facebook/react.git\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react.git</a><br>使用flow进行数据校验　 地址：<a href=\"https://flow.org/en/docs/install/\" target=\"_blank\" rel=\"noopener\">https://flow.org/en/docs/install/</a></p>\n<h2 id=\"好的源码分析文章\"><a href=\"#好的源码分析文章\" class=\"headerlink\" title=\"好的源码分析文章\"></a>好的源码分析文章</h2><p>官网说明文档：　 <a href=\"https://github.com/facebook/react/issues/10294\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/react/issues/10294</a><br>16.x 源码解析：　<a href=\"http://zxc0328.github.io/2017/09/28/react-16-source/\" target=\"_blank\" rel=\"noopener\">http://zxc0328.github.io/2017/09/28/react-16-source/</a><br>                 <a href=\"http://blog.codingplayboy.com/2017/12/02/react_fiber/\" target=\"_blank\" rel=\"noopener\">http://blog.codingplayboy.com/2017/12/02/react_fiber/</a><br>                 <a href=\"https://zhuanlan.zhihu.com/p/28697362\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/28697362</a><br>                 <a href=\"https://juejin.im/post/5a2276d5518825619a027f57\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5a2276d5518825619a027f57</a><br>15.x 源码解析：　<a href=\"https://www.cnblogs.com/JhoneLee/p/5886759.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/JhoneLee/p/5886759.html</a><br>15.x 源码解析：　<a href=\"https://zhuanlan.zhihu.com/p/28697362\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/28697362</a><br>                 <a href=\"https://zhuanlan.zhihu.com/p/33833594\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/33833594</a><br>15.x 源码解析：　<a href=\"http://blog.csdn.net/p77ll9l53x/article/details/72675590\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/p77ll9l53x/article/details/72675590</a><br>15.x react diff算法解析　<a href=\"http://blog.csdn.net/yczz/article/details/49886061\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/yczz/article/details/49886061</a><br><a href=\"https://segmentfault.com/a/1190000011235844\" target=\"_blank\" rel=\"noopener\">https://segmentfault.com/a/1190000011235844</a> 司徒正美谈　react diff 算法<br>重新实现一个react 的难点与思路　<a href=\"https://www.cnblogs.com/sven36/p/6486860.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/sven36/p/6486860.html</a></p>\n<p>对比es6 extends写法<br>说了一堆，其实 createClass 主要就做了这么几件事。</p>\n<p>生成并返回一个Constructor构造函数，该函数有props，context，refs，updater和state5个属性。<br>绑定了作用域。<br>将属性或方法添加到 Constructor.prototype 上。<br>调用 getDefaultProps 初始化 Constructor.defaultProps 属性。<br>以上3点通过 class xxx extends React.Component 写法都能办到。</p>\n<h2 id=\"源码分析笔记\"><a href=\"#源码分析笔记\" class=\"headerlink\" title=\"源码分析笔记\"></a>源码分析笔记</h2><p>分析入口：　ReactDOM.render   Component.prototype.setState  这两个函数是react应用开发中经常用到的触发页面渲染函数.</p>\n<h3 id=\"ReactDOM-render\"><a href=\"#ReactDOM-render\" class=\"headerlink\" title=\"ReactDOM.render\"></a>ReactDOM.render</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render --&gt; legacyRenderSubtreeIntoContainer --&gt; legacyCreateRootFromDOMContainer --&gt; legacyCreateRootFromDOMContainer --&gt; new ReactRoot /</span><br><span class=\"line\">--&gt; DOMRenderer.createContainer(container, isAsync, hydrate) --&gt; DOMRenderer.updateContainer</span><br><span class=\"line\">                                                     --&gt; DOMRenderer.unbatchedUpdates  </span><br><span class=\"line\">                                                     --&gt; root.legacy_renderSubtreeIntoContainer</span><br><span class=\"line\">                                                     --&gt; root.render</span><br><span class=\"line\">                                                     --&gt; DOMRenderer.getPublicRootInstance(root._internalRoot)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">const root = &#123;</span><br><span class=\"line\">      current: uninitializedFiber,</span><br><span class=\"line\">      containerInfo: containerInfo,</span><br><span class=\"line\">      pendingChildren: null,</span><br><span class=\"line\">      remainingExpirationTime: NoWork,</span><br><span class=\"line\">      isReadyForCommit: false,</span><br><span class=\"line\">      finishedWork: null,</span><br><span class=\"line\">      context: null,</span><br><span class=\"line\">      pendingContext: null,</span><br><span class=\"line\">      hydrate,</span><br><span class=\"line\">      firstBatch: null,</span><br><span class=\"line\">      nextScheduledRoot: null,</span><br><span class=\"line\">;</span><br></pre></td></tr></table></figure>\n\n<p>function call stack </p>\n<p>scheduleWork<br>scheduleWorkImpl<br>requestWork<br>performWork<br>performWorkOnRoot<br>renderRoot<br>workLoop<br>performUnitOfWork<br>beginWork<br>updateHostRoot</p>\n"},{"title":"推荐工程师成长攻略","date":"2017-11-20T05:19:48.000Z","_content":"\n## 推荐系统工程师技能树\n\n### 掌握核心原理的技能\n\n* 数学：微积分，统计学，线性代数\n* 周边学科：信息论基础\n* 推荐算法： CF，LR，SVM，FM，FTRL，GBDT，RF，SVD，RBM，RNN，LSTM，RL\n* 数据挖掘：分类，聚类，回归，降维，特征选择，模型评价\n\n### 实现系统检验想法的技能\n\n*  操作系统： Linux\n*  编程语言： Python/R， Java/C++/C，sql，shell\n*  RPC框架： thrift， Dubbo，gRPC\n*  web服务： tornado, django, flask\n*  数据存储： redis, hbase, cassandra, mongodb, mysql, hdfs，hive, kafka, elasticsearch\n*  机器学习/深度学习： Spark MLib，GraphLab/GraphCHI，Angel，MXNet，TensorFlow，Caffe, Xgboost，VW，libxxx\n*  文本处理： Word2vec，Fasttext，Gensim，NLTK\n*  矩阵分解： Spark ALS，GraphCHI，implicit，qmf，libfm\n*  相似计算： kgraph, annoy，nmslib, GraphCHI, columnSimilarities(spark.RowMatrix)\n*  实时计算： Spark Streaming, Storm，Samza\n###  为效果负责的技能\n\n*  熟悉常见离线效果指标：准确率，召回率，AUC，基尼系数\n*  能够定义产品效果指标：点击率，留存率，转换率，观看完整率\n*  会做对比试验并分析实验结果：指标数据可视化\n*  知道常见推荐产品的区别： Feed流推荐，相关推荐，TopN推荐，个性化推送\n###  其他软技能\n\n*  英文阅读；读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；\n*  代码阅读；能阅读开源代码，从中学习优秀项目对经典算法的实现；\n*  沟通表达；能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真需求和伪需求并且能达成一致。\n \n### 推荐系统工程师成长路线图\n\n《Item-based collaborative filtering recommendation algorithms》这篇文章发表于2001年，在Google学术上显示，其被引用次数已经是6599了，可见其给推荐系统带来的影响之大。\n\n    经过20多年的发展，item-based已经成为推荐系统的标配，而推荐系统已经成为互联网产品的标配。很多产品甚至在第一版就要被投资人或者创始人要求必须“个性化”，可见，推荐系统已经飞入寻常百姓家，作为推荐系统工程师的成长也要比从前更容易，要知道我刚工作时，即使跟同为研发工程师的其他人如PHP工程师（绝无黑的意思，是真的）说“我是做推荐的”，他们也一脸茫然，不知道“推荐”为什么是一个工程师岗位。\n\n  如今纵然“大数据”， “AI”，这些词每天360度无死角轰炸我们，让我们很容易浮躁异常焦虑不堪，但不得不承认，这是作为推荐系统工程师的一个好时代。\n\n    图片描述\n\n    图1 推荐系统工程师技能树\n    推荐系统工程师和正常码农们相比，无需把PM们扔过来的需求给像素级实现，从而堆码成山；和机器学习研究员相比，又无需沉迷数学推导，憋出一个漂亮自洽的模型，一统学术界的争论；和数据分析师相比，也不需绘制漂亮的图表，做出酷炫的PPT能给CEO汇报，走上人生巅峰。\n\n    那推荐系统工程师的定位是什么呢？为什么需要前面提到的那些技能呢？容我结合自身经历来一一解答。我把推荐系统工程师的技能分为四个维度：\n\n###  掌握核心原理的技能，是一种知其所以然的基础技能；\n*    动手能力：实现系统，检验想法，都需要扎实的工程能力；\n*    为效果负责的能力：这是推荐系统工程师和其他工种的最大区别；\n*    软技能：任何工程师都需要自我成长，需要团队协作。 \n*    英文阅读：读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；\n*    代码阅读：能阅读开源代码，从中学习优秀项目对经典算法的实现；\n*    沟通表达：能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真伪需求并且能达成一致。\n###    掌握最最基础的原理\n\n    托开源的福气，现在有很多开箱即用的工具让我们很容易搭建起一个推荐系统。但是浮沙上面筑不起高塔，基础知识必须要有，否则就会在行业里面，被一轮轮概念旋风吹得找不着北。所有基础里面，最最基础的当然就是数学了。\n\n    能够看懂一些经典论文对于实现系统非常有帮助：从基本假设到形式化定义，从推导到算法流程，从实验设计到结果分析。这些要求我们对于微积分有基本的知识，有了基本的微积分知识才能看懂梯度下降等基本的优化方法。\n\n    概率和统计知识给我们建立起一个推荐系统工程师最基本的三观：不要以是非绝对的眼光看待事物，要有用不确定性思维去思考产品中的每一个事件，因为实现推荐系统，并不是像实现界面上一个按钮的响应事件那样明确可检验。大数据构建了一个高维的数据空间，从数据到推荐目标基本上都可以用矩阵的角度去形式化，比如常见的推荐算法：协同过滤、矩阵分解。\n\n    而机器学习算法，如果用矩阵运算角度去看，会让我们更加能够理解“向量化计算”和传统软件工程里面的循环之间的巨大差异。高维向量之间的点积，矩阵之间的运算，如果用向量化方式实现比用循环方式实现，高效不少。建立这样的思维模式，也需要学好线性代数。\n\n    学好基础的数学知识之外，我们要稍微延伸学习一些信息科学的基础学科，尤其是信息论。信息论是构建在概率基础上的，信息论给了很多计算机领域问题一个基本的框架：把问题看做是通信问题。\n\n    推荐系统要解决的问题也是一个通信问题：用户在以很不明确的方式向我们的产品发报，告诉我们他最喜欢/讨厌的是什么，我们在收到了之后要解码，并且还要给他们回信，如果沟通不顺畅，那用户就会失联。我的专业是信息与通信工程。\n\n    读研时从事过NLP相关的课题研究，NLP里面很多问题和方法都用到了信息论知识，这样让我深受信息论影响。有了这些基础知识，再去跟踪不断涌现的新算法新模型，就会容易得多。\n\n    推荐系统会用到很多传统数据挖掘和机器学习方法。掌握经典的机器学习算法是一个事半功倍的事情，比如逻辑回归，是一个很简单的分类算法，但它在推荐领域应用之广，其他算法无出其右。在吴恩达的深度学习课程里，从逻辑回归入手逐渐讲到多层神经网络，讲到更复杂的RNN等。应该怎么掌握这些经典的算法呢？最直接的办法是：自己从0实现一遍。\n\n    推荐系统不只是模型，推荐系统是一整个数据处理流程，所以模型的上游，就是一些数据挖掘的知识也需要掌握，基本的分类聚类知识，降维知识，都要有所掌握。\n\n###  锻炼扎实的工程能力\n\n    前面强调自己实现算法对于掌握算法的必要性，但在实际开发推荐系统的时候，如无必要，一定不要重复造轮子。推荐系统也是一个软件系统，当然要稳定要高效。开源成熟的轮子当然是首选。实现推荐系统，有一些东西是common sense，有一些是好用的工具，都有必要列出来。\n\n    首当其冲的常识就是Linux操作系统。由于Windows在PC的市场占率的垄断地位，导致很多软件工程师只会在Windows下开发，这是一个非常普遍、严重、又容易被忽视的短板。我自己深有体会，一定要熟练地在Linux下的用命令行编程，如果你的个人电脑是Mac，会好很多，因为macOS底层是Unix操作系统，和Linux是近亲，用Mac的终端基本上类似在Linux下的命令行，如果不是则一定要有自己的Linux环境供自己平时练习，买一台常备的云服务器是一个不错的选择。这里有两个关键点：\n\n    用Linux操作系统；\n    多用命令行而少用IDE（Eclipse、VS等）。\n    为什么呢？有以下三点原因：\n\n    几乎所有推荐系统要用到的开源工具都是首先在Linux下开发测试完成的，最后再考虑移植到Windows平台上（测试不充分或者根本不移植）；\n    键盘比鼠标快，用命令行编程会多用键盘，少用鼠标，熟悉之后效率大大提升。而且Linux下的命令非常丰富，处理的也都是标准文本，掌握之后很多时候根本不用写程序就能做很多数据处理工作。\n    几乎Linux是互联网公司的服务器操作系统标配，不会Linux下的开发，就找不着工作，就问你怕不怕？\n    常常有人问我，实现推荐系统用什么编程语言比较好。标准的官方回答是：用你擅长的语言。但我深知这个回答不会解决提问者的疑问。实际上我的建议是：你需要掌握一门编译型语言：C++或者Java，然后掌握一门解释型语言，推荐Python或者R。原因如下：\n\n    推荐系统的开源项目中以这几种语言最常见；\n    快速的数据分析和处理、模型调试、结果可视化、系统原型实现等，Python和R是不错的选择，尤其是Python；\n    当Python在一些地方有效率瓶颈时，通常是用C++实现，再用Python调用；\n    Java在构建后台服务时很有优势，一些大数据开源项目也多用Java来实现；\n    如果时间有限，只想掌握一门语言的话，推荐Python。从模型到后端服务到web端，都可以用Python，毋庸置疑，Python是AI时代第一编程语言。\n\n    推荐系统是一个线上的产品，无论离线时的模型跑得多么爽，可视化多么酷炫，最终一定要做成在线服务才完整。这就涉及到两方面的工作：1. 系统原型； 2. 算法服务化 。这涉及到：\n\n    数据存储。包括存储模型用于在线实时计算，存储离线计算好的推荐结果。除了传统的关系型数据库MySQL之外，还需要掌握非关系型数据库，如KV数据库Redis，列式数据库Cassandra和HBase常常用来存储推荐结果或模型参数。推荐的候选Item也可能存在MongoDB中。\n    RPC和web。需要将自己的算法计算模块以服务的形式提供给别人跨进程跨服务器调用，因此RPC框架就很重要，最流行如thrift或者dubbo。在RPC服务之上，再做原型还需要会一点基本的web开发知识，Python、PHP、Java都有相应的web框架来迅速的完成最基本的推荐结果展示。\n    当然，最核心的是算法实现。以机器学习算法为主。下面详细列举一下常见的机器学习/深度学习工具：\n\n    Spark MLib：大概是使用最广的机器学习工具了，因为Spark普及很广，带动了一个并非其最核心功能的MLib，MLib实现了常见的线性模型、树模型和矩阵分解模型等。提供Scala、Java和Python接口，提供了很多例子，学习Spark MLib很值得自己运行它提供的例子，结合文档和源代码学习接口的使用，模型的序列化和反序列化。\n    GraphLab/GraphCHI：GraphCHI是开源的单机版，GraphLab是分布式的，但并不开源。所以建议推荐系统工程师重点学习一下GraphCHI，它有Java和C++两个版本，实现了常见的推荐算法，并在单机上能跑出很高的结果。有一个不得不承认的事实是：GraphCHI和GraphLab在业界应用得并不广泛。\n    Angel：腾讯在2017年开源的分布式机器学习平台，Java和Scala开发而成，已经在腾讯的10亿维度下有工业级别的应用，最终的是填补了专注传统机器学习（相对于深度学习）分布式计算的空白，值得去学习一下；由于开发团队是中国人，所以文档以中文为主，学习的时候多多和开发团队交流会受益良多，进步神速。\n    VW：这是Yahoo开源的一个分布式机器学工具，也支持单机，分布式需要借助Hadoop实现。由于主要开发者后来跳槽去了微软，所以还支持Windows平台。阅读这个工具的源码，非常有助于理解逻辑回归的训练，微博推荐团队和广告团队第一版模型训练都采用了VW，其开发者在Yahoo Group中回答问题很积极，使用期间，我在这个group里面提了大大小小十几个问题，基本上都得到解答，这是一个学习成长方法，建议新学者常常在邮件组或者讨论组里提问题，不要在乎问题是否愚蠢，不要在意别人的取笑。\n    Xgboost：这个号称kaggle神器的机器学习工具，非常值得学习和使用，尤其是对于理解Boosting和树模型很有帮助。网上有很多教程，主要开发者陈天奇也是中国人，所以遇到问题是非常容易找到交流的人的。\n    libxxx：这里的xxx是一个通配符，包括以lib开头的各种机器学习工具，如liblinear、libsvm、libfm、libmf。都是单机版的工具，虽然是单机版，但足够解决很多中小型数据集的推荐问题了，著名的scikit-learn中的一些分类算法就是封装的libsvm等工具。另外，libsvm不但是一个机器学习工具，而且它还定义了一种应用广泛，成为事实标准的机器学习训练数据格式：libsvm。\n    MXNet，TensorFlow，Caffe：深度学习大行其道，并且在识别问题上取到了惊人的效果，自然也间接推动了推荐系统的算法升级，因此，掌握深度学习工具的就很必要，其中尤其以TensorFlow为主，它不但有深度学习模型的实现，还有传统机器学习模型的实现，Python接口，对于掌握Python的人来说学习门槛很低。深度学习工具仍然建议去跑几个例子，玩一些有趣的东西会快速入门，如给照片换风格，或者训练一个动物/人脸识别器，可以有一些粗浅的认识。再系统地学习一下吴恩达的在线课程，他的课程对TensorFlow的使用也有讲解，课后编程作业设计得也很好。\n    为最终效果负责的能力\n\n    推荐系统最终要为产品效果负责。衡量推荐系统效果，分为离线和在线两个阶段。\n\n    离线阶段。跑出一些模型，会有定义清晰的指标去衡量模型本身对假设的验证情况，如准确率、召回率、AUC等。这个阶段的效果好，只能说明符合预期假设，但不能保证符合产品最终效果，因此还要有线上实际的检验。\n    在线阶段：除了有一些相对通用的指标，如用户留存率、使用时长、点击率等，更多的是和产品本身的定位息息相关，如短视频推荐关注vv，新闻推荐关注CTR等，这些和商业利益结合更紧密的指标才是最终检验推荐系统效果的指标，推荐系统工程师要为这个负责，而不能仅仅盯着离线部分和技术层面的效果。\n    了解不同产品的展现形式对推荐系统实现的要求，feed流、相关推荐、猜你喜欢等不同产品背后技术要求不同，效果考核不同，多观察、多使用、多思考。\n\n    最后，要学会用产品语言理解产品本身，将技术能力作为一种服务输出给团队其他成员是一项软技能。\n\n    推荐系统领域现状\n\n    协同过滤提出于90年代，至今二十几年，推荐系统技术上先后采用过近邻推荐、基于内容的推荐，以矩阵分解为代表的机器学习方法推荐，最近几年深度学习的火热自然也给推荐系统带来了明显的提升。推荐系统的作用无人质疑，简单举几个例子，80%的Netflix电影都是经由推荐系统被观众观看的，YouTube上60%的点击事件是由推荐系统贡献的。\n\n    推荐系统领域现状是怎么样的呢？这里分别从技术上和产品上来看一看。先看技术上，推荐系统所依赖的技术分为三类：传统的推荐技术、深度学习、强化学习。\n\n    首先，传统的推荐技术仍然非常有效。构建第一版推荐系统仍然需要这些传统推荐系统技术，这包括：User-based和Item-based近邻方法，以文本为主要特征来源的基于内容推荐，以矩阵分解为代表的传统机器学习算法。\n\n    当一个互联网产品的用户行为数据积累到一定程度，我们用这些传统推荐算法来构建第一版推荐系统，大概率上会取得不俗的成绩，实现0的突破。这类传统的推荐算法已经积累了足够多的实践经验和开源实现。由于对推荐系统的需求比以往更广泛，并且这些技术足够成熟，所以这类技术有SaaS化的趋势，逐渐交给专门的第三方公司来做，中小型、垂直公司不会自建团队来完成。\n\n    深度学习在识别问题上取得了不俗的成绩，自然就被推荐系统工程师们盯上了，已经结合到推荐系统中，比如YouTube用DNN构建了他们的视频推荐系统，Google在Google Play中使用Wide&Deep模型，结合了浅层的logistic regression模型和深层模型进行CTR预估，取得了比单用浅层模型或者单独的深层模型更好的效果，Wide&Deep模型也以开源的方式集成在了TensorFlow中，如今很多互联网公司，都在广泛使用这一深度学习和浅层模型结合的模型。在2014年，Spotify就尝试了RNN在序列推荐上，后来RNN又被Yahoo News的推荐系统。传统推荐算法中有一个经典的算法叫做FM，常用于做CTR预估，算是一种浅层模型，最近也有人尝试了结合深度学习，提出DeepFM模型用于CTR预估。\n\n    AlphaGo、Alpha Master、Alpha Zero一个比一个厉害，其开挂的对弈能力，让强化学习进入大众视线。强化学习用于推荐系统是一件很自然的事情，把用户看做变化的环境，而推荐系统是Agent，在和用户的不断交互之间，推荐系统就从一脸懵逼到逐渐“找到北”，迎合了用户兴趣。业界已有应用案例，阿里的研究员仁基就公开分享过淘宝把强化学习应用在搜索推荐上的效果。强化学习还以bandit算法这种相对简单的形式应用在推荐系统很多地方，解决新用户和新物品的冷启动，以及取代ABTest成为另一种在线实验的框架。\n\n    除了技术上推荐系统有不同侧重，产品形式上也有不同的呈现。最初的推荐系统产品总是存活在产品的边角上，如相关推荐，这种产品形式只能算是“锦上添花”，如果推荐系统不小心开了天窗，也不是性命攸关的问题。如今推荐产品已经演化成互联网产品的主要承载形式：信息流。从最早的社交网站动态，到图文信息流，到如今的短视频。信息流是一种推荐系统产品形式，和相关推荐形式比起来，不再是锦上添花，而是注意力收割利器。\n\n    推荐系统产品形式的演进，背景是互联网从PC到移动的演进，PC上是搜索为王，移动下是推荐为王，自然越来越重要。随着各种可穿戴设备的丰富，越来越多的推荐产品还会涌现出来。产品和技术相互协同发展，未来会有更多有意思的推荐算法和产品形式问世，成为一名推荐系统工程师永远都不晚。\n\n\n[原文链接](http://blog.csdn.net/qq_40027052/article/details/78579587)\n","source":"_posts/recommendationsystemengineer.md","raw":"---\ntitle: '推荐工程师成长攻略'\ndate: 2017-11-20 13:19:48\ntags:\n---\n\n## 推荐系统工程师技能树\n\n### 掌握核心原理的技能\n\n* 数学：微积分，统计学，线性代数\n* 周边学科：信息论基础\n* 推荐算法： CF，LR，SVM，FM，FTRL，GBDT，RF，SVD，RBM，RNN，LSTM，RL\n* 数据挖掘：分类，聚类，回归，降维，特征选择，模型评价\n\n### 实现系统检验想法的技能\n\n*  操作系统： Linux\n*  编程语言： Python/R， Java/C++/C，sql，shell\n*  RPC框架： thrift， Dubbo，gRPC\n*  web服务： tornado, django, flask\n*  数据存储： redis, hbase, cassandra, mongodb, mysql, hdfs，hive, kafka, elasticsearch\n*  机器学习/深度学习： Spark MLib，GraphLab/GraphCHI，Angel，MXNet，TensorFlow，Caffe, Xgboost，VW，libxxx\n*  文本处理： Word2vec，Fasttext，Gensim，NLTK\n*  矩阵分解： Spark ALS，GraphCHI，implicit，qmf，libfm\n*  相似计算： kgraph, annoy，nmslib, GraphCHI, columnSimilarities(spark.RowMatrix)\n*  实时计算： Spark Streaming, Storm，Samza\n###  为效果负责的技能\n\n*  熟悉常见离线效果指标：准确率，召回率，AUC，基尼系数\n*  能够定义产品效果指标：点击率，留存率，转换率，观看完整率\n*  会做对比试验并分析实验结果：指标数据可视化\n*  知道常见推荐产品的区别： Feed流推荐，相关推荐，TopN推荐，个性化推送\n###  其他软技能\n\n*  英文阅读；读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；\n*  代码阅读；能阅读开源代码，从中学习优秀项目对经典算法的实现；\n*  沟通表达；能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真需求和伪需求并且能达成一致。\n \n### 推荐系统工程师成长路线图\n\n《Item-based collaborative filtering recommendation algorithms》这篇文章发表于2001年，在Google学术上显示，其被引用次数已经是6599了，可见其给推荐系统带来的影响之大。\n\n    经过20多年的发展，item-based已经成为推荐系统的标配，而推荐系统已经成为互联网产品的标配。很多产品甚至在第一版就要被投资人或者创始人要求必须“个性化”，可见，推荐系统已经飞入寻常百姓家，作为推荐系统工程师的成长也要比从前更容易，要知道我刚工作时，即使跟同为研发工程师的其他人如PHP工程师（绝无黑的意思，是真的）说“我是做推荐的”，他们也一脸茫然，不知道“推荐”为什么是一个工程师岗位。\n\n  如今纵然“大数据”， “AI”，这些词每天360度无死角轰炸我们，让我们很容易浮躁异常焦虑不堪，但不得不承认，这是作为推荐系统工程师的一个好时代。\n\n    图片描述\n\n    图1 推荐系统工程师技能树\n    推荐系统工程师和正常码农们相比，无需把PM们扔过来的需求给像素级实现，从而堆码成山；和机器学习研究员相比，又无需沉迷数学推导，憋出一个漂亮自洽的模型，一统学术界的争论；和数据分析师相比，也不需绘制漂亮的图表，做出酷炫的PPT能给CEO汇报，走上人生巅峰。\n\n    那推荐系统工程师的定位是什么呢？为什么需要前面提到的那些技能呢？容我结合自身经历来一一解答。我把推荐系统工程师的技能分为四个维度：\n\n###  掌握核心原理的技能，是一种知其所以然的基础技能；\n*    动手能力：实现系统，检验想法，都需要扎实的工程能力；\n*    为效果负责的能力：这是推荐系统工程师和其他工种的最大区别；\n*    软技能：任何工程师都需要自我成长，需要团队协作。 \n*    英文阅读：读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；\n*    代码阅读：能阅读开源代码，从中学习优秀项目对经典算法的实现；\n*    沟通表达：能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真伪需求并且能达成一致。\n###    掌握最最基础的原理\n\n    托开源的福气，现在有很多开箱即用的工具让我们很容易搭建起一个推荐系统。但是浮沙上面筑不起高塔，基础知识必须要有，否则就会在行业里面，被一轮轮概念旋风吹得找不着北。所有基础里面，最最基础的当然就是数学了。\n\n    能够看懂一些经典论文对于实现系统非常有帮助：从基本假设到形式化定义，从推导到算法流程，从实验设计到结果分析。这些要求我们对于微积分有基本的知识，有了基本的微积分知识才能看懂梯度下降等基本的优化方法。\n\n    概率和统计知识给我们建立起一个推荐系统工程师最基本的三观：不要以是非绝对的眼光看待事物，要有用不确定性思维去思考产品中的每一个事件，因为实现推荐系统，并不是像实现界面上一个按钮的响应事件那样明确可检验。大数据构建了一个高维的数据空间，从数据到推荐目标基本上都可以用矩阵的角度去形式化，比如常见的推荐算法：协同过滤、矩阵分解。\n\n    而机器学习算法，如果用矩阵运算角度去看，会让我们更加能够理解“向量化计算”和传统软件工程里面的循环之间的巨大差异。高维向量之间的点积，矩阵之间的运算，如果用向量化方式实现比用循环方式实现，高效不少。建立这样的思维模式，也需要学好线性代数。\n\n    学好基础的数学知识之外，我们要稍微延伸学习一些信息科学的基础学科，尤其是信息论。信息论是构建在概率基础上的，信息论给了很多计算机领域问题一个基本的框架：把问题看做是通信问题。\n\n    推荐系统要解决的问题也是一个通信问题：用户在以很不明确的方式向我们的产品发报，告诉我们他最喜欢/讨厌的是什么，我们在收到了之后要解码，并且还要给他们回信，如果沟通不顺畅，那用户就会失联。我的专业是信息与通信工程。\n\n    读研时从事过NLP相关的课题研究，NLP里面很多问题和方法都用到了信息论知识，这样让我深受信息论影响。有了这些基础知识，再去跟踪不断涌现的新算法新模型，就会容易得多。\n\n    推荐系统会用到很多传统数据挖掘和机器学习方法。掌握经典的机器学习算法是一个事半功倍的事情，比如逻辑回归，是一个很简单的分类算法，但它在推荐领域应用之广，其他算法无出其右。在吴恩达的深度学习课程里，从逻辑回归入手逐渐讲到多层神经网络，讲到更复杂的RNN等。应该怎么掌握这些经典的算法呢？最直接的办法是：自己从0实现一遍。\n\n    推荐系统不只是模型，推荐系统是一整个数据处理流程，所以模型的上游，就是一些数据挖掘的知识也需要掌握，基本的分类聚类知识，降维知识，都要有所掌握。\n\n###  锻炼扎实的工程能力\n\n    前面强调自己实现算法对于掌握算法的必要性，但在实际开发推荐系统的时候，如无必要，一定不要重复造轮子。推荐系统也是一个软件系统，当然要稳定要高效。开源成熟的轮子当然是首选。实现推荐系统，有一些东西是common sense，有一些是好用的工具，都有必要列出来。\n\n    首当其冲的常识就是Linux操作系统。由于Windows在PC的市场占率的垄断地位，导致很多软件工程师只会在Windows下开发，这是一个非常普遍、严重、又容易被忽视的短板。我自己深有体会，一定要熟练地在Linux下的用命令行编程，如果你的个人电脑是Mac，会好很多，因为macOS底层是Unix操作系统，和Linux是近亲，用Mac的终端基本上类似在Linux下的命令行，如果不是则一定要有自己的Linux环境供自己平时练习，买一台常备的云服务器是一个不错的选择。这里有两个关键点：\n\n    用Linux操作系统；\n    多用命令行而少用IDE（Eclipse、VS等）。\n    为什么呢？有以下三点原因：\n\n    几乎所有推荐系统要用到的开源工具都是首先在Linux下开发测试完成的，最后再考虑移植到Windows平台上（测试不充分或者根本不移植）；\n    键盘比鼠标快，用命令行编程会多用键盘，少用鼠标，熟悉之后效率大大提升。而且Linux下的命令非常丰富，处理的也都是标准文本，掌握之后很多时候根本不用写程序就能做很多数据处理工作。\n    几乎Linux是互联网公司的服务器操作系统标配，不会Linux下的开发，就找不着工作，就问你怕不怕？\n    常常有人问我，实现推荐系统用什么编程语言比较好。标准的官方回答是：用你擅长的语言。但我深知这个回答不会解决提问者的疑问。实际上我的建议是：你需要掌握一门编译型语言：C++或者Java，然后掌握一门解释型语言，推荐Python或者R。原因如下：\n\n    推荐系统的开源项目中以这几种语言最常见；\n    快速的数据分析和处理、模型调试、结果可视化、系统原型实现等，Python和R是不错的选择，尤其是Python；\n    当Python在一些地方有效率瓶颈时，通常是用C++实现，再用Python调用；\n    Java在构建后台服务时很有优势，一些大数据开源项目也多用Java来实现；\n    如果时间有限，只想掌握一门语言的话，推荐Python。从模型到后端服务到web端，都可以用Python，毋庸置疑，Python是AI时代第一编程语言。\n\n    推荐系统是一个线上的产品，无论离线时的模型跑得多么爽，可视化多么酷炫，最终一定要做成在线服务才完整。这就涉及到两方面的工作：1. 系统原型； 2. 算法服务化 。这涉及到：\n\n    数据存储。包括存储模型用于在线实时计算，存储离线计算好的推荐结果。除了传统的关系型数据库MySQL之外，还需要掌握非关系型数据库，如KV数据库Redis，列式数据库Cassandra和HBase常常用来存储推荐结果或模型参数。推荐的候选Item也可能存在MongoDB中。\n    RPC和web。需要将自己的算法计算模块以服务的形式提供给别人跨进程跨服务器调用，因此RPC框架就很重要，最流行如thrift或者dubbo。在RPC服务之上，再做原型还需要会一点基本的web开发知识，Python、PHP、Java都有相应的web框架来迅速的完成最基本的推荐结果展示。\n    当然，最核心的是算法实现。以机器学习算法为主。下面详细列举一下常见的机器学习/深度学习工具：\n\n    Spark MLib：大概是使用最广的机器学习工具了，因为Spark普及很广，带动了一个并非其最核心功能的MLib，MLib实现了常见的线性模型、树模型和矩阵分解模型等。提供Scala、Java和Python接口，提供了很多例子，学习Spark MLib很值得自己运行它提供的例子，结合文档和源代码学习接口的使用，模型的序列化和反序列化。\n    GraphLab/GraphCHI：GraphCHI是开源的单机版，GraphLab是分布式的，但并不开源。所以建议推荐系统工程师重点学习一下GraphCHI，它有Java和C++两个版本，实现了常见的推荐算法，并在单机上能跑出很高的结果。有一个不得不承认的事实是：GraphCHI和GraphLab在业界应用得并不广泛。\n    Angel：腾讯在2017年开源的分布式机器学习平台，Java和Scala开发而成，已经在腾讯的10亿维度下有工业级别的应用，最终的是填补了专注传统机器学习（相对于深度学习）分布式计算的空白，值得去学习一下；由于开发团队是中国人，所以文档以中文为主，学习的时候多多和开发团队交流会受益良多，进步神速。\n    VW：这是Yahoo开源的一个分布式机器学工具，也支持单机，分布式需要借助Hadoop实现。由于主要开发者后来跳槽去了微软，所以还支持Windows平台。阅读这个工具的源码，非常有助于理解逻辑回归的训练，微博推荐团队和广告团队第一版模型训练都采用了VW，其开发者在Yahoo Group中回答问题很积极，使用期间，我在这个group里面提了大大小小十几个问题，基本上都得到解答，这是一个学习成长方法，建议新学者常常在邮件组或者讨论组里提问题，不要在乎问题是否愚蠢，不要在意别人的取笑。\n    Xgboost：这个号称kaggle神器的机器学习工具，非常值得学习和使用，尤其是对于理解Boosting和树模型很有帮助。网上有很多教程，主要开发者陈天奇也是中国人，所以遇到问题是非常容易找到交流的人的。\n    libxxx：这里的xxx是一个通配符，包括以lib开头的各种机器学习工具，如liblinear、libsvm、libfm、libmf。都是单机版的工具，虽然是单机版，但足够解决很多中小型数据集的推荐问题了，著名的scikit-learn中的一些分类算法就是封装的libsvm等工具。另外，libsvm不但是一个机器学习工具，而且它还定义了一种应用广泛，成为事实标准的机器学习训练数据格式：libsvm。\n    MXNet，TensorFlow，Caffe：深度学习大行其道，并且在识别问题上取到了惊人的效果，自然也间接推动了推荐系统的算法升级，因此，掌握深度学习工具的就很必要，其中尤其以TensorFlow为主，它不但有深度学习模型的实现，还有传统机器学习模型的实现，Python接口，对于掌握Python的人来说学习门槛很低。深度学习工具仍然建议去跑几个例子，玩一些有趣的东西会快速入门，如给照片换风格，或者训练一个动物/人脸识别器，可以有一些粗浅的认识。再系统地学习一下吴恩达的在线课程，他的课程对TensorFlow的使用也有讲解，课后编程作业设计得也很好。\n    为最终效果负责的能力\n\n    推荐系统最终要为产品效果负责。衡量推荐系统效果，分为离线和在线两个阶段。\n\n    离线阶段。跑出一些模型，会有定义清晰的指标去衡量模型本身对假设的验证情况，如准确率、召回率、AUC等。这个阶段的效果好，只能说明符合预期假设，但不能保证符合产品最终效果，因此还要有线上实际的检验。\n    在线阶段：除了有一些相对通用的指标，如用户留存率、使用时长、点击率等，更多的是和产品本身的定位息息相关，如短视频推荐关注vv，新闻推荐关注CTR等，这些和商业利益结合更紧密的指标才是最终检验推荐系统效果的指标，推荐系统工程师要为这个负责，而不能仅仅盯着离线部分和技术层面的效果。\n    了解不同产品的展现形式对推荐系统实现的要求，feed流、相关推荐、猜你喜欢等不同产品背后技术要求不同，效果考核不同，多观察、多使用、多思考。\n\n    最后，要学会用产品语言理解产品本身，将技术能力作为一种服务输出给团队其他成员是一项软技能。\n\n    推荐系统领域现状\n\n    协同过滤提出于90年代，至今二十几年，推荐系统技术上先后采用过近邻推荐、基于内容的推荐，以矩阵分解为代表的机器学习方法推荐，最近几年深度学习的火热自然也给推荐系统带来了明显的提升。推荐系统的作用无人质疑，简单举几个例子，80%的Netflix电影都是经由推荐系统被观众观看的，YouTube上60%的点击事件是由推荐系统贡献的。\n\n    推荐系统领域现状是怎么样的呢？这里分别从技术上和产品上来看一看。先看技术上，推荐系统所依赖的技术分为三类：传统的推荐技术、深度学习、强化学习。\n\n    首先，传统的推荐技术仍然非常有效。构建第一版推荐系统仍然需要这些传统推荐系统技术，这包括：User-based和Item-based近邻方法，以文本为主要特征来源的基于内容推荐，以矩阵分解为代表的传统机器学习算法。\n\n    当一个互联网产品的用户行为数据积累到一定程度，我们用这些传统推荐算法来构建第一版推荐系统，大概率上会取得不俗的成绩，实现0的突破。这类传统的推荐算法已经积累了足够多的实践经验和开源实现。由于对推荐系统的需求比以往更广泛，并且这些技术足够成熟，所以这类技术有SaaS化的趋势，逐渐交给专门的第三方公司来做，中小型、垂直公司不会自建团队来完成。\n\n    深度学习在识别问题上取得了不俗的成绩，自然就被推荐系统工程师们盯上了，已经结合到推荐系统中，比如YouTube用DNN构建了他们的视频推荐系统，Google在Google Play中使用Wide&Deep模型，结合了浅层的logistic regression模型和深层模型进行CTR预估，取得了比单用浅层模型或者单独的深层模型更好的效果，Wide&Deep模型也以开源的方式集成在了TensorFlow中，如今很多互联网公司，都在广泛使用这一深度学习和浅层模型结合的模型。在2014年，Spotify就尝试了RNN在序列推荐上，后来RNN又被Yahoo News的推荐系统。传统推荐算法中有一个经典的算法叫做FM，常用于做CTR预估，算是一种浅层模型，最近也有人尝试了结合深度学习，提出DeepFM模型用于CTR预估。\n\n    AlphaGo、Alpha Master、Alpha Zero一个比一个厉害，其开挂的对弈能力，让强化学习进入大众视线。强化学习用于推荐系统是一件很自然的事情，把用户看做变化的环境，而推荐系统是Agent，在和用户的不断交互之间，推荐系统就从一脸懵逼到逐渐“找到北”，迎合了用户兴趣。业界已有应用案例，阿里的研究员仁基就公开分享过淘宝把强化学习应用在搜索推荐上的效果。强化学习还以bandit算法这种相对简单的形式应用在推荐系统很多地方，解决新用户和新物品的冷启动，以及取代ABTest成为另一种在线实验的框架。\n\n    除了技术上推荐系统有不同侧重，产品形式上也有不同的呈现。最初的推荐系统产品总是存活在产品的边角上，如相关推荐，这种产品形式只能算是“锦上添花”，如果推荐系统不小心开了天窗，也不是性命攸关的问题。如今推荐产品已经演化成互联网产品的主要承载形式：信息流。从最早的社交网站动态，到图文信息流，到如今的短视频。信息流是一种推荐系统产品形式，和相关推荐形式比起来，不再是锦上添花，而是注意力收割利器。\n\n    推荐系统产品形式的演进，背景是互联网从PC到移动的演进，PC上是搜索为王，移动下是推荐为王，自然越来越重要。随着各种可穿戴设备的丰富，越来越多的推荐产品还会涌现出来。产品和技术相互协同发展，未来会有更多有意思的推荐算法和产品形式问世，成为一名推荐系统工程师永远都不晚。\n\n\n[原文链接](http://blog.csdn.net/qq_40027052/article/details/78579587)\n","slug":"recommendationsystemengineer","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm4000y2oi8zoyes9jn","content":"<h2 id=\"推荐系统工程师技能树\"><a href=\"#推荐系统工程师技能树\" class=\"headerlink\" title=\"推荐系统工程师技能树\"></a>推荐系统工程师技能树</h2><h3 id=\"掌握核心原理的技能\"><a href=\"#掌握核心原理的技能\" class=\"headerlink\" title=\"掌握核心原理的技能\"></a>掌握核心原理的技能</h3><ul>\n<li>数学：微积分，统计学，线性代数</li>\n<li>周边学科：信息论基础</li>\n<li>推荐算法： CF，LR，SVM，FM，FTRL，GBDT，RF，SVD，RBM，RNN，LSTM，RL</li>\n<li>数据挖掘：分类，聚类，回归，降维，特征选择，模型评价</li>\n</ul>\n<h3 id=\"实现系统检验想法的技能\"><a href=\"#实现系统检验想法的技能\" class=\"headerlink\" title=\"实现系统检验想法的技能\"></a>实现系统检验想法的技能</h3><ul>\n<li><p>操作系统： Linux</p>\n</li>\n<li><p>编程语言： Python/R， Java/C++/C，sql，shell</p>\n</li>\n<li><p>RPC框架： thrift， Dubbo，gRPC</p>\n</li>\n<li><p>web服务： tornado, django, flask</p>\n</li>\n<li><p>数据存储： redis, hbase, cassandra, mongodb, mysql, hdfs，hive, kafka, elasticsearch</p>\n</li>\n<li><p>机器学习/深度学习： Spark MLib，GraphLab/GraphCHI，Angel，MXNet，TensorFlow，Caffe, Xgboost，VW，libxxx</p>\n</li>\n<li><p>文本处理： Word2vec，Fasttext，Gensim，NLTK</p>\n</li>\n<li><p>矩阵分解： Spark ALS，GraphCHI，implicit，qmf，libfm</p>\n</li>\n<li><p>相似计算： kgraph, annoy，nmslib, GraphCHI, columnSimilarities(spark.RowMatrix)</p>\n</li>\n<li><p>实时计算： Spark Streaming, Storm，Samza</p>\n<h3 id=\"为效果负责的技能\"><a href=\"#为效果负责的技能\" class=\"headerlink\" title=\"为效果负责的技能\"></a>为效果负责的技能</h3></li>\n<li><p>熟悉常见离线效果指标：准确率，召回率，AUC，基尼系数</p>\n</li>\n<li><p>能够定义产品效果指标：点击率，留存率，转换率，观看完整率</p>\n</li>\n<li><p>会做对比试验并分析实验结果：指标数据可视化</p>\n</li>\n<li><p>知道常见推荐产品的区别： Feed流推荐，相关推荐，TopN推荐，个性化推送</p>\n<h3 id=\"其他软技能\"><a href=\"#其他软技能\" class=\"headerlink\" title=\"其他软技能\"></a>其他软技能</h3></li>\n<li><p>英文阅读；读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；</p>\n</li>\n<li><p>代码阅读；能阅读开源代码，从中学习优秀项目对经典算法的实现；</p>\n</li>\n<li><p>沟通表达；能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真需求和伪需求并且能达成一致。</p>\n</li>\n</ul>\n<h3 id=\"推荐系统工程师成长路线图\"><a href=\"#推荐系统工程师成长路线图\" class=\"headerlink\" title=\"推荐系统工程师成长路线图\"></a>推荐系统工程师成长路线图</h3><p>《Item-based collaborative filtering recommendation algorithms》这篇文章发表于2001年，在Google学术上显示，其被引用次数已经是6599了，可见其给推荐系统带来的影响之大。</p>\n<pre><code>经过20多年的发展，item-based已经成为推荐系统的标配，而推荐系统已经成为互联网产品的标配。很多产品甚至在第一版就要被投资人或者创始人要求必须“个性化”，可见，推荐系统已经飞入寻常百姓家，作为推荐系统工程师的成长也要比从前更容易，要知道我刚工作时，即使跟同为研发工程师的其他人如PHP工程师（绝无黑的意思，是真的）说“我是做推荐的”，他们也一脸茫然，不知道“推荐”为什么是一个工程师岗位。</code></pre><p>  如今纵然“大数据”， “AI”，这些词每天360度无死角轰炸我们，让我们很容易浮躁异常焦虑不堪，但不得不承认，这是作为推荐系统工程师的一个好时代。</p>\n<pre><code>图片描述\n\n图1 推荐系统工程师技能树\n推荐系统工程师和正常码农们相比，无需把PM们扔过来的需求给像素级实现，从而堆码成山；和机器学习研究员相比，又无需沉迷数学推导，憋出一个漂亮自洽的模型，一统学术界的争论；和数据分析师相比，也不需绘制漂亮的图表，做出酷炫的PPT能给CEO汇报，走上人生巅峰。\n\n那推荐系统工程师的定位是什么呢？为什么需要前面提到的那些技能呢？容我结合自身经历来一一解答。我把推荐系统工程师的技能分为四个维度：</code></pre><h3 id=\"掌握核心原理的技能，是一种知其所以然的基础技能；\"><a href=\"#掌握核心原理的技能，是一种知其所以然的基础技能；\" class=\"headerlink\" title=\"掌握核心原理的技能，是一种知其所以然的基础技能；\"></a>掌握核心原理的技能，是一种知其所以然的基础技能；</h3><ul>\n<li><p>动手能力：实现系统，检验想法，都需要扎实的工程能力；</p>\n</li>\n<li><p>为效果负责的能力：这是推荐系统工程师和其他工种的最大区别；</p>\n</li>\n<li><p>软技能：任何工程师都需要自我成长，需要团队协作。 </p>\n</li>\n<li><p>英文阅读：读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；</p>\n</li>\n<li><p>代码阅读：能阅读开源代码，从中学习优秀项目对经典算法的实现；</p>\n</li>\n<li><p>沟通表达：能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真伪需求并且能达成一致。</p>\n<h3 id=\"掌握最最基础的原理\"><a href=\"#掌握最最基础的原理\" class=\"headerlink\" title=\"掌握最最基础的原理\"></a>掌握最最基础的原理</h3><p>托开源的福气，现在有很多开箱即用的工具让我们很容易搭建起一个推荐系统。但是浮沙上面筑不起高塔，基础知识必须要有，否则就会在行业里面，被一轮轮概念旋风吹得找不着北。所有基础里面，最最基础的当然就是数学了。</p>\n<p>能够看懂一些经典论文对于实现系统非常有帮助：从基本假设到形式化定义，从推导到算法流程，从实验设计到结果分析。这些要求我们对于微积分有基本的知识，有了基本的微积分知识才能看懂梯度下降等基本的优化方法。</p>\n<p>概率和统计知识给我们建立起一个推荐系统工程师最基本的三观：不要以是非绝对的眼光看待事物，要有用不确定性思维去思考产品中的每一个事件，因为实现推荐系统，并不是像实现界面上一个按钮的响应事件那样明确可检验。大数据构建了一个高维的数据空间，从数据到推荐目标基本上都可以用矩阵的角度去形式化，比如常见的推荐算法：协同过滤、矩阵分解。</p>\n<p>而机器学习算法，如果用矩阵运算角度去看，会让我们更加能够理解“向量化计算”和传统软件工程里面的循环之间的巨大差异。高维向量之间的点积，矩阵之间的运算，如果用向量化方式实现比用循环方式实现，高效不少。建立这样的思维模式，也需要学好线性代数。</p>\n<p>学好基础的数学知识之外，我们要稍微延伸学习一些信息科学的基础学科，尤其是信息论。信息论是构建在概率基础上的，信息论给了很多计算机领域问题一个基本的框架：把问题看做是通信问题。</p>\n<p>推荐系统要解决的问题也是一个通信问题：用户在以很不明确的方式向我们的产品发报，告诉我们他最喜欢/讨厌的是什么，我们在收到了之后要解码，并且还要给他们回信，如果沟通不顺畅，那用户就会失联。我的专业是信息与通信工程。</p>\n<p>读研时从事过NLP相关的课题研究，NLP里面很多问题和方法都用到了信息论知识，这样让我深受信息论影响。有了这些基础知识，再去跟踪不断涌现的新算法新模型，就会容易得多。</p>\n<p>推荐系统会用到很多传统数据挖掘和机器学习方法。掌握经典的机器学习算法是一个事半功倍的事情，比如逻辑回归，是一个很简单的分类算法，但它在推荐领域应用之广，其他算法无出其右。在吴恩达的深度学习课程里，从逻辑回归入手逐渐讲到多层神经网络，讲到更复杂的RNN等。应该怎么掌握这些经典的算法呢？最直接的办法是：自己从0实现一遍。</p>\n<p>推荐系统不只是模型，推荐系统是一整个数据处理流程，所以模型的上游，就是一些数据挖掘的知识也需要掌握，基本的分类聚类知识，降维知识，都要有所掌握。</p>\n</li>\n</ul>\n<h3 id=\"锻炼扎实的工程能力\"><a href=\"#锻炼扎实的工程能力\" class=\"headerlink\" title=\"锻炼扎实的工程能力\"></a>锻炼扎实的工程能力</h3><pre><code>前面强调自己实现算法对于掌握算法的必要性，但在实际开发推荐系统的时候，如无必要，一定不要重复造轮子。推荐系统也是一个软件系统，当然要稳定要高效。开源成熟的轮子当然是首选。实现推荐系统，有一些东西是common sense，有一些是好用的工具，都有必要列出来。\n\n首当其冲的常识就是Linux操作系统。由于Windows在PC的市场占率的垄断地位，导致很多软件工程师只会在Windows下开发，这是一个非常普遍、严重、又容易被忽视的短板。我自己深有体会，一定要熟练地在Linux下的用命令行编程，如果你的个人电脑是Mac，会好很多，因为macOS底层是Unix操作系统，和Linux是近亲，用Mac的终端基本上类似在Linux下的命令行，如果不是则一定要有自己的Linux环境供自己平时练习，买一台常备的云服务器是一个不错的选择。这里有两个关键点：\n\n用Linux操作系统；\n多用命令行而少用IDE（Eclipse、VS等）。\n为什么呢？有以下三点原因：\n\n几乎所有推荐系统要用到的开源工具都是首先在Linux下开发测试完成的，最后再考虑移植到Windows平台上（测试不充分或者根本不移植）；\n键盘比鼠标快，用命令行编程会多用键盘，少用鼠标，熟悉之后效率大大提升。而且Linux下的命令非常丰富，处理的也都是标准文本，掌握之后很多时候根本不用写程序就能做很多数据处理工作。\n几乎Linux是互联网公司的服务器操作系统标配，不会Linux下的开发，就找不着工作，就问你怕不怕？\n常常有人问我，实现推荐系统用什么编程语言比较好。标准的官方回答是：用你擅长的语言。但我深知这个回答不会解决提问者的疑问。实际上我的建议是：你需要掌握一门编译型语言：C++或者Java，然后掌握一门解释型语言，推荐Python或者R。原因如下：\n\n推荐系统的开源项目中以这几种语言最常见；\n快速的数据分析和处理、模型调试、结果可视化、系统原型实现等，Python和R是不错的选择，尤其是Python；\n当Python在一些地方有效率瓶颈时，通常是用C++实现，再用Python调用；\nJava在构建后台服务时很有优势，一些大数据开源项目也多用Java来实现；\n如果时间有限，只想掌握一门语言的话，推荐Python。从模型到后端服务到web端，都可以用Python，毋庸置疑，Python是AI时代第一编程语言。\n\n推荐系统是一个线上的产品，无论离线时的模型跑得多么爽，可视化多么酷炫，最终一定要做成在线服务才完整。这就涉及到两方面的工作：1. 系统原型； 2. 算法服务化 。这涉及到：\n\n数据存储。包括存储模型用于在线实时计算，存储离线计算好的推荐结果。除了传统的关系型数据库MySQL之外，还需要掌握非关系型数据库，如KV数据库Redis，列式数据库Cassandra和HBase常常用来存储推荐结果或模型参数。推荐的候选Item也可能存在MongoDB中。\nRPC和web。需要将自己的算法计算模块以服务的形式提供给别人跨进程跨服务器调用，因此RPC框架就很重要，最流行如thrift或者dubbo。在RPC服务之上，再做原型还需要会一点基本的web开发知识，Python、PHP、Java都有相应的web框架来迅速的完成最基本的推荐结果展示。\n当然，最核心的是算法实现。以机器学习算法为主。下面详细列举一下常见的机器学习/深度学习工具：\n\nSpark MLib：大概是使用最广的机器学习工具了，因为Spark普及很广，带动了一个并非其最核心功能的MLib，MLib实现了常见的线性模型、树模型和矩阵分解模型等。提供Scala、Java和Python接口，提供了很多例子，学习Spark MLib很值得自己运行它提供的例子，结合文档和源代码学习接口的使用，模型的序列化和反序列化。\nGraphLab/GraphCHI：GraphCHI是开源的单机版，GraphLab是分布式的，但并不开源。所以建议推荐系统工程师重点学习一下GraphCHI，它有Java和C++两个版本，实现了常见的推荐算法，并在单机上能跑出很高的结果。有一个不得不承认的事实是：GraphCHI和GraphLab在业界应用得并不广泛。\nAngel：腾讯在2017年开源的分布式机器学习平台，Java和Scala开发而成，已经在腾讯的10亿维度下有工业级别的应用，最终的是填补了专注传统机器学习（相对于深度学习）分布式计算的空白，值得去学习一下；由于开发团队是中国人，所以文档以中文为主，学习的时候多多和开发团队交流会受益良多，进步神速。\nVW：这是Yahoo开源的一个分布式机器学工具，也支持单机，分布式需要借助Hadoop实现。由于主要开发者后来跳槽去了微软，所以还支持Windows平台。阅读这个工具的源码，非常有助于理解逻辑回归的训练，微博推荐团队和广告团队第一版模型训练都采用了VW，其开发者在Yahoo Group中回答问题很积极，使用期间，我在这个group里面提了大大小小十几个问题，基本上都得到解答，这是一个学习成长方法，建议新学者常常在邮件组或者讨论组里提问题，不要在乎问题是否愚蠢，不要在意别人的取笑。\nXgboost：这个号称kaggle神器的机器学习工具，非常值得学习和使用，尤其是对于理解Boosting和树模型很有帮助。网上有很多教程，主要开发者陈天奇也是中国人，所以遇到问题是非常容易找到交流的人的。\nlibxxx：这里的xxx是一个通配符，包括以lib开头的各种机器学习工具，如liblinear、libsvm、libfm、libmf。都是单机版的工具，虽然是单机版，但足够解决很多中小型数据集的推荐问题了，著名的scikit-learn中的一些分类算法就是封装的libsvm等工具。另外，libsvm不但是一个机器学习工具，而且它还定义了一种应用广泛，成为事实标准的机器学习训练数据格式：libsvm。\nMXNet，TensorFlow，Caffe：深度学习大行其道，并且在识别问题上取到了惊人的效果，自然也间接推动了推荐系统的算法升级，因此，掌握深度学习工具的就很必要，其中尤其以TensorFlow为主，它不但有深度学习模型的实现，还有传统机器学习模型的实现，Python接口，对于掌握Python的人来说学习门槛很低。深度学习工具仍然建议去跑几个例子，玩一些有趣的东西会快速入门，如给照片换风格，或者训练一个动物/人脸识别器，可以有一些粗浅的认识。再系统地学习一下吴恩达的在线课程，他的课程对TensorFlow的使用也有讲解，课后编程作业设计得也很好。\n为最终效果负责的能力\n\n推荐系统最终要为产品效果负责。衡量推荐系统效果，分为离线和在线两个阶段。\n\n离线阶段。跑出一些模型，会有定义清晰的指标去衡量模型本身对假设的验证情况，如准确率、召回率、AUC等。这个阶段的效果好，只能说明符合预期假设，但不能保证符合产品最终效果，因此还要有线上实际的检验。\n在线阶段：除了有一些相对通用的指标，如用户留存率、使用时长、点击率等，更多的是和产品本身的定位息息相关，如短视频推荐关注vv，新闻推荐关注CTR等，这些和商业利益结合更紧密的指标才是最终检验推荐系统效果的指标，推荐系统工程师要为这个负责，而不能仅仅盯着离线部分和技术层面的效果。\n了解不同产品的展现形式对推荐系统实现的要求，feed流、相关推荐、猜你喜欢等不同产品背后技术要求不同，效果考核不同，多观察、多使用、多思考。\n\n最后，要学会用产品语言理解产品本身，将技术能力作为一种服务输出给团队其他成员是一项软技能。\n\n推荐系统领域现状\n\n协同过滤提出于90年代，至今二十几年，推荐系统技术上先后采用过近邻推荐、基于内容的推荐，以矩阵分解为代表的机器学习方法推荐，最近几年深度学习的火热自然也给推荐系统带来了明显的提升。推荐系统的作用无人质疑，简单举几个例子，80%的Netflix电影都是经由推荐系统被观众观看的，YouTube上60%的点击事件是由推荐系统贡献的。\n\n推荐系统领域现状是怎么样的呢？这里分别从技术上和产品上来看一看。先看技术上，推荐系统所依赖的技术分为三类：传统的推荐技术、深度学习、强化学习。\n\n首先，传统的推荐技术仍然非常有效。构建第一版推荐系统仍然需要这些传统推荐系统技术，这包括：User-based和Item-based近邻方法，以文本为主要特征来源的基于内容推荐，以矩阵分解为代表的传统机器学习算法。\n\n当一个互联网产品的用户行为数据积累到一定程度，我们用这些传统推荐算法来构建第一版推荐系统，大概率上会取得不俗的成绩，实现0的突破。这类传统的推荐算法已经积累了足够多的实践经验和开源实现。由于对推荐系统的需求比以往更广泛，并且这些技术足够成熟，所以这类技术有SaaS化的趋势，逐渐交给专门的第三方公司来做，中小型、垂直公司不会自建团队来完成。\n\n深度学习在识别问题上取得了不俗的成绩，自然就被推荐系统工程师们盯上了，已经结合到推荐系统中，比如YouTube用DNN构建了他们的视频推荐系统，Google在Google Play中使用Wide&amp;Deep模型，结合了浅层的logistic regression模型和深层模型进行CTR预估，取得了比单用浅层模型或者单独的深层模型更好的效果，Wide&amp;Deep模型也以开源的方式集成在了TensorFlow中，如今很多互联网公司，都在广泛使用这一深度学习和浅层模型结合的模型。在2014年，Spotify就尝试了RNN在序列推荐上，后来RNN又被Yahoo News的推荐系统。传统推荐算法中有一个经典的算法叫做FM，常用于做CTR预估，算是一种浅层模型，最近也有人尝试了结合深度学习，提出DeepFM模型用于CTR预估。\n\nAlphaGo、Alpha Master、Alpha Zero一个比一个厉害，其开挂的对弈能力，让强化学习进入大众视线。强化学习用于推荐系统是一件很自然的事情，把用户看做变化的环境，而推荐系统是Agent，在和用户的不断交互之间，推荐系统就从一脸懵逼到逐渐“找到北”，迎合了用户兴趣。业界已有应用案例，阿里的研究员仁基就公开分享过淘宝把强化学习应用在搜索推荐上的效果。强化学习还以bandit算法这种相对简单的形式应用在推荐系统很多地方，解决新用户和新物品的冷启动，以及取代ABTest成为另一种在线实验的框架。\n\n除了技术上推荐系统有不同侧重，产品形式上也有不同的呈现。最初的推荐系统产品总是存活在产品的边角上，如相关推荐，这种产品形式只能算是“锦上添花”，如果推荐系统不小心开了天窗，也不是性命攸关的问题。如今推荐产品已经演化成互联网产品的主要承载形式：信息流。从最早的社交网站动态，到图文信息流，到如今的短视频。信息流是一种推荐系统产品形式，和相关推荐形式比起来，不再是锦上添花，而是注意力收割利器。\n\n推荐系统产品形式的演进，背景是互联网从PC到移动的演进，PC上是搜索为王，移动下是推荐为王，自然越来越重要。随着各种可穿戴设备的丰富，越来越多的推荐产品还会涌现出来。产品和技术相互协同发展，未来会有更多有意思的推荐算法和产品形式问世，成为一名推荐系统工程师永远都不晚。</code></pre><p><a href=\"http://blog.csdn.net/qq_40027052/article/details/78579587\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"推荐系统工程师技能树\"><a href=\"#推荐系统工程师技能树\" class=\"headerlink\" title=\"推荐系统工程师技能树\"></a>推荐系统工程师技能树</h2><h3 id=\"掌握核心原理的技能\"><a href=\"#掌握核心原理的技能\" class=\"headerlink\" title=\"掌握核心原理的技能\"></a>掌握核心原理的技能</h3><ul>\n<li>数学：微积分，统计学，线性代数</li>\n<li>周边学科：信息论基础</li>\n<li>推荐算法： CF，LR，SVM，FM，FTRL，GBDT，RF，SVD，RBM，RNN，LSTM，RL</li>\n<li>数据挖掘：分类，聚类，回归，降维，特征选择，模型评价</li>\n</ul>\n<h3 id=\"实现系统检验想法的技能\"><a href=\"#实现系统检验想法的技能\" class=\"headerlink\" title=\"实现系统检验想法的技能\"></a>实现系统检验想法的技能</h3><ul>\n<li><p>操作系统： Linux</p>\n</li>\n<li><p>编程语言： Python/R， Java/C++/C，sql，shell</p>\n</li>\n<li><p>RPC框架： thrift， Dubbo，gRPC</p>\n</li>\n<li><p>web服务： tornado, django, flask</p>\n</li>\n<li><p>数据存储： redis, hbase, cassandra, mongodb, mysql, hdfs，hive, kafka, elasticsearch</p>\n</li>\n<li><p>机器学习/深度学习： Spark MLib，GraphLab/GraphCHI，Angel，MXNet，TensorFlow，Caffe, Xgboost，VW，libxxx</p>\n</li>\n<li><p>文本处理： Word2vec，Fasttext，Gensim，NLTK</p>\n</li>\n<li><p>矩阵分解： Spark ALS，GraphCHI，implicit，qmf，libfm</p>\n</li>\n<li><p>相似计算： kgraph, annoy，nmslib, GraphCHI, columnSimilarities(spark.RowMatrix)</p>\n</li>\n<li><p>实时计算： Spark Streaming, Storm，Samza</p>\n<h3 id=\"为效果负责的技能\"><a href=\"#为效果负责的技能\" class=\"headerlink\" title=\"为效果负责的技能\"></a>为效果负责的技能</h3></li>\n<li><p>熟悉常见离线效果指标：准确率，召回率，AUC，基尼系数</p>\n</li>\n<li><p>能够定义产品效果指标：点击率，留存率，转换率，观看完整率</p>\n</li>\n<li><p>会做对比试验并分析实验结果：指标数据可视化</p>\n</li>\n<li><p>知道常见推荐产品的区别： Feed流推荐，相关推荐，TopN推荐，个性化推送</p>\n<h3 id=\"其他软技能\"><a href=\"#其他软技能\" class=\"headerlink\" title=\"其他软技能\"></a>其他软技能</h3></li>\n<li><p>英文阅读；读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；</p>\n</li>\n<li><p>代码阅读；能阅读开源代码，从中学习优秀项目对经典算法的实现；</p>\n</li>\n<li><p>沟通表达；能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真需求和伪需求并且能达成一致。</p>\n</li>\n</ul>\n<h3 id=\"推荐系统工程师成长路线图\"><a href=\"#推荐系统工程师成长路线图\" class=\"headerlink\" title=\"推荐系统工程师成长路线图\"></a>推荐系统工程师成长路线图</h3><p>《Item-based collaborative filtering recommendation algorithms》这篇文章发表于2001年，在Google学术上显示，其被引用次数已经是6599了，可见其给推荐系统带来的影响之大。</p>\n<pre><code>经过20多年的发展，item-based已经成为推荐系统的标配，而推荐系统已经成为互联网产品的标配。很多产品甚至在第一版就要被投资人或者创始人要求必须“个性化”，可见，推荐系统已经飞入寻常百姓家，作为推荐系统工程师的成长也要比从前更容易，要知道我刚工作时，即使跟同为研发工程师的其他人如PHP工程师（绝无黑的意思，是真的）说“我是做推荐的”，他们也一脸茫然，不知道“推荐”为什么是一个工程师岗位。</code></pre><p>  如今纵然“大数据”， “AI”，这些词每天360度无死角轰炸我们，让我们很容易浮躁异常焦虑不堪，但不得不承认，这是作为推荐系统工程师的一个好时代。</p>\n<pre><code>图片描述\n\n图1 推荐系统工程师技能树\n推荐系统工程师和正常码农们相比，无需把PM们扔过来的需求给像素级实现，从而堆码成山；和机器学习研究员相比，又无需沉迷数学推导，憋出一个漂亮自洽的模型，一统学术界的争论；和数据分析师相比，也不需绘制漂亮的图表，做出酷炫的PPT能给CEO汇报，走上人生巅峰。\n\n那推荐系统工程师的定位是什么呢？为什么需要前面提到的那些技能呢？容我结合自身经历来一一解答。我把推荐系统工程师的技能分为四个维度：</code></pre><h3 id=\"掌握核心原理的技能，是一种知其所以然的基础技能；\"><a href=\"#掌握核心原理的技能，是一种知其所以然的基础技能；\" class=\"headerlink\" title=\"掌握核心原理的技能，是一种知其所以然的基础技能；\"></a>掌握核心原理的技能，是一种知其所以然的基础技能；</h3><ul>\n<li><p>动手能力：实现系统，检验想法，都需要扎实的工程能力；</p>\n</li>\n<li><p>为效果负责的能力：这是推荐系统工程师和其他工种的最大区别；</p>\n</li>\n<li><p>软技能：任何工程师都需要自我成长，需要团队协作。 </p>\n</li>\n<li><p>英文阅读：读顶级会议的论文、一流公司和行业前辈的经典论文和技术博客，在Quora和Stack Overflow上和人交流探讨；</p>\n</li>\n<li><p>代码阅读：能阅读开源代码，从中学习优秀项目对经典算法的实现；</p>\n</li>\n<li><p>沟通表达：能够和其他岗位的人员沟通交流，讲明白所负责模块的原理和方法，能听懂非技术人员的要求和思维，能分别真伪需求并且能达成一致。</p>\n<h3 id=\"掌握最最基础的原理\"><a href=\"#掌握最最基础的原理\" class=\"headerlink\" title=\"掌握最最基础的原理\"></a>掌握最最基础的原理</h3><p>托开源的福气，现在有很多开箱即用的工具让我们很容易搭建起一个推荐系统。但是浮沙上面筑不起高塔，基础知识必须要有，否则就会在行业里面，被一轮轮概念旋风吹得找不着北。所有基础里面，最最基础的当然就是数学了。</p>\n<p>能够看懂一些经典论文对于实现系统非常有帮助：从基本假设到形式化定义，从推导到算法流程，从实验设计到结果分析。这些要求我们对于微积分有基本的知识，有了基本的微积分知识才能看懂梯度下降等基本的优化方法。</p>\n<p>概率和统计知识给我们建立起一个推荐系统工程师最基本的三观：不要以是非绝对的眼光看待事物，要有用不确定性思维去思考产品中的每一个事件，因为实现推荐系统，并不是像实现界面上一个按钮的响应事件那样明确可检验。大数据构建了一个高维的数据空间，从数据到推荐目标基本上都可以用矩阵的角度去形式化，比如常见的推荐算法：协同过滤、矩阵分解。</p>\n<p>而机器学习算法，如果用矩阵运算角度去看，会让我们更加能够理解“向量化计算”和传统软件工程里面的循环之间的巨大差异。高维向量之间的点积，矩阵之间的运算，如果用向量化方式实现比用循环方式实现，高效不少。建立这样的思维模式，也需要学好线性代数。</p>\n<p>学好基础的数学知识之外，我们要稍微延伸学习一些信息科学的基础学科，尤其是信息论。信息论是构建在概率基础上的，信息论给了很多计算机领域问题一个基本的框架：把问题看做是通信问题。</p>\n<p>推荐系统要解决的问题也是一个通信问题：用户在以很不明确的方式向我们的产品发报，告诉我们他最喜欢/讨厌的是什么，我们在收到了之后要解码，并且还要给他们回信，如果沟通不顺畅，那用户就会失联。我的专业是信息与通信工程。</p>\n<p>读研时从事过NLP相关的课题研究，NLP里面很多问题和方法都用到了信息论知识，这样让我深受信息论影响。有了这些基础知识，再去跟踪不断涌现的新算法新模型，就会容易得多。</p>\n<p>推荐系统会用到很多传统数据挖掘和机器学习方法。掌握经典的机器学习算法是一个事半功倍的事情，比如逻辑回归，是一个很简单的分类算法，但它在推荐领域应用之广，其他算法无出其右。在吴恩达的深度学习课程里，从逻辑回归入手逐渐讲到多层神经网络，讲到更复杂的RNN等。应该怎么掌握这些经典的算法呢？最直接的办法是：自己从0实现一遍。</p>\n<p>推荐系统不只是模型，推荐系统是一整个数据处理流程，所以模型的上游，就是一些数据挖掘的知识也需要掌握，基本的分类聚类知识，降维知识，都要有所掌握。</p>\n</li>\n</ul>\n<h3 id=\"锻炼扎实的工程能力\"><a href=\"#锻炼扎实的工程能力\" class=\"headerlink\" title=\"锻炼扎实的工程能力\"></a>锻炼扎实的工程能力</h3><pre><code>前面强调自己实现算法对于掌握算法的必要性，但在实际开发推荐系统的时候，如无必要，一定不要重复造轮子。推荐系统也是一个软件系统，当然要稳定要高效。开源成熟的轮子当然是首选。实现推荐系统，有一些东西是common sense，有一些是好用的工具，都有必要列出来。\n\n首当其冲的常识就是Linux操作系统。由于Windows在PC的市场占率的垄断地位，导致很多软件工程师只会在Windows下开发，这是一个非常普遍、严重、又容易被忽视的短板。我自己深有体会，一定要熟练地在Linux下的用命令行编程，如果你的个人电脑是Mac，会好很多，因为macOS底层是Unix操作系统，和Linux是近亲，用Mac的终端基本上类似在Linux下的命令行，如果不是则一定要有自己的Linux环境供自己平时练习，买一台常备的云服务器是一个不错的选择。这里有两个关键点：\n\n用Linux操作系统；\n多用命令行而少用IDE（Eclipse、VS等）。\n为什么呢？有以下三点原因：\n\n几乎所有推荐系统要用到的开源工具都是首先在Linux下开发测试完成的，最后再考虑移植到Windows平台上（测试不充分或者根本不移植）；\n键盘比鼠标快，用命令行编程会多用键盘，少用鼠标，熟悉之后效率大大提升。而且Linux下的命令非常丰富，处理的也都是标准文本，掌握之后很多时候根本不用写程序就能做很多数据处理工作。\n几乎Linux是互联网公司的服务器操作系统标配，不会Linux下的开发，就找不着工作，就问你怕不怕？\n常常有人问我，实现推荐系统用什么编程语言比较好。标准的官方回答是：用你擅长的语言。但我深知这个回答不会解决提问者的疑问。实际上我的建议是：你需要掌握一门编译型语言：C++或者Java，然后掌握一门解释型语言，推荐Python或者R。原因如下：\n\n推荐系统的开源项目中以这几种语言最常见；\n快速的数据分析和处理、模型调试、结果可视化、系统原型实现等，Python和R是不错的选择，尤其是Python；\n当Python在一些地方有效率瓶颈时，通常是用C++实现，再用Python调用；\nJava在构建后台服务时很有优势，一些大数据开源项目也多用Java来实现；\n如果时间有限，只想掌握一门语言的话，推荐Python。从模型到后端服务到web端，都可以用Python，毋庸置疑，Python是AI时代第一编程语言。\n\n推荐系统是一个线上的产品，无论离线时的模型跑得多么爽，可视化多么酷炫，最终一定要做成在线服务才完整。这就涉及到两方面的工作：1. 系统原型； 2. 算法服务化 。这涉及到：\n\n数据存储。包括存储模型用于在线实时计算，存储离线计算好的推荐结果。除了传统的关系型数据库MySQL之外，还需要掌握非关系型数据库，如KV数据库Redis，列式数据库Cassandra和HBase常常用来存储推荐结果或模型参数。推荐的候选Item也可能存在MongoDB中。\nRPC和web。需要将自己的算法计算模块以服务的形式提供给别人跨进程跨服务器调用，因此RPC框架就很重要，最流行如thrift或者dubbo。在RPC服务之上，再做原型还需要会一点基本的web开发知识，Python、PHP、Java都有相应的web框架来迅速的完成最基本的推荐结果展示。\n当然，最核心的是算法实现。以机器学习算法为主。下面详细列举一下常见的机器学习/深度学习工具：\n\nSpark MLib：大概是使用最广的机器学习工具了，因为Spark普及很广，带动了一个并非其最核心功能的MLib，MLib实现了常见的线性模型、树模型和矩阵分解模型等。提供Scala、Java和Python接口，提供了很多例子，学习Spark MLib很值得自己运行它提供的例子，结合文档和源代码学习接口的使用，模型的序列化和反序列化。\nGraphLab/GraphCHI：GraphCHI是开源的单机版，GraphLab是分布式的，但并不开源。所以建议推荐系统工程师重点学习一下GraphCHI，它有Java和C++两个版本，实现了常见的推荐算法，并在单机上能跑出很高的结果。有一个不得不承认的事实是：GraphCHI和GraphLab在业界应用得并不广泛。\nAngel：腾讯在2017年开源的分布式机器学习平台，Java和Scala开发而成，已经在腾讯的10亿维度下有工业级别的应用，最终的是填补了专注传统机器学习（相对于深度学习）分布式计算的空白，值得去学习一下；由于开发团队是中国人，所以文档以中文为主，学习的时候多多和开发团队交流会受益良多，进步神速。\nVW：这是Yahoo开源的一个分布式机器学工具，也支持单机，分布式需要借助Hadoop实现。由于主要开发者后来跳槽去了微软，所以还支持Windows平台。阅读这个工具的源码，非常有助于理解逻辑回归的训练，微博推荐团队和广告团队第一版模型训练都采用了VW，其开发者在Yahoo Group中回答问题很积极，使用期间，我在这个group里面提了大大小小十几个问题，基本上都得到解答，这是一个学习成长方法，建议新学者常常在邮件组或者讨论组里提问题，不要在乎问题是否愚蠢，不要在意别人的取笑。\nXgboost：这个号称kaggle神器的机器学习工具，非常值得学习和使用，尤其是对于理解Boosting和树模型很有帮助。网上有很多教程，主要开发者陈天奇也是中国人，所以遇到问题是非常容易找到交流的人的。\nlibxxx：这里的xxx是一个通配符，包括以lib开头的各种机器学习工具，如liblinear、libsvm、libfm、libmf。都是单机版的工具，虽然是单机版，但足够解决很多中小型数据集的推荐问题了，著名的scikit-learn中的一些分类算法就是封装的libsvm等工具。另外，libsvm不但是一个机器学习工具，而且它还定义了一种应用广泛，成为事实标准的机器学习训练数据格式：libsvm。\nMXNet，TensorFlow，Caffe：深度学习大行其道，并且在识别问题上取到了惊人的效果，自然也间接推动了推荐系统的算法升级，因此，掌握深度学习工具的就很必要，其中尤其以TensorFlow为主，它不但有深度学习模型的实现，还有传统机器学习模型的实现，Python接口，对于掌握Python的人来说学习门槛很低。深度学习工具仍然建议去跑几个例子，玩一些有趣的东西会快速入门，如给照片换风格，或者训练一个动物/人脸识别器，可以有一些粗浅的认识。再系统地学习一下吴恩达的在线课程，他的课程对TensorFlow的使用也有讲解，课后编程作业设计得也很好。\n为最终效果负责的能力\n\n推荐系统最终要为产品效果负责。衡量推荐系统效果，分为离线和在线两个阶段。\n\n离线阶段。跑出一些模型，会有定义清晰的指标去衡量模型本身对假设的验证情况，如准确率、召回率、AUC等。这个阶段的效果好，只能说明符合预期假设，但不能保证符合产品最终效果，因此还要有线上实际的检验。\n在线阶段：除了有一些相对通用的指标，如用户留存率、使用时长、点击率等，更多的是和产品本身的定位息息相关，如短视频推荐关注vv，新闻推荐关注CTR等，这些和商业利益结合更紧密的指标才是最终检验推荐系统效果的指标，推荐系统工程师要为这个负责，而不能仅仅盯着离线部分和技术层面的效果。\n了解不同产品的展现形式对推荐系统实现的要求，feed流、相关推荐、猜你喜欢等不同产品背后技术要求不同，效果考核不同，多观察、多使用、多思考。\n\n最后，要学会用产品语言理解产品本身，将技术能力作为一种服务输出给团队其他成员是一项软技能。\n\n推荐系统领域现状\n\n协同过滤提出于90年代，至今二十几年，推荐系统技术上先后采用过近邻推荐、基于内容的推荐，以矩阵分解为代表的机器学习方法推荐，最近几年深度学习的火热自然也给推荐系统带来了明显的提升。推荐系统的作用无人质疑，简单举几个例子，80%的Netflix电影都是经由推荐系统被观众观看的，YouTube上60%的点击事件是由推荐系统贡献的。\n\n推荐系统领域现状是怎么样的呢？这里分别从技术上和产品上来看一看。先看技术上，推荐系统所依赖的技术分为三类：传统的推荐技术、深度学习、强化学习。\n\n首先，传统的推荐技术仍然非常有效。构建第一版推荐系统仍然需要这些传统推荐系统技术，这包括：User-based和Item-based近邻方法，以文本为主要特征来源的基于内容推荐，以矩阵分解为代表的传统机器学习算法。\n\n当一个互联网产品的用户行为数据积累到一定程度，我们用这些传统推荐算法来构建第一版推荐系统，大概率上会取得不俗的成绩，实现0的突破。这类传统的推荐算法已经积累了足够多的实践经验和开源实现。由于对推荐系统的需求比以往更广泛，并且这些技术足够成熟，所以这类技术有SaaS化的趋势，逐渐交给专门的第三方公司来做，中小型、垂直公司不会自建团队来完成。\n\n深度学习在识别问题上取得了不俗的成绩，自然就被推荐系统工程师们盯上了，已经结合到推荐系统中，比如YouTube用DNN构建了他们的视频推荐系统，Google在Google Play中使用Wide&amp;Deep模型，结合了浅层的logistic regression模型和深层模型进行CTR预估，取得了比单用浅层模型或者单独的深层模型更好的效果，Wide&amp;Deep模型也以开源的方式集成在了TensorFlow中，如今很多互联网公司，都在广泛使用这一深度学习和浅层模型结合的模型。在2014年，Spotify就尝试了RNN在序列推荐上，后来RNN又被Yahoo News的推荐系统。传统推荐算法中有一个经典的算法叫做FM，常用于做CTR预估，算是一种浅层模型，最近也有人尝试了结合深度学习，提出DeepFM模型用于CTR预估。\n\nAlphaGo、Alpha Master、Alpha Zero一个比一个厉害，其开挂的对弈能力，让强化学习进入大众视线。强化学习用于推荐系统是一件很自然的事情，把用户看做变化的环境，而推荐系统是Agent，在和用户的不断交互之间，推荐系统就从一脸懵逼到逐渐“找到北”，迎合了用户兴趣。业界已有应用案例，阿里的研究员仁基就公开分享过淘宝把强化学习应用在搜索推荐上的效果。强化学习还以bandit算法这种相对简单的形式应用在推荐系统很多地方，解决新用户和新物品的冷启动，以及取代ABTest成为另一种在线实验的框架。\n\n除了技术上推荐系统有不同侧重，产品形式上也有不同的呈现。最初的推荐系统产品总是存活在产品的边角上，如相关推荐，这种产品形式只能算是“锦上添花”，如果推荐系统不小心开了天窗，也不是性命攸关的问题。如今推荐产品已经演化成互联网产品的主要承载形式：信息流。从最早的社交网站动态，到图文信息流，到如今的短视频。信息流是一种推荐系统产品形式，和相关推荐形式比起来，不再是锦上添花，而是注意力收割利器。\n\n推荐系统产品形式的演进，背景是互联网从PC到移动的演进，PC上是搜索为王，移动下是推荐为王，自然越来越重要。随着各种可穿戴设备的丰富，越来越多的推荐产品还会涌现出来。产品和技术相互协同发展，未来会有更多有意思的推荐算法和产品形式问世，成为一名推荐系统工程师永远都不晚。</code></pre><p><a href=\"http://blog.csdn.net/qq_40027052/article/details/78579587\" target=\"_blank\" rel=\"noopener\">原文链接</a></p>\n"},{"title":"scala学习笔记","date":"2017-12-03T14:36:12.000Z","_content":"\n1. 接下来，我们可以从 Scala 官网地址 http://www.scala-lang.org/downloads 下载 Scala 二进制包\n2. \n","source":"_posts/scala.md","raw":"---\ntitle: scala学习笔记\ndate: 2017-12-03 22:36:12\ntags:\n---\n\n1. 接下来，我们可以从 Scala 官网地址 http://www.scala-lang.org/downloads 下载 Scala 二进制包\n2. \n","slug":"scala","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm5000z2oi84auyymi2","content":"<ol>\n<li>接下来，我们可以从 Scala 官网地址 <a href=\"http://www.scala-lang.org/downloads\" target=\"_blank\" rel=\"noopener\">http://www.scala-lang.org/downloads</a> 下载 Scala 二进制包</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>接下来，我们可以从 Scala 官网地址 <a href=\"http://www.scala-lang.org/downloads\" target=\"_blank\" rel=\"noopener\">http://www.scala-lang.org/downloads</a> 下载 Scala 二进制包</li>\n<li></li>\n</ol>\n"},{"title":"shell编程笔记","date":"2018-01-13T06:30:07.000Z","_content":"\n### 监控CPU使用情况　uptime 命令\n该命令的描述为：　打印当前时间，系统已经运行了多久，当前登录用户数以及系统平均负载．\n\n```\n[root@centos7 ~]# uptime\n\n```\n### 监控内存及交换分区使用情况－－　free 命令\n该命令的描述为：　显示系统内存及交换分区信息\n用法：　feee [-b |-k | -m]\n\n```\n[root@centos7 ~]# free -b\n\n```\n### 监控磁盘使用情况　－－　df\n\n该命令的描述为：　生成系统磁盘空间的使用量信息．\n用法：　df[选项]...\n选项：　-h 人性化方式显示容量信息\n        -i 显示磁盘inode使用量信息\n        -T 显示文件系统类型\n```\n[root@centos7 ~]# df -hT\n\n[root@centos7 ~]# df -i\n\n```\n\n### 监控网络使用情况　－－　ip 和 netstat命令\nip命令可以查看网卡接口信息，　netstat 命令查看服务器开启的端口信息以及网络连接状态\n\n描述：　netstat 打印网络连接、路由表、网络接口统计等信息．\n用法：　netstat[选项]\n选项：　-s 显示各种协议数据统计信息\n　　　　-n 使用数字形式的IP、端口号、用户ID替代主机、协议、用户等名称信息\n　　　　-p 显示今晨该名称及对应进程ID号\n　　　　-l 仅显示正在监听的sockets 接口信息\n　　　　-u 查看udp连接信息\n　　　　-t 查看tcp连接信息\n\n```\n[root@centos7 ~]# ip a s\n[root@centos7 ~]# ip -s link show enol17773\n[root@centos7 ~]# netstat -nutlp\n[root@centos7 ~]# netstat -s\n\n```\n\n### 监控进程使用情况　－－　ps 和　top命令\n1. ps命令\n　描述：　查看当前进程信息\n　用法：　ps命令版本众多，有多种语法种类，如UNIX、BSD、以及GNU linux\n\n```\n[root@centos7 ~]# ps -e  #查看所有的进程信息\n[root@centos7 ~]# ps -ef #全格式显示进程信息\n\n```\n2. top命令\n描述：　动态查看进程信息\n选项：　-d #top刷新间隔　，默认为3秒\n        -p #查看指定PID的进程信息\n\n\n## 网络配置\n\n### 网络接口参数 －－ ifconfig 命令\n描述：　显示或设置网络接口信息\n用法：　ifconfig interface 选项 | 地址\n\n### 主机名参数　－－　hostnamectl命令\n\n```\n[root@centos7 ~]# hostnamectl status #查看主机名称和主机信息\n[root@centos7 ~]# hostnamectl \n\n```\n### 路由参数－－　route 命令\n描述：　显示或设置静态IP路由表．\n用法：　route[选项]      #查看路由信息\n        route add 目标网络　gw 网关地址　\n        route del 目标网络\n```\n[root@centos7 ~]# route   \n[root@centos7 ~]# route -n #使用数字地址替代主机名称\n[root@centos7 ~]# route add default gw 192.168.0.254  #添加默认网关为192.168.0.254\n[root@centos7 ~]# route add -net 172.16.0.0/16 gw 192.168.0.254  #添加指定网段的网关\n[root@centos7 ~]# route add -net 192.56.76.0 netmask 255.255.255.0 dev eno16777736   # 添加路由记录，指定通过eno16777736 网卡传输到192.56.76.0网段的数据\n[root@centos7 ~]# route del default gw 192.168.0.254 #删除默认网关\n[root@centos7 ~]# route del -net 172,16,0.0/16 #删除指定网段的网关记录\n```\n### 网络故障排错\n1. ping\n2. traceroute \n3. nslookup\n4. dig\n5. netstat\n\n```\n[root@centos7 ~]# ping 127.0.0.1\n[root@centos7 ~]# traceroute -I www.google.com\n[root@centos7 ~]# nslookup www.google.com\n[root@centos7 ~]# dig www.google.com\n\n```\n## 内核模块\n### 查看已加载的内核模块\n\n```\n[root@centos7 ~]# lsmod \n\n```\n\n## Bash 技巧\n\n| 快捷键 | 功能描述 |\n| :-: | :-: |\n| Ctrl + a | 光标移动到行首|\n| Ctrl + e | 光标移动到行尾|\n| Ctrl + f | 光标右移动一个字符|\n| Ctrl + b | 光标左移动一个字符|\n| Ctrl + l | 清屏 等同与　clear命令|\n| Ctrl + u | 删除光标至行首的字符 |\n| Ctrl + k | 删除光标至行尾的字符 |\n| Ctrl + c | 终止进程 |\n| Ctrl + z | 挂起进程(jobs命令查看挂起的进程) |\n| Ctrl + w | 删除光标前一个单词(以空格为分隔符) |\n| Alt  + d | 删除光标后一个单词 |\n| Tab | 自动补齐 |\n\n```\n[root@centos7 ~]# id tom >> user 2>> error\n[root@centos7 ~]# firefox   # 火狐浏览器通过前端启动，　使当前Shell将暂时无法使用\n[root@centos7 ~]# firefox &  # 后台运行浏览器，不影响当前Shell的使用  jobs查看后台运行的程序  fg 调用后台的程序 \n[root@centos7 ~]# ls /tmp; ls /root ; ls /home 所有的命令按顺序执行(不管前面的命令是否成功,后面的命令一定正常执行)\n[root@centos7 ~]# ls test.txt && cat test.txt #仅当ls执行成功才会执行cat\n[root@centos7 ~]# gedit || vim  # 如果有gedit编辑器,则打开该程序,否则打开vim编辑器\n[root@centos7 ~]# id tom &>/dev/null && echo \"Hi, tom\" || echo \"No Such user\"\n\n```\n### 花括号{}的使用技巧\n\n```\n[root@centos7 ~]# echo {a, b, c}\na b c\n\n[root@centos7 ~]# echo user{1, 5, 8}\nuser1 user5 user8\n\n[root@centos7 ~]# echo {1..10}\n0 1 2 3 4 5 6 7 8 9 \n\n[root@centos7 ~]# mkdir  /tmp/{dir1, dir2, dir3}\n[root@centos7 ~]# chmod  tmp/{dir1, dir2, dir3}\n\n```\n\n### 变量\nname=[value]\n\n```\n[root@centos7 ~]# NAME=tomcat\n[root@centos7 ~]# echo $NAME\n[root@centos7 ~]# typeset -r NAME #添加readonly 只读属性\n[root@centos7 ~]# set   #查看当前环境下的变量\n\n```\n\n使用name=[value]的形式定义的变量默认值仅在当前的Shell中有效, 子进程不会继承这样的变量,使用export命令会将变量放入环境中,这样新的进程会从父进程哪里继承环境,export 可以直接定义环境变量并赋值,也可以先定义一个普通的变量,再通过export 转换为环境变量\n\n```\n[root@centos7 ~]# export TEST #将已有用户变量添加至环境\n[root@centos7 ~]# export NAME=tom #直接定义环境变量\n[root@centos7 ~]# chmod +x echo.sh #修改文件权限为可执行\n\n```\n|变量名称|含义|\n| :-: | :-: |\n| BASHPID| 当前bash 进程的进程号 |\n| GROUPS | 当前用户所属的组的组ID号 |\n| HOSTNAME | 当前主机的主机名称 |\n| PWD | 当前工作目录 |\n| OLDPWD | 前一个工作目录 |\n| RANDOM | 0~32767之间的一个随机数 |\n| UID | 当前用户的ID号码 |\n| HISTSIZE | 命令历史的记录条数 |\n| HOME | 当前用户的家目录 |\n| PATH | 命令搜索路径 |\n| PS1 | 主命令提示符 |\n\n\n\n\n","source":"_posts/shell-command.md","raw":"---\ntitle: shell编程笔记\ndate: 2018-01-13 14:30:07\ntags:\n---\n\n### 监控CPU使用情况　uptime 命令\n该命令的描述为：　打印当前时间，系统已经运行了多久，当前登录用户数以及系统平均负载．\n\n```\n[root@centos7 ~]# uptime\n\n```\n### 监控内存及交换分区使用情况－－　free 命令\n该命令的描述为：　显示系统内存及交换分区信息\n用法：　feee [-b |-k | -m]\n\n```\n[root@centos7 ~]# free -b\n\n```\n### 监控磁盘使用情况　－－　df\n\n该命令的描述为：　生成系统磁盘空间的使用量信息．\n用法：　df[选项]...\n选项：　-h 人性化方式显示容量信息\n        -i 显示磁盘inode使用量信息\n        -T 显示文件系统类型\n```\n[root@centos7 ~]# df -hT\n\n[root@centos7 ~]# df -i\n\n```\n\n### 监控网络使用情况　－－　ip 和 netstat命令\nip命令可以查看网卡接口信息，　netstat 命令查看服务器开启的端口信息以及网络连接状态\n\n描述：　netstat 打印网络连接、路由表、网络接口统计等信息．\n用法：　netstat[选项]\n选项：　-s 显示各种协议数据统计信息\n　　　　-n 使用数字形式的IP、端口号、用户ID替代主机、协议、用户等名称信息\n　　　　-p 显示今晨该名称及对应进程ID号\n　　　　-l 仅显示正在监听的sockets 接口信息\n　　　　-u 查看udp连接信息\n　　　　-t 查看tcp连接信息\n\n```\n[root@centos7 ~]# ip a s\n[root@centos7 ~]# ip -s link show enol17773\n[root@centos7 ~]# netstat -nutlp\n[root@centos7 ~]# netstat -s\n\n```\n\n### 监控进程使用情况　－－　ps 和　top命令\n1. ps命令\n　描述：　查看当前进程信息\n　用法：　ps命令版本众多，有多种语法种类，如UNIX、BSD、以及GNU linux\n\n```\n[root@centos7 ~]# ps -e  #查看所有的进程信息\n[root@centos7 ~]# ps -ef #全格式显示进程信息\n\n```\n2. top命令\n描述：　动态查看进程信息\n选项：　-d #top刷新间隔　，默认为3秒\n        -p #查看指定PID的进程信息\n\n\n## 网络配置\n\n### 网络接口参数 －－ ifconfig 命令\n描述：　显示或设置网络接口信息\n用法：　ifconfig interface 选项 | 地址\n\n### 主机名参数　－－　hostnamectl命令\n\n```\n[root@centos7 ~]# hostnamectl status #查看主机名称和主机信息\n[root@centos7 ~]# hostnamectl \n\n```\n### 路由参数－－　route 命令\n描述：　显示或设置静态IP路由表．\n用法：　route[选项]      #查看路由信息\n        route add 目标网络　gw 网关地址　\n        route del 目标网络\n```\n[root@centos7 ~]# route   \n[root@centos7 ~]# route -n #使用数字地址替代主机名称\n[root@centos7 ~]# route add default gw 192.168.0.254  #添加默认网关为192.168.0.254\n[root@centos7 ~]# route add -net 172.16.0.0/16 gw 192.168.0.254  #添加指定网段的网关\n[root@centos7 ~]# route add -net 192.56.76.0 netmask 255.255.255.0 dev eno16777736   # 添加路由记录，指定通过eno16777736 网卡传输到192.56.76.0网段的数据\n[root@centos7 ~]# route del default gw 192.168.0.254 #删除默认网关\n[root@centos7 ~]# route del -net 172,16,0.0/16 #删除指定网段的网关记录\n```\n### 网络故障排错\n1. ping\n2. traceroute \n3. nslookup\n4. dig\n5. netstat\n\n```\n[root@centos7 ~]# ping 127.0.0.1\n[root@centos7 ~]# traceroute -I www.google.com\n[root@centos7 ~]# nslookup www.google.com\n[root@centos7 ~]# dig www.google.com\n\n```\n## 内核模块\n### 查看已加载的内核模块\n\n```\n[root@centos7 ~]# lsmod \n\n```\n\n## Bash 技巧\n\n| 快捷键 | 功能描述 |\n| :-: | :-: |\n| Ctrl + a | 光标移动到行首|\n| Ctrl + e | 光标移动到行尾|\n| Ctrl + f | 光标右移动一个字符|\n| Ctrl + b | 光标左移动一个字符|\n| Ctrl + l | 清屏 等同与　clear命令|\n| Ctrl + u | 删除光标至行首的字符 |\n| Ctrl + k | 删除光标至行尾的字符 |\n| Ctrl + c | 终止进程 |\n| Ctrl + z | 挂起进程(jobs命令查看挂起的进程) |\n| Ctrl + w | 删除光标前一个单词(以空格为分隔符) |\n| Alt  + d | 删除光标后一个单词 |\n| Tab | 自动补齐 |\n\n```\n[root@centos7 ~]# id tom >> user 2>> error\n[root@centos7 ~]# firefox   # 火狐浏览器通过前端启动，　使当前Shell将暂时无法使用\n[root@centos7 ~]# firefox &  # 后台运行浏览器，不影响当前Shell的使用  jobs查看后台运行的程序  fg 调用后台的程序 \n[root@centos7 ~]# ls /tmp; ls /root ; ls /home 所有的命令按顺序执行(不管前面的命令是否成功,后面的命令一定正常执行)\n[root@centos7 ~]# ls test.txt && cat test.txt #仅当ls执行成功才会执行cat\n[root@centos7 ~]# gedit || vim  # 如果有gedit编辑器,则打开该程序,否则打开vim编辑器\n[root@centos7 ~]# id tom &>/dev/null && echo \"Hi, tom\" || echo \"No Such user\"\n\n```\n### 花括号{}的使用技巧\n\n```\n[root@centos7 ~]# echo {a, b, c}\na b c\n\n[root@centos7 ~]# echo user{1, 5, 8}\nuser1 user5 user8\n\n[root@centos7 ~]# echo {1..10}\n0 1 2 3 4 5 6 7 8 9 \n\n[root@centos7 ~]# mkdir  /tmp/{dir1, dir2, dir3}\n[root@centos7 ~]# chmod  tmp/{dir1, dir2, dir3}\n\n```\n\n### 变量\nname=[value]\n\n```\n[root@centos7 ~]# NAME=tomcat\n[root@centos7 ~]# echo $NAME\n[root@centos7 ~]# typeset -r NAME #添加readonly 只读属性\n[root@centos7 ~]# set   #查看当前环境下的变量\n\n```\n\n使用name=[value]的形式定义的变量默认值仅在当前的Shell中有效, 子进程不会继承这样的变量,使用export命令会将变量放入环境中,这样新的进程会从父进程哪里继承环境,export 可以直接定义环境变量并赋值,也可以先定义一个普通的变量,再通过export 转换为环境变量\n\n```\n[root@centos7 ~]# export TEST #将已有用户变量添加至环境\n[root@centos7 ~]# export NAME=tom #直接定义环境变量\n[root@centos7 ~]# chmod +x echo.sh #修改文件权限为可执行\n\n```\n|变量名称|含义|\n| :-: | :-: |\n| BASHPID| 当前bash 进程的进程号 |\n| GROUPS | 当前用户所属的组的组ID号 |\n| HOSTNAME | 当前主机的主机名称 |\n| PWD | 当前工作目录 |\n| OLDPWD | 前一个工作目录 |\n| RANDOM | 0~32767之间的一个随机数 |\n| UID | 当前用户的ID号码 |\n| HISTSIZE | 命令历史的记录条数 |\n| HOME | 当前用户的家目录 |\n| PATH | 命令搜索路径 |\n| PS1 | 主命令提示符 |\n\n\n\n\n","slug":"shell-command","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm500102oi8xa2tuht1","content":"<h3 id=\"监控CPU使用情况-uptime-命令\"><a href=\"#监控CPU使用情况-uptime-命令\" class=\"headerlink\" title=\"监控CPU使用情况　uptime 命令\"></a>监控CPU使用情况　uptime 命令</h3><p>该命令的描述为：　打印当前时间，系统已经运行了多久，当前登录用户数以及系统平均负载．</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# uptime</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控内存及交换分区使用情况－－-free-命令\"><a href=\"#监控内存及交换分区使用情况－－-free-命令\" class=\"headerlink\" title=\"监控内存及交换分区使用情况－－　free 命令\"></a>监控内存及交换分区使用情况－－　free 命令</h3><p>该命令的描述为：　显示系统内存及交换分区信息<br>用法：　feee [-b |-k | -m]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# free -b</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控磁盘使用情况-－－-df\"><a href=\"#监控磁盘使用情况-－－-df\" class=\"headerlink\" title=\"监控磁盘使用情况　－－　df\"></a>监控磁盘使用情况　－－　df</h3><p>该命令的描述为：　生成系统磁盘空间的使用量信息．<br>用法：　df[选项]…<br>选项：　-h 人性化方式显示容量信息<br>        -i 显示磁盘inode使用量信息<br>        -T 显示文件系统类型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# df -hT</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# df -i</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控网络使用情况-－－-ip-和-netstat命令\"><a href=\"#监控网络使用情况-－－-ip-和-netstat命令\" class=\"headerlink\" title=\"监控网络使用情况　－－　ip 和 netstat命令\"></a>监控网络使用情况　－－　ip 和 netstat命令</h3><p>ip命令可以查看网卡接口信息，　netstat 命令查看服务器开启的端口信息以及网络连接状态</p>\n<p>描述：　netstat 打印网络连接、路由表、网络接口统计等信息．<br>用法：　netstat[选项]<br>选项：　-s 显示各种协议数据统计信息<br>　　　　-n 使用数字形式的IP、端口号、用户ID替代主机、协议、用户等名称信息<br>　　　　-p 显示今晨该名称及对应进程ID号<br>　　　　-l 仅显示正在监听的sockets 接口信息<br>　　　　-u 查看udp连接信息<br>　　　　-t 查看tcp连接信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# ip a s</span><br><span class=\"line\">[root@centos7 ~]# ip -s link show enol17773</span><br><span class=\"line\">[root@centos7 ~]# netstat -nutlp</span><br><span class=\"line\">[root@centos7 ~]# netstat -s</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控进程使用情况-－－-ps-和-top命令\"><a href=\"#监控进程使用情况-－－-ps-和-top命令\" class=\"headerlink\" title=\"监控进程使用情况　－－　ps 和　top命令\"></a>监控进程使用情况　－－　ps 和　top命令</h3><ol>\n<li>ps命令<br>　描述：　查看当前进程信息<br>　用法：　ps命令版本众多，有多种语法种类，如UNIX、BSD、以及GNU linux</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# ps -e  #查看所有的进程信息</span><br><span class=\"line\">[root@centos7 ~]# ps -ef #全格式显示进程信息</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>top命令<br>描述：　动态查看进程信息<br>选项：　-d #top刷新间隔　，默认为3秒<pre><code>-p #查看指定PID的进程信息</code></pre></li>\n</ol>\n<h2 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h2><h3 id=\"网络接口参数-－－-ifconfig-命令\"><a href=\"#网络接口参数-－－-ifconfig-命令\" class=\"headerlink\" title=\"网络接口参数 －－ ifconfig 命令\"></a>网络接口参数 －－ ifconfig 命令</h3><p>描述：　显示或设置网络接口信息<br>用法：　ifconfig interface 选项 | 地址</p>\n<h3 id=\"主机名参数-－－-hostnamectl命令\"><a href=\"#主机名参数-－－-hostnamectl命令\" class=\"headerlink\" title=\"主机名参数　－－　hostnamectl命令\"></a>主机名参数　－－　hostnamectl命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# hostnamectl status #查看主机名称和主机信息</span><br><span class=\"line\">[root@centos7 ~]# hostnamectl</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由参数－－-route-命令\"><a href=\"#路由参数－－-route-命令\" class=\"headerlink\" title=\"路由参数－－　route 命令\"></a>路由参数－－　route 命令</h3><p>描述：　显示或设置静态IP路由表．<br>用法：　route[选项]      #查看路由信息<br>        route add 目标网络　gw 网关地址　<br>        route del 目标网络</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# route   </span><br><span class=\"line\">[root@centos7 ~]# route -n #使用数字地址替代主机名称</span><br><span class=\"line\">[root@centos7 ~]# route add default gw 192.168.0.254  #添加默认网关为192.168.0.254</span><br><span class=\"line\">[root@centos7 ~]# route add -net 172.16.0.0/16 gw 192.168.0.254  #添加指定网段的网关</span><br><span class=\"line\">[root@centos7 ~]# route add -net 192.56.76.0 netmask 255.255.255.0 dev eno16777736   # 添加路由记录，指定通过eno16777736 网卡传输到192.56.76.0网段的数据</span><br><span class=\"line\">[root@centos7 ~]# route del default gw 192.168.0.254 #删除默认网关</span><br><span class=\"line\">[root@centos7 ~]# route del -net 172,16,0.0/16 #删除指定网段的网关记录</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络故障排错\"><a href=\"#网络故障排错\" class=\"headerlink\" title=\"网络故障排错\"></a>网络故障排错</h3><ol>\n<li>ping</li>\n<li>traceroute </li>\n<li>nslookup</li>\n<li>dig</li>\n<li>netstat</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# ping 127.0.0.1</span><br><span class=\"line\">[root@centos7 ~]# traceroute -I www.google.com</span><br><span class=\"line\">[root@centos7 ~]# nslookup www.google.com</span><br><span class=\"line\">[root@centos7 ~]# dig www.google.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内核模块\"><a href=\"#内核模块\" class=\"headerlink\" title=\"内核模块\"></a>内核模块</h2><h3 id=\"查看已加载的内核模块\"><a href=\"#查看已加载的内核模块\" class=\"headerlink\" title=\"查看已加载的内核模块\"></a>查看已加载的内核模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# lsmod</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Bash-技巧\"><a href=\"#Bash-技巧\" class=\"headerlink\" title=\"Bash 技巧\"></a>Bash 技巧</h2><table>\n<thead>\n<tr>\n<th align=\"center\">快捷键</th>\n<th align=\"center\">功能描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Ctrl + a</td>\n<td align=\"center\">光标移动到行首</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + e</td>\n<td align=\"center\">光标移动到行尾</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + f</td>\n<td align=\"center\">光标右移动一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + b</td>\n<td align=\"center\">光标左移动一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + l</td>\n<td align=\"center\">清屏 等同与　clear命令</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + u</td>\n<td align=\"center\">删除光标至行首的字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + k</td>\n<td align=\"center\">删除光标至行尾的字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + c</td>\n<td align=\"center\">终止进程</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + z</td>\n<td align=\"center\">挂起进程(jobs命令查看挂起的进程)</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + w</td>\n<td align=\"center\">删除光标前一个单词(以空格为分隔符)</td>\n</tr>\n<tr>\n<td align=\"center\">Alt  + d</td>\n<td align=\"center\">删除光标后一个单词</td>\n</tr>\n<tr>\n<td align=\"center\">Tab</td>\n<td align=\"center\">自动补齐</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# id tom &gt;&gt; user 2&gt;&gt; error</span><br><span class=\"line\">[root@centos7 ~]# firefox   # 火狐浏览器通过前端启动，　使当前Shell将暂时无法使用</span><br><span class=\"line\">[root@centos7 ~]# firefox &amp;  # 后台运行浏览器，不影响当前Shell的使用  jobs查看后台运行的程序  fg 调用后台的程序 </span><br><span class=\"line\">[root@centos7 ~]# ls /tmp; ls /root ; ls /home 所有的命令按顺序执行(不管前面的命令是否成功,后面的命令一定正常执行)</span><br><span class=\"line\">[root@centos7 ~]# ls test.txt &amp;&amp; cat test.txt #仅当ls执行成功才会执行cat</span><br><span class=\"line\">[root@centos7 ~]# gedit || vim  # 如果有gedit编辑器,则打开该程序,否则打开vim编辑器</span><br><span class=\"line\">[root@centos7 ~]# id tom &amp;&gt;/dev/null &amp;&amp; echo &quot;Hi, tom&quot; || echo &quot;No Such user&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"花括号-的使用技巧\"><a href=\"#花括号-的使用技巧\" class=\"headerlink\" title=\"花括号{}的使用技巧\"></a>花括号{}的使用技巧</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# echo &#123;a, b, c&#125;</span><br><span class=\"line\">a b c</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# echo user&#123;1, 5, 8&#125;</span><br><span class=\"line\">user1 user5 user8</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# echo &#123;1..10&#125;</span><br><span class=\"line\">0 1 2 3 4 5 6 7 8 9 </span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# mkdir  /tmp/&#123;dir1, dir2, dir3&#125;</span><br><span class=\"line\">[root@centos7 ~]# chmod  tmp/&#123;dir1, dir2, dir3&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>name=[value]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# NAME=tomcat</span><br><span class=\"line\">[root@centos7 ~]# echo $NAME</span><br><span class=\"line\">[root@centos7 ~]# typeset -r NAME #添加readonly 只读属性</span><br><span class=\"line\">[root@centos7 ~]# set   #查看当前环境下的变量</span><br></pre></td></tr></table></figure>\n\n<p>使用name=[value]的形式定义的变量默认值仅在当前的Shell中有效, 子进程不会继承这样的变量,使用export命令会将变量放入环境中,这样新的进程会从父进程哪里继承环境,export 可以直接定义环境变量并赋值,也可以先定义一个普通的变量,再通过export 转换为环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# export TEST #将已有用户变量添加至环境</span><br><span class=\"line\">[root@centos7 ~]# export NAME=tom #直接定义环境变量</span><br><span class=\"line\">[root@centos7 ~]# chmod +x echo.sh #修改文件权限为可执行</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">变量名称</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">BASHPID</td>\n<td align=\"center\">当前bash 进程的进程号</td>\n</tr>\n<tr>\n<td align=\"center\">GROUPS</td>\n<td align=\"center\">当前用户所属的组的组ID号</td>\n</tr>\n<tr>\n<td align=\"center\">HOSTNAME</td>\n<td align=\"center\">当前主机的主机名称</td>\n</tr>\n<tr>\n<td align=\"center\">PWD</td>\n<td align=\"center\">当前工作目录</td>\n</tr>\n<tr>\n<td align=\"center\">OLDPWD</td>\n<td align=\"center\">前一个工作目录</td>\n</tr>\n<tr>\n<td align=\"center\">RANDOM</td>\n<td align=\"center\">0~32767之间的一个随机数</td>\n</tr>\n<tr>\n<td align=\"center\">UID</td>\n<td align=\"center\">当前用户的ID号码</td>\n</tr>\n<tr>\n<td align=\"center\">HISTSIZE</td>\n<td align=\"center\">命令历史的记录条数</td>\n</tr>\n<tr>\n<td align=\"center\">HOME</td>\n<td align=\"center\">当前用户的家目录</td>\n</tr>\n<tr>\n<td align=\"center\">PATH</td>\n<td align=\"center\">命令搜索路径</td>\n</tr>\n<tr>\n<td align=\"center\">PS1</td>\n<td align=\"center\">主命令提示符</td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"监控CPU使用情况-uptime-命令\"><a href=\"#监控CPU使用情况-uptime-命令\" class=\"headerlink\" title=\"监控CPU使用情况　uptime 命令\"></a>监控CPU使用情况　uptime 命令</h3><p>该命令的描述为：　打印当前时间，系统已经运行了多久，当前登录用户数以及系统平均负载．</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# uptime</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控内存及交换分区使用情况－－-free-命令\"><a href=\"#监控内存及交换分区使用情况－－-free-命令\" class=\"headerlink\" title=\"监控内存及交换分区使用情况－－　free 命令\"></a>监控内存及交换分区使用情况－－　free 命令</h3><p>该命令的描述为：　显示系统内存及交换分区信息<br>用法：　feee [-b |-k | -m]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# free -b</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控磁盘使用情况-－－-df\"><a href=\"#监控磁盘使用情况-－－-df\" class=\"headerlink\" title=\"监控磁盘使用情况　－－　df\"></a>监控磁盘使用情况　－－　df</h3><p>该命令的描述为：　生成系统磁盘空间的使用量信息．<br>用法：　df[选项]…<br>选项：　-h 人性化方式显示容量信息<br>        -i 显示磁盘inode使用量信息<br>        -T 显示文件系统类型</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# df -hT</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# df -i</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控网络使用情况-－－-ip-和-netstat命令\"><a href=\"#监控网络使用情况-－－-ip-和-netstat命令\" class=\"headerlink\" title=\"监控网络使用情况　－－　ip 和 netstat命令\"></a>监控网络使用情况　－－　ip 和 netstat命令</h3><p>ip命令可以查看网卡接口信息，　netstat 命令查看服务器开启的端口信息以及网络连接状态</p>\n<p>描述：　netstat 打印网络连接、路由表、网络接口统计等信息．<br>用法：　netstat[选项]<br>选项：　-s 显示各种协议数据统计信息<br>　　　　-n 使用数字形式的IP、端口号、用户ID替代主机、协议、用户等名称信息<br>　　　　-p 显示今晨该名称及对应进程ID号<br>　　　　-l 仅显示正在监听的sockets 接口信息<br>　　　　-u 查看udp连接信息<br>　　　　-t 查看tcp连接信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# ip a s</span><br><span class=\"line\">[root@centos7 ~]# ip -s link show enol17773</span><br><span class=\"line\">[root@centos7 ~]# netstat -nutlp</span><br><span class=\"line\">[root@centos7 ~]# netstat -s</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"监控进程使用情况-－－-ps-和-top命令\"><a href=\"#监控进程使用情况-－－-ps-和-top命令\" class=\"headerlink\" title=\"监控进程使用情况　－－　ps 和　top命令\"></a>监控进程使用情况　－－　ps 和　top命令</h3><ol>\n<li>ps命令<br>　描述：　查看当前进程信息<br>　用法：　ps命令版本众多，有多种语法种类，如UNIX、BSD、以及GNU linux</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# ps -e  #查看所有的进程信息</span><br><span class=\"line\">[root@centos7 ~]# ps -ef #全格式显示进程信息</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>top命令<br>描述：　动态查看进程信息<br>选项：　-d #top刷新间隔　，默认为3秒<pre><code>-p #查看指定PID的进程信息</code></pre></li>\n</ol>\n<h2 id=\"网络配置\"><a href=\"#网络配置\" class=\"headerlink\" title=\"网络配置\"></a>网络配置</h2><h3 id=\"网络接口参数-－－-ifconfig-命令\"><a href=\"#网络接口参数-－－-ifconfig-命令\" class=\"headerlink\" title=\"网络接口参数 －－ ifconfig 命令\"></a>网络接口参数 －－ ifconfig 命令</h3><p>描述：　显示或设置网络接口信息<br>用法：　ifconfig interface 选项 | 地址</p>\n<h3 id=\"主机名参数-－－-hostnamectl命令\"><a href=\"#主机名参数-－－-hostnamectl命令\" class=\"headerlink\" title=\"主机名参数　－－　hostnamectl命令\"></a>主机名参数　－－　hostnamectl命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# hostnamectl status #查看主机名称和主机信息</span><br><span class=\"line\">[root@centos7 ~]# hostnamectl</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"路由参数－－-route-命令\"><a href=\"#路由参数－－-route-命令\" class=\"headerlink\" title=\"路由参数－－　route 命令\"></a>路由参数－－　route 命令</h3><p>描述：　显示或设置静态IP路由表．<br>用法：　route[选项]      #查看路由信息<br>        route add 目标网络　gw 网关地址　<br>        route del 目标网络</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# route   </span><br><span class=\"line\">[root@centos7 ~]# route -n #使用数字地址替代主机名称</span><br><span class=\"line\">[root@centos7 ~]# route add default gw 192.168.0.254  #添加默认网关为192.168.0.254</span><br><span class=\"line\">[root@centos7 ~]# route add -net 172.16.0.0/16 gw 192.168.0.254  #添加指定网段的网关</span><br><span class=\"line\">[root@centos7 ~]# route add -net 192.56.76.0 netmask 255.255.255.0 dev eno16777736   # 添加路由记录，指定通过eno16777736 网卡传输到192.56.76.0网段的数据</span><br><span class=\"line\">[root@centos7 ~]# route del default gw 192.168.0.254 #删除默认网关</span><br><span class=\"line\">[root@centos7 ~]# route del -net 172,16,0.0/16 #删除指定网段的网关记录</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网络故障排错\"><a href=\"#网络故障排错\" class=\"headerlink\" title=\"网络故障排错\"></a>网络故障排错</h3><ol>\n<li>ping</li>\n<li>traceroute </li>\n<li>nslookup</li>\n<li>dig</li>\n<li>netstat</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# ping 127.0.0.1</span><br><span class=\"line\">[root@centos7 ~]# traceroute -I www.google.com</span><br><span class=\"line\">[root@centos7 ~]# nslookup www.google.com</span><br><span class=\"line\">[root@centos7 ~]# dig www.google.com</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"内核模块\"><a href=\"#内核模块\" class=\"headerlink\" title=\"内核模块\"></a>内核模块</h2><h3 id=\"查看已加载的内核模块\"><a href=\"#查看已加载的内核模块\" class=\"headerlink\" title=\"查看已加载的内核模块\"></a>查看已加载的内核模块</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# lsmod</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Bash-技巧\"><a href=\"#Bash-技巧\" class=\"headerlink\" title=\"Bash 技巧\"></a>Bash 技巧</h2><table>\n<thead>\n<tr>\n<th align=\"center\">快捷键</th>\n<th align=\"center\">功能描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">Ctrl + a</td>\n<td align=\"center\">光标移动到行首</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + e</td>\n<td align=\"center\">光标移动到行尾</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + f</td>\n<td align=\"center\">光标右移动一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + b</td>\n<td align=\"center\">光标左移动一个字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + l</td>\n<td align=\"center\">清屏 等同与　clear命令</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + u</td>\n<td align=\"center\">删除光标至行首的字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + k</td>\n<td align=\"center\">删除光标至行尾的字符</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + c</td>\n<td align=\"center\">终止进程</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + z</td>\n<td align=\"center\">挂起进程(jobs命令查看挂起的进程)</td>\n</tr>\n<tr>\n<td align=\"center\">Ctrl + w</td>\n<td align=\"center\">删除光标前一个单词(以空格为分隔符)</td>\n</tr>\n<tr>\n<td align=\"center\">Alt  + d</td>\n<td align=\"center\">删除光标后一个单词</td>\n</tr>\n<tr>\n<td align=\"center\">Tab</td>\n<td align=\"center\">自动补齐</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# id tom &gt;&gt; user 2&gt;&gt; error</span><br><span class=\"line\">[root@centos7 ~]# firefox   # 火狐浏览器通过前端启动，　使当前Shell将暂时无法使用</span><br><span class=\"line\">[root@centos7 ~]# firefox &amp;  # 后台运行浏览器，不影响当前Shell的使用  jobs查看后台运行的程序  fg 调用后台的程序 </span><br><span class=\"line\">[root@centos7 ~]# ls /tmp; ls /root ; ls /home 所有的命令按顺序执行(不管前面的命令是否成功,后面的命令一定正常执行)</span><br><span class=\"line\">[root@centos7 ~]# ls test.txt &amp;&amp; cat test.txt #仅当ls执行成功才会执行cat</span><br><span class=\"line\">[root@centos7 ~]# gedit || vim  # 如果有gedit编辑器,则打开该程序,否则打开vim编辑器</span><br><span class=\"line\">[root@centos7 ~]# id tom &amp;&gt;/dev/null &amp;&amp; echo &quot;Hi, tom&quot; || echo &quot;No Such user&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"花括号-的使用技巧\"><a href=\"#花括号-的使用技巧\" class=\"headerlink\" title=\"花括号{}的使用技巧\"></a>花括号{}的使用技巧</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# echo &#123;a, b, c&#125;</span><br><span class=\"line\">a b c</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# echo user&#123;1, 5, 8&#125;</span><br><span class=\"line\">user1 user5 user8</span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# echo &#123;1..10&#125;</span><br><span class=\"line\">0 1 2 3 4 5 6 7 8 9 </span><br><span class=\"line\"></span><br><span class=\"line\">[root@centos7 ~]# mkdir  /tmp/&#123;dir1, dir2, dir3&#125;</span><br><span class=\"line\">[root@centos7 ~]# chmod  tmp/&#123;dir1, dir2, dir3&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>name=[value]</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# NAME=tomcat</span><br><span class=\"line\">[root@centos7 ~]# echo $NAME</span><br><span class=\"line\">[root@centos7 ~]# typeset -r NAME #添加readonly 只读属性</span><br><span class=\"line\">[root@centos7 ~]# set   #查看当前环境下的变量</span><br></pre></td></tr></table></figure>\n\n<p>使用name=[value]的形式定义的变量默认值仅在当前的Shell中有效, 子进程不会继承这样的变量,使用export命令会将变量放入环境中,这样新的进程会从父进程哪里继承环境,export 可以直接定义环境变量并赋值,也可以先定义一个普通的变量,再通过export 转换为环境变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@centos7 ~]# export TEST #将已有用户变量添加至环境</span><br><span class=\"line\">[root@centos7 ~]# export NAME=tom #直接定义环境变量</span><br><span class=\"line\">[root@centos7 ~]# chmod +x echo.sh #修改文件权限为可执行</span><br></pre></td></tr></table></figure>\n\n<table>\n<thead>\n<tr>\n<th align=\"center\">变量名称</th>\n<th align=\"center\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">BASHPID</td>\n<td align=\"center\">当前bash 进程的进程号</td>\n</tr>\n<tr>\n<td align=\"center\">GROUPS</td>\n<td align=\"center\">当前用户所属的组的组ID号</td>\n</tr>\n<tr>\n<td align=\"center\">HOSTNAME</td>\n<td align=\"center\">当前主机的主机名称</td>\n</tr>\n<tr>\n<td align=\"center\">PWD</td>\n<td align=\"center\">当前工作目录</td>\n</tr>\n<tr>\n<td align=\"center\">OLDPWD</td>\n<td align=\"center\">前一个工作目录</td>\n</tr>\n<tr>\n<td align=\"center\">RANDOM</td>\n<td align=\"center\">0~32767之间的一个随机数</td>\n</tr>\n<tr>\n<td align=\"center\">UID</td>\n<td align=\"center\">当前用户的ID号码</td>\n</tr>\n<tr>\n<td align=\"center\">HISTSIZE</td>\n<td align=\"center\">命令历史的记录条数</td>\n</tr>\n<tr>\n<td align=\"center\">HOME</td>\n<td align=\"center\">当前用户的家目录</td>\n</tr>\n<tr>\n<td align=\"center\">PATH</td>\n<td align=\"center\">命令搜索路径</td>\n</tr>\n<tr>\n<td align=\"center\">PS1</td>\n<td align=\"center\">主命令提示符</td>\n</tr>\n</tbody></table>\n"},{"title":"国内互联网名人汇","date":"2017-04-28T12:16:42.000Z","_content":"\n1. 阮一峰         个人网站  http://www.ruanyifeng.com/home.html \n2. 李凡希         见过 Richard stallman  https://www.freemindworld.com\n3. 廖雪峰         个人网站  http://www.liaoxuefeng.com/\n4. zhiqianfeng    个人网站  http://www.zhaiqianfeng.com\n \n","source":"_posts/famous_internet_people20170428.md","raw":"---\ntitle: 国内互联网名人汇\ndate: 2017-04-28 20:16:42\ntags:\n---\n\n1. 阮一峰         个人网站  http://www.ruanyifeng.com/home.html \n2. 李凡希         见过 Richard stallman  https://www.freemindworld.com\n3. 廖雪峰         个人网站  http://www.liaoxuefeng.com/\n4. zhiqianfeng    个人网站  http://www.zhaiqianfeng.com\n \n","slug":"famous_internet_people20170428","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm600112oi8ij2xhoa8","content":"<ol>\n<li>阮一峰         个人网站  <a href=\"http://www.ruanyifeng.com/home.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/home.html</a> </li>\n<li>李凡希         见过 Richard stallman  <a href=\"https://www.freemindworld.com\" target=\"_blank\" rel=\"noopener\">https://www.freemindworld.com</a></li>\n<li>廖雪峰         个人网站  <a href=\"http://www.liaoxuefeng.com/\" target=\"_blank\" rel=\"noopener\">http://www.liaoxuefeng.com/</a></li>\n<li>zhiqianfeng    个人网站  <a href=\"http://www.zhaiqianfeng.com\" target=\"_blank\" rel=\"noopener\">http://www.zhaiqianfeng.com</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>阮一峰         个人网站  <a href=\"http://www.ruanyifeng.com/home.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/home.html</a> </li>\n<li>李凡希         见过 Richard stallman  <a href=\"https://www.freemindworld.com\" target=\"_blank\" rel=\"noopener\">https://www.freemindworld.com</a></li>\n<li>廖雪峰         个人网站  <a href=\"http://www.liaoxuefeng.com/\" target=\"_blank\" rel=\"noopener\">http://www.liaoxuefeng.com/</a></li>\n<li>zhiqianfeng    个人网站  <a href=\"http://www.zhaiqianfeng.com\" target=\"_blank\" rel=\"noopener\">http://www.zhaiqianfeng.com</a></li>\n</ol>\n"},{"title":"电脑模拟钢琴按键简谱","date":"2017-03-30T03:27:35.000Z","_content":"\n## 正文\n《童话》　　\nLONOL LONOL LONO OOMMLLONOL LQPPO LONOM MMOTS PPRRQQ QQNPOONO ONOR LSRQPPPRRQQ QQVUTUV VPOT TTSSSLSRQQRQ QRQ RQPOOQST TTSPPRQ OQST TTSPPRQRQPO PQMMOONO\n\n《星语心愿》　　\nTVUTSTQ TSTVUVUTUV　　\nVWXXXXW VUTUS TVUTST　　\nQSTXWVUV VUTTTTSSTQ　　\nSSTXWVUVV VUTTSUT\n\n\n《会呼吸的痛》\nSTVTXXTW WWVUVWXWSV VUTUVRRRVVWVSSS SYXWXX STVTXXTW WWVUVWXWSVV VUTUVRRRVVWVSSS STUVVUVV \n\n《欢乐颂》 \nJ J K L L K J I H H I J J I IJ J K L L K J I H H I J I H H I I J H I J K J H I J K J I H I E J J K L L K J I H H I J I H H \n\n《千千阙歌》\nHHIJ LMONNNLJ IIIJK MOQPPNLHHIJ LMONNNLJ IIIJK MOQPPNLMLMLMNNMN PPPPNOPQQQPPPOQ NLMLMOPQQPQ QPOP OMM LMOP QQPQ QSTSQQQQPPOPOM QQRQPOP QQ Q PPOP OMOO\n\n《婚礼进行曲》\nHKKK HLJK HKNNMLKJKL HKKK HLJK HKMOMKILMKNMLII JKLL NMLII JKLL HKKK HLJK HKMOMKILMKILMKK \n\n《青花瓷》\nLLJ IJF IJLJ I \nLLJ IJE IJLI H \nHIJLMLJ LJJI I \nHIH IHI IJLJ J \nLLJ IJF IJLJI \nLLJ IJE IJLIH \nHIJ LMLJ LJJII EJIIH \n\n《夜曲》\nMN OOOONQQ TTTSRSOO\nRRRSQNQP PONOON\nOOOONQQ TTTSRSOO\nRRR QPNOM\n\n《暗香》\nJKJGHJM ONLJ JKJGHJM \nONLQ MMMOQLKMP PQRPQRQ \nMPQRPQRM MQRSQRSM PQRMR \nSKPQPQRQ \nJKJGHJMONLJ \nJKJGHJMONLM \n\n《遇见》\nLJ LI JIH HGFGHGHIJ \nLJ LP ONO HGFGHGHIH \nLMNONONMLML HIJKJKLHIJ \nLMNONONPOPOQL HIJKJKJIHGH \nLMNONOPONML HIJKJKLHHML \nLMNONOPOPQL, HIJKJKLHHML \nLMNONOPOPQL, HIJIJILHIJH \nLMNONOMNLKL \nJJJKLJEE IIIJKIEE \nHHHIJIGH GFGHG \nFEFML IKJIH \nHGFIIHFFGH \n\n《波斯猫》\nOOOMLMLJJ MMMLJLJII \nOOOMOMOJJ IMJ JL M M M \n\n《菊花台》\nJJIJ JLJIJ HHIJLJ IIHI \nJ LJML MLLJL EJIILJIIIHI \nJJIJ JLJIJ HHIJLJ IIHI \nJ LJML MLLJL JIJLJIIH \nHIJJLM MQQPOML MLJIH FHIIHI \nHIJJLM MQPOOPO LLJNOHIJIH \n\n《北京欢迎你》歌谱 \nQSQPQPQQPMO QP \nPOMOPQSPQTSSPO \nPOMOPQSPQTSSQ \nPQPOSTQMQPPO \nQSVSTTS QQ SS QS TV WV SQ P S Q Q \nQS VS TV WV SQ SVT QP QS XW VV \n\n致爱丽斯\nQPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMNOPQLRQPKQPOJPONNJQQQQPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMORQQPPRTSRQPONMMLMNOPPQRMOPNOPQSPNOPQSPNQQQQQP \n\n《约定》 \nLOPQPOQPLL JMNONMONJL MLLKKOJJPO \nPQRQQPOMP LOPQPOQPNL QMNONMONJL \nMLLKKOPQO MNOMOTSS POSQ QPONOMJM \nOPOTR RQRMNOP QRSSSTO \nSNPO PQMORQRSP POSQ QPONOMJM \nOPOTR RQRMNOP QRSSSTO \nSNPO PQRMRQOPO \n\n《美丽的神话》 \nMQN MOPOQ MTSTSPRQ \nMTSPQRQ O MQPNM \nMQNMOPOQ MTSTSPRQ \nMTSPQRQPO MPONM \nMNOPQONL MOPQQ \nMNOPQONLMOPOO MPONM \nMNOPQONL MOPQQ \nMNOPQONLMOPOO OOPQONLONMNT\n\n《有没有人告诉你》 \nJMMMMMMMMJKLK JLLLLLLLMNNJ \nJMMMMMMMMQQP NNNNNJONON \nJMMMMMMMMJKLK ILLLLLLLMNNJ \nJMMMMMMMMQQP NNNNNNNMNM \nQTQQQQOMJJQP JSSSSSSSTUUQ \nQTQQQQOMJJQP PPPPPJNNM \n\n《卡农》　(括号是一起按) \nH-JLO E-ILN F-HJM C-GIL \nD-FHK A-EHJ D-FHK E-GIL \n(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL \n(MD)-FHK (LA)-CEH (MD)-FHK (NE)-GIL \nONOH (G B )LIJ (CH)ONM (CN)QST \n(DR)QPR (QA)PON (DM)LKJ (EI)KJI \n(EH)IJK (EG)ILK (FJ)MLK (CL)KJI \n(DH)FMN (AO)NML (DK)JIM LML \n(SJ)QRS-QR(SE)LMNOPQR \n(FQ)OPQ-JK(GL)MLKLJKL \n(FK)MLK-JI(JE)IHIJKLM \n(FK)MLM-NO(GL)MNOPQRS \n(SI)QRS-QR(SE)LMNOPQR \n(FQ)OPQ-JK(GL)MLKLJKL \n(FK)MLK-JI(EJ)IHIJKLM \n(FK)MLM-NO(GL)MNOPQRS \n(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL \n(MD)-FHK (LA)-CEH (MD)-FHK (NE)-\n\n\n《月亮代表我的心》Flash键盘钢琴谱\nLOQSONQS STUVTS QPOOO QPOOO PQPOMPQP LOQSONQS STUVTS \nPOOO QPOOO PQPMNOPO QSQPOSN MNMNMLQ SQPOSN MNOOOPQP LOQSONQS STUVTS \nQPOOO QPOOO PQPMNOPO\n\n《安静》 Flash键盘钢琴谱\nQQQQPONPPPO LQPOOOLQPOOP \nQQQQPONPPPO LQPOOOLQPOOPPQR \nRRRRQPOOOPP LSSSRQPPPQQ \nMRQRQPOONOL QRQRQPOPS \nLQRSRQSLQRSRQS LQRSRQOPPPQO \nSSOONOOSSOONOO RRQQPPORRQQPPO \nLQRSRQSLQRSRQS LQRSRQOPPPQO \nSSOONOOSSOONOO RRQQPPOORQPOMOO\n\n《好好恋爱》 Flash键盘钢琴谱\nJKLLLLLKJIIL NNONOOOPQNNL \nHMMMJMOLLLLJH KKKJKLMMMOML \nJKJJKLLLLJIHHO NMLML \nJHHMMLLLKJ OOOONOPP \nLRQLLRPLRQRQRQPO ONMMQMQMLLQLQL \nRQRQOP LRQLLRSPLRQQQRQPQ \nONMMQMQMLLQLQPOM OPNMNMNQPOO\n\n《痴心绝对》 Flash键盘钢琴谱\nOPQQQRQPPOPPSP ONOOOQQOOMNNQN \nMLMMMRRQSO MLMMMRROOMP \nOOPQQQRQPPOPPSP ONOOOQQOOMNNQN \nMLMMRRQSO MLMMMRROOONO\n\n《想唱就唱》Flash键盘钢琴谱\nonopol jkkklj \nonopol lmmmon \nonopqolj opolj \nonopqolo rqpoq \nqrst oopqp \npqrs srqpq \nqrstss uuvuspq rqrs \nqrst oopqp \npqs quuqv vuvtsoo tsrqrs ts \nqrst oopqp \npqrs srqpq \nqrstss uuvuspq rqrs \nqrst oopqp \npqs quuqv vuvtsoo tsrqrs\n\n《梦里》Flash键盘钢琴谱\nqqqqqqpo lmoooomq \nqqqqstsqp lpppppsq \nqqrs oopq llmoqpsq \nqqrs oopq llmoqpoo \nopqrsssrqrss \nssssvtsq \nqqpo opm moppppqp \nopqrsssrqrss \nssssvtsq \nqqpo opm mopqqqqpom \nqqqqqqpo lmoooomq \nqqqqstsqp lpppppsq \nqqrs oopq llmoqpsq \nqqrs oopq llmoqpoo \nopqrsssrqrss \nssssvtsq \nqqpo opm moppppqp \nopqrsssrqrss \nssssvtsq \nqqpo opm mopqqqqmpqt\n\n《画心》Flash键盘钢琴谱\nLJJ IHIILJ LJJIHILmJ LJJIHIHGHIGEF CEF FJIHGEF EEFFHGFEBC CCEFGHEHIJ \nLJJ IHIHGHIGEF CEFFJIHGEF CEFHGFEFC CEFFGHEHIJ LJJ IHIHGHIGEF CEFFJIHGEF \nLJJ IHIHGHIGEF CEFFJIHGEF LJJIHIILJ LJJIHILmJ LJJIHIHGHIGEF CEFFJIHGEF\n\n《雪绒花》Flash键盘钢琴谱\nCEI HED CCCDEFE \nCEI HED CEEFGHH \nI EEGFECEH \nFHIHGE \nCEI HED \nCEEFGHH\n\n《隐形的翅膀》Flash键盘钢琴谱\nJLOON MLMOJIH HHHOLMLJHI \nJLOON MLMOJIH HHHOLMLJIH\n\n《说好的幸福－周杰伦》Flash键盘钢琴谱\nL LLLL LLLL LLORQ QPQP NO PLLMNI LLM NIJMN OKJ KNO PLK LLM NMJ IFG前奏\nMNONMNL MLKLJ MNONMNLPP QQRQP \nLMNOO OONOPP PPPPOPLOO OOLOLOO OOOL OLOO OOOP QQQQ QQRQ 中间\nOPQ QQQQ QQQQ QQQP PNOP PPPP PPP PQPO OOOO SRRQ QPPO PPOP POPO RQQP POOP RRRR SO QQQQ QQQQ QQQP PNOS SSSS SSSP PQPO OMMO SRRQ QPPO QPLL QPO 高潮\n\n《給我一首歌的时间》Flash键盘钢琴谱\nLQQROPOOPQP \nLQQPOOMOMPO \nQQRQPOOMOMPL \nLLMPOOMOMOPP\n\n《最熟悉的陌生人》Flash键盘钢琴谱\nPQPQ \nOPQRSRRQQPOP \nPQPQ \nOTSRRQRQPQPO \nOVUUTSQTSSRSRS \nPQRQRV TVWW \nVWXXXXYXXX \nWVVTX \nSSTVVVTS \nSXXXWV \nVVVTW \nVWXXXXYXXX \nWVVWWV \nSSTVVVTSSXXXWVTV\n\n《世上只有妈妈好》Flash键盘钢琴谱\nM L J L O M L M \nJ L M L J I H F L J I \nI J L L M J I H \nL J I H F H E\n\n《死了都要爱》Flash键盘钢琴谱\nJOOOO PNMLKIJJ KKLM IIJK \nMNMN JOOOO PNMLKIJJ KKLM ONMM\n\n《虫儿飞》Flash键盘钢琴谱\njjjkljii hhhijjgg fji fji fjihh \njjjkljii hhhijjgg fji fji fjihh \njil kji lkjklji hfji hfih kjkjh hkjkjhih\n\n《大海》Flash键盘钢琴谱\nFEHHHH EFHHIH FHIIII HFIIJI \nJLMMLM LJIJIHF EFHHHHIH \nJLMMMMOMLLML JIHHHHIJ \nJIHHHHOMLLML JLMOOML \nJLMMMMOMLLML JIHHHHLJ \nJIHHHHIJLLJL JLM FJIHH\n\n《天空之城》Flash键盘钢琴谱\nMNONOQN LJMLMOLL\nKJKOJ JHOON OONNMN\nONOQN JMLMHLJ\nJKONOPQOO ONMMNLM\nOPQPQSP LONOQQ\nMNOONOPO LLRQPOQ\nQTSQPO POPSQ\nQTSQPO POPNM\nMNONOQN JMLMHLJ\n\n《梁祝》Flash键盘钢琴谱\nLJIH IGFE \nNMNLMKJL IJLIJKJIH \nLGIFHE FHE \nCEFHI FHE \nLOMLJLI \nIJGFEFHICHFEFHE \nJLGIFHE CECEFGIF \nEFHILJIJIHFECH FHFECEFHE \nJLIJIHGFE\n\n《我是真的受伤了》Flash键盘钢琴谱\nmomqp lnlpo mrqomopo momqp lnlpo momqppopsq momqp\nlnlpo lrqomop-po rrqqp psppo rrqqppopqrqq ttsspprqpo\nmqoo sqpp--- momqp lnlpo momqppopsq ttttspsppo\nmrqomopo---- JKONOPQOO ONMMNLM\n\n《往事难忘》Flash键盘钢琴谱\nH HIJ JKL MLJ LKJI KJIH \nH HIJ JKL MLJ LKJI JIH \nLKJI EEKJIH LKJI KJIH \nH HIJ JKL MLJ LKJI JIH\n\n《离家出走》Flash键盘钢琴谱 \nSTSQP SQPPO OOPQO OPPOQP STSQS VUSQSTS PQRQORQPO SZRQRSTSRQP QRSTS \nVUTUVVVUTUS QRSSTTQPPQRRSSPO ORQRQRRSTS QRTSVV SZZX VQQQPQUUUVTOSTSQ \nRRRPTS VUSSVV SWWU VTVTV ZYX TVWXVW TVUUV TVWXYXYW VUVWVXX UVWUVQQQ QQUUVUV \nTOSTSV TVVUVW XWVSVV SWWU VTVTVZYX TVWXVW TVUTS\n\n《心乱如麻》 Flash键盘钢琴谱\nTSRQRSRQ RRVUTSS QTS TSRQRSRQ RRTSVUV WVXWV \nVVUUVWS SQTS RRSQVUV WVXWV SXXXYXWV XXXYXWV SWWVWVXXW \nQSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV QRSTSVWUTS SYXSYXSXYZXVW QSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV\n\n《不能说的秘密》 Flash键盘钢琴谱\nEHHH EGGG EHHH EIII EHHH EGGG EHHH EIII EKKKK KJJ KKKLJIHGGH \nELLLL LKK LLLLLKKJJI EKKKK KJJ KKKLJIHGGIH FHLMH LLLLLKKJJI \nHONOOLLLLKKJ HONOOLLLLPPO HONONMHNMNML HMLMLKKJKLMML \nHONOOLLLLKKJ HONOOLLLLPPO HONONM HNMNML HMLMLKKJKLMML HLHKJ HHLHKJH\n\n《蜗牛》 Flash键盘钢琴谱\nJ JJKJIJIH HHK KIHHIJ HHL LMLKJK GH EEJ JKJIJH EEH HEHIJKL HONN NONMMNLHKLM MNOPQL EFLK KLKJIHI EEH HEHIJKL HONN NONMMNL HKLM MNOPQL EFLK KJIHHGH\n\n\n《123木头人》 Flash键盘钢琴谱\nLKJJJ III JIHIJO NML MKJKJK IJKONL MLL LKJJJ ILN MNONM J LMK KPOL IJKKJKL J I H\n\n\n《神秘园》 Flash键盘钢琴谱\njmno no opnmn nomlm lj jmno no opnmn nomlm lm nost tusrs noqr rsqpq nost tusrs strqr rsqpq jmno no opnmn nomlm lj jmno no opnmn nomlm lm\n\n《轨迹》 Flash键盘钢琴谱\nqeee reee weewqe qwee eweq hqewqw qeee reee weewqte qwee eweq hqewqw qjqjwq jwqjq q ttqqt qgqrewe ee rewqj wewq qtrewqwet g r eee ereww weqq ett qttrr ewreq qq wEwqw gr eee ereww weqq ett qttrr ewreq qerw jq\n\n《无赖》 Flash键盘钢琴谱\nHIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKKLKHI HIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKJHIH HHEFGHHIJHE EDDFEDE EFFGJIIHGH HHFEFG EEEJIHHIJHL JJLMMNOLJ JJLMMMKMNMLKLJ JKJKLMLL EJIHHIJHL JJLMMNONJ JJLMMMKMNMLJIH JKJKLMLLJIHH\n\n《海阔天空》 Flash键盘钢琴谱\nQPO PQSSSSTS TUVVVVVVUTST \nTSS SQPO QRQPPQPP QPPPOOOO POO \nTUVVVVVVUTSSSQPO \nVVVVWWWVWX XWV \nVVVVWW SSXWV \nVVVVWWWWVUV \nTTUTUV VVWVWX XWXV\n\n《下一站天后》 Flash键盘钢琴谱\nQQQSP PSOOOQM RQRTQ RSPPMOP QPQSSPQVUSST RQRSMOQPO \nQSUVUTSS QRSTRRQP POPQSS QTQPOP MOQPPQS \nVUTUT SSOQSS TTTRQP PPUS QQSO QQPPP TQS VUTUTSS OQSS TTTTVUTUVSSQSTSSRMNO\n\n《红河谷》Flash键盘钢琴谱\nehjjjjijih \nehjhjlkji \nlkjjihijlk \nffeghijih \nlhjjjijih \nehjjjlkji \nlkjjihijlkk \nffegijih\n\n《生日快乐》 Flash键盘钢琴谱\n\nEEFEHG EEFEIH\n\nEELJHGF KKJHIH\n\n09年1月21日更新Flash键盘钢琴谱\n\n《亡灵序曲》变奏和弦版Flash键盘钢琴谱\nTQTTUV TUV UTU\nQQVUT TTUTX WVW VUV\n\nWX WVZW WVW VUV QTUUVT\nMJMMNO MNO NMN\n\nJJON(MT)MMNMR QPQ POP\n(QW)R QPT QPQ POP JMNNOM\nTTUUV(TZ)(MT)(OU)(VP)(VP)(MT)\n\nTQTTUV TUV UTU\nQQVUT TTUTX WVW VUV\n\nWX WVZW WVW VUV QTUUVT\n\nMJMMNO MNO NMN\n\nJJON(MT)MMNMR QPQ POP\n\n(QW)R QPT QPQ POP JMNNOM\n\n(OU)(MT)(OU)(QW)(PV)(OU)(MT)\n\nMMOMR QPQ POPS S(TZ)\n\n《一千年以后》Flash键盘钢琴曲谱\nOHIJML KJHJI OHIJMNL JM NNNOPON ONOQQ\nNMNL MMNOPOPRQPPQO ONOQ NMNLMO\n\nOOOPQRQOQP LOP QPOLP QPONMJN\n\nONMNOPLQQ QRQOPP LOP QPOLP PQPONMPN\n\nONMLMOLPO QQRQP OPQPOPOLPO\n\n《男儿当自强》Flash键盘钢琴谱\nMOMOMLM\nMOMOLMP\nQOPS QPQO\nPQOPM\nOPMOL\nMOPOML MOL\nMOMLM OPOML\nMOLMP QSPQT\nQTSRQSQPQ\nQSTUTSQ QSTUSTU\nTUTSQSTUTSQSP\nQPOPSRQSP\nPQSTQSQPO MPO\nMOPQN NQPNM\nMOMLM\nMOMLM\nQSPQT\n\n《舞娘》Flash键盘钢琴曲谱\n\nKJK JKJK LKJ \nKJK JLK J- \nFKJK JKJK LKJ \nFFGHIHIH.IHIHFF \nMMLLKKJJMJ- \nFMMLLKKJ \nFMMLLKKJJMJ \nFFGHIHIH- \n.IHIHFF \nHH.JJ \nFFLJ \nFFGHJ \nFFGHL \nHH.JJFFLJ- \nFJIHI \nFJIHIJIHF \nIJIHIJIHF \nFJIHIJIHF \n\n(间奏略) \nMMLLKKJJMI \nFJKJKJKJ \nJKJI\n\n《借口》 Flash键盘钢琴曲谱 \n\nLLJKJKL JLONML 翻着我们的照片，想念若隐若现 \nMONOO QOOOLP 去年的冬天，我们笑得很甜 \nLLJKJKL JLONML 看着你哭泣的脸，背着我说再见 \nMONOO QOOPQP 来不及听见，你已走的很远 \nN（NN）ML（MN）P 也许你已经放弃我 \nO（OO）NM（NO）Q 也许已经很难回头 \nQPPOOLPO 我知道是自己错过 \nMNOOONOP PQPQP请在给我一个理由，说你不爱我 \nLJLPRQ LJLPRQ 就算是我不懂，能不能原谅我 \nLJLPRQPOPQPO 请不要把分手当作你的请求 \nMMKQPQP LLJPOPO 我知道坚持要走，是你受伤的借口 \nOPQO OPPOPQQPQP 请你回头，我会陪你一直走到最后 \nLJLPRQ LJLPRQ 就算没有结果，我也能够承受 \nLJLPRQ POPQPO 我知道你的痛是我给的承诺 \nMMKQPQP LLJPONO 你说给过我纵容，沉默是因为包容 \nOPQO LQPOO 如果要走，请你记得我 \nOPQO LQPOO 如果难过，请你忘了我。\n\n《当你孤单想起谁 和弦版》Flash键盘钢琴谱\n(EJ)K(AL)L(CL)L(EL) (CJ)K(EL)L(GL)L(IL) (HM)N(FO)J(NJ)J(GJ)J-I(EGJ) \n你的心情总在飞 什么事都想去追 想抓住一点安慰\n(GL)(DL)K(FK)J(DI)H Q (QL)R(OQ)P(JQO)--(SL)(DL)K(FK)J(HK)L--J(IE)--(X)(SW)\n你总是喜欢在人群中徘徊 你最害怕孤单的滋味 \n(EJ)K(AL)L(CL)L(EL)-(CJ)K(EL)L(GL)M(IL)\n你的心那么脆 一碰就会碎\n U(HM)N(FO)J(NJ)J(GJ)J-I(EGJ) J(K) (L) (SL)(DL)K(FK)J(DI)H\n 经不起一点风吹 你的身边总是要\n Q (QL)R(OQ)P(QO)--(SL)(DL)K(FK)J(HK)L\n 许多人陪 你最害怕每天的天黑\n (RM)-N (FO)(JO)(WP)O--O(CN)O(SN)(QL)\n 但是天总会黑 人总要离别\n L(DM)FH(FK)--K(JE)L-J(IE)\n 谁也不能永远陪谁\n (TM)N (FO)(JO)(WP)O--O(CN)O(SN)(QL) \n 而孤单的滋味 谁都要面对\n L(DM)O(FO)O(HO)O-O(QOL)P(PL)O-Q(PGL)-\n 不只是你我会感觉到疲惫\n (OJ)P(QHO)-(QO)R(JO) (NP)O(LP)-(SP)P(NUP) (QFO)-(JO)P(MO) (NJ)M(NC)-(GQ)N(NSL)\n 当你孤单你会想起谁 你想不想找个人来陪\n k(KM) PQ(LP)OM--(GL) PQ(EP)OM--(DTM) (WP)X(WEP)V(PT)U (VLA)-\n 你的快乐伤悲 只有我能体会 让我再陪你走一回\n\n 周华健的《朋友》Flash键盘钢琴谱\n\n Q-(OHIJA)--(PHIJ)-(AHQ)-(OHIJA)--(PHIJ)-(CQ)-(SHIJG)--(SHIJ)-(TGN)-(OFHJA)--(MAC)-(OF)-(PHIJ)--(PHIJ)-(OIB)-(MFHJ)--(MFHJ)-(OIB)-(PHIJB)-Q-(PHIJ)-(OIB)-(PGIL)--(QGIL)-(PE)O(OHIJA)--(PHIJ)-(QHA)O(OHIJ)--(PHIJ)-(QHA)-(SGIJ)--(SGIJ)-(TNG)-(OFHJ)--(MFHJ)-(OF)-(PHIK)--(PHIK)-(OIB)-(MADF)--(LBEG)-M-(OHJLF)CG-H-E-H-(IQ)-(SJ)-(SA)-(SE)-(SHJL)-(TE)-(SG)-E-(TGJL)-(UE)-(VF)-(TJ)-(THJM)-(SF)-(QE)--(QGJL)-(PE)-(OD)-H-(OHJM)-(TF)-(SC)-G-(QFJL)-(PE)-(OBI)-F-(MIFB)-(PDB)-(PE)BEF(QG)I(SL)N(SL)J(SH)E(LS)J(TH)E(SL)JHE(TL)Q(UG)E(VM)J(TH)F(TM)J(SH)F(QL)JGE(QL)J(PG)(OE)(OK)HFD(OK)H(TF)(SD)(SJ)GEC(QJ)G(PE)(OC)(OK)HFD(FB)D(OE)I(OHA)EHIJLOP(DK)HMMOMORT(AHJLO)-\n\n  \n\n  《笑傲江湖》  Flash键盘钢琴谱\n\n  JMJ LL-J IJLML J--\n\n  JMJ LL-J IJLML J--\n\n  J JI HHIJ IIIIH MMHIJ\n\n  LMLJI HIIJ IIIH MMHIJ LM-\n\n  QPO P-- OMSSQ P-- \n\n  MHII ILJ MIJ HIM \n\n  HML MJIJL M-- M--\n\n  JMJ LL-J IJLML J-- \n\n  JMJ LL-J IJLML J--\n\n   \n\n   请不要爱我 键盘钢琴谱\n   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q 9 S - - \n   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q ST(US) T S [9S9]\n   (QH) L O Q (9I) M P 9 (SE) I L N (U9) - - -\n   (SH) L (SO) S S S S - (9I) M (9P) 9 9 U 9 P \n   (QH) L (QO) Q Q - Q - (PB) F (MI) N P - - [99]\n   (SH) L (SO) S S U S - (9`) I (94) 9 9 U 9 P\n   (QA) E (QH) (QE) (QJ) - Q - (9B) F I 4 (/M)\n   (UE) I L (UN) (UP) (TN) (SL) (UI) (TI) M P (T9) (WT) (U9) (VP) (WM)\n   (UC) G J (UL) (VN) U (TL) (SJ) (VA) E U E T E S E\n   O C F H J - (PM) - 9 B (U`) G (9I) - (P4）\n   (QA) E H J L S Q U B F (TI) 4 M P (94) (TI)\n   (SW) B E G I G (NPE) B (SW) B E G (SVI) G (SUE) C\n   (TB) (TWF) (TWH) (TWJ) (TWL) (TJ) (UH) (VF) (SUC) G J L (SN) L (9J) G\n   (RB) (PSF) (PSI) (PS4) (SWZE) I (WYL) N (VXA) E H J (XL) (XZ) X\n   - [ ` G . Z - - (V,) E G I 4 V X T\n   C G J L (QSN) (QT) (QU) (QS) (QSVA) E H J L - Q -\n   (9B) F (PI) 4 (9U) F I (T4) (TA) E (SH) J L - 9 -\n   S B (PE) G (PS) B (PTE) G (9U) B (9WE) G (9X) B (9/E) G\n   (SC) G J 4 L - - -\n\n\n\n   　　回到过去 \n   　　hjjiihgh \n   　　hggffecf \n   　　feehhjji \n   　　ihhhgfe \n   　　hjjiihgih \n   　　hggffecg \n   　　feee \n   　　edced \n   　　hjji \n   　　iiihijji \n   　　eghhghml \n   　　hihjhhgee \n   　　ehihjhkkji \n   　　ehijj \n   　　jijkkjji \n   　　ihjjjiihgh \n   　　hihjjjj \n   　　hhlljjj \n   　　hhiihhhfhfhi \n   　　ehigh\n\n   　　亲爱的那不是爱情 \n   　　OOONMMLMLLKJL \n   　　HMMMMLOJJIIHI \n   　　JIHGHLL \n   　　LHMLLL \n   　　MNOOOLKJIHH \n   　　OOONMMLMLLKJL \n   　　HMMMMLOJJIIHI \n   　　JIHGHLL \n   　　LHMLLL \n   　　MNOOOLKJIHH \n   　　JJLPQLNNOM \n   　　KKMSRMOOPN \n   　　LLJPOPQPOJ \n   　　ONLONNLQQRP \n   　　JJLPQLNNOM \n   　　KKMSRMOOPN \n   　　LLJPOPQPOO \n   　　MOSRQPOO\n\n   　哆啦A梦 \n   　　ehhjmjl \n   　　lmljkji \n   　　fiiknnmlkkjfghi \n   　　ehhjmjl \n   　　lmljkji \n   　　fiiknnmlkkjfgih \n   　　mmlklml \n   　　ijkil \n   　　mlkinmlmlk \n   　　lmjih\n\n   　　同桌的你 \n   　　lllljkln \n   　　mmmmkml \n   　　llllnmlk \n   　　kkkkjih \n   　　oooolmoq \n   　　pppponm \n   　　nnnnnopl \n   　　nnopono \n   　　oooolmoq \n   　　pppponm \n   　　nnnnnopl \n   　　nnopono\n\n\n   　　大海 \n   　　FEHHHH EFHHIH FHIIII HFIIJI \n   　　JLMMLM LJIJIHF EFHHHHIH \n   　　JIMMMMOMLLML JIHHHHIJ \n   　　JIHHHHOMLLML JLMOOML \n   　　JIMMMMOMLLML JIHHHHLJ \n   　　JIHHHHIJLLJL JLM FJIHH\n\n\n   　送别》 　　\n   　　LJLO MOL 　　\n   　　LHIJ IHI 　　\n   　　LJLO NMOL 　　\n   　　LIJK GA\n\n\n   　　天空之城 \n   　　MNONOQN LJMLMOLL \n   　　KJKOJ JHOON OONNMN \n   　　ONOQN JMLMHLJ \n   　　JKONOPQOO ONMMNLM \n   　　OPQPQSP LONOQQ \n   　　MNOONOPO LLRQPOQ \n   　　QTSQPO POPSQ \n   　　QTSQPO POPNM \n   　　MNONOQN JMLMHLJ \n   　　JKONOPQOO ONMMNLM \n   　　\n   　　梁祝 \n   　　LJIH IGFE \n   　　NMNLMKJL IJLIJKJIH \n   　　LGIFHE FHE \n   　　CEFHI FHE \n   　　LOMLJLI \n   　　IJGFEFHICHFEFHE \n   　　JLGIFHE CECEFGIF \n   　　EFHILJIJIHFECH FHFECEFHE \n   　　JLIJIHGFE\n","source":"_posts/song_lyric_20170330.md","raw":"---\ntitle: 电脑模拟钢琴按键简谱 \ndate: 2017-03-30 11:27:35\ntags:\n---\n\n## 正文\n《童话》　　\nLONOL LONOL LONO OOMMLLONOL LQPPO LONOM MMOTS PPRRQQ QQNPOONO ONOR LSRQPPPRRQQ QQVUTUV VPOT TTSSSLSRQQRQ QRQ RQPOOQST TTSPPRQ OQST TTSPPRQRQPO PQMMOONO\n\n《星语心愿》　　\nTVUTSTQ TSTVUVUTUV　　\nVWXXXXW VUTUS TVUTST　　\nQSTXWVUV VUTTTTSSTQ　　\nSSTXWVUVV VUTTSUT\n\n\n《会呼吸的痛》\nSTVTXXTW WWVUVWXWSV VUTUVRRRVVWVSSS SYXWXX STVTXXTW WWVUVWXWSVV VUTUVRRRVVWVSSS STUVVUVV \n\n《欢乐颂》 \nJ J K L L K J I H H I J J I IJ J K L L K J I H H I J I H H I I J H I J K J H I J K J I H I E J J K L L K J I H H I J I H H \n\n《千千阙歌》\nHHIJ LMONNNLJ IIIJK MOQPPNLHHIJ LMONNNLJ IIIJK MOQPPNLMLMLMNNMN PPPPNOPQQQPPPOQ NLMLMOPQQPQ QPOP OMM LMOP QQPQ QSTSQQQQPPOPOM QQRQPOP QQ Q PPOP OMOO\n\n《婚礼进行曲》\nHKKK HLJK HKNNMLKJKL HKKK HLJK HKMOMKILMKNMLII JKLL NMLII JKLL HKKK HLJK HKMOMKILMKILMKK \n\n《青花瓷》\nLLJ IJF IJLJ I \nLLJ IJE IJLI H \nHIJLMLJ LJJI I \nHIH IHI IJLJ J \nLLJ IJF IJLJI \nLLJ IJE IJLIH \nHIJ LMLJ LJJII EJIIH \n\n《夜曲》\nMN OOOONQQ TTTSRSOO\nRRRSQNQP PONOON\nOOOONQQ TTTSRSOO\nRRR QPNOM\n\n《暗香》\nJKJGHJM ONLJ JKJGHJM \nONLQ MMMOQLKMP PQRPQRQ \nMPQRPQRM MQRSQRSM PQRMR \nSKPQPQRQ \nJKJGHJMONLJ \nJKJGHJMONLM \n\n《遇见》\nLJ LI JIH HGFGHGHIJ \nLJ LP ONO HGFGHGHIH \nLMNONONMLML HIJKJKLHIJ \nLMNONONPOPOQL HIJKJKJIHGH \nLMNONOPONML HIJKJKLHHML \nLMNONOPOPQL, HIJKJKLHHML \nLMNONOPOPQL, HIJIJILHIJH \nLMNONOMNLKL \nJJJKLJEE IIIJKIEE \nHHHIJIGH GFGHG \nFEFML IKJIH \nHGFIIHFFGH \n\n《波斯猫》\nOOOMLMLJJ MMMLJLJII \nOOOMOMOJJ IMJ JL M M M \n\n《菊花台》\nJJIJ JLJIJ HHIJLJ IIHI \nJ LJML MLLJL EJIILJIIIHI \nJJIJ JLJIJ HHIJLJ IIHI \nJ LJML MLLJL JIJLJIIH \nHIJJLM MQQPOML MLJIH FHIIHI \nHIJJLM MQPOOPO LLJNOHIJIH \n\n《北京欢迎你》歌谱 \nQSQPQPQQPMO QP \nPOMOPQSPQTSSPO \nPOMOPQSPQTSSQ \nPQPOSTQMQPPO \nQSVSTTS QQ SS QS TV WV SQ P S Q Q \nQS VS TV WV SQ SVT QP QS XW VV \n\n致爱丽斯\nQPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMNOPQLRQPKQPOJPONNJQQQQPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMORQQPPRTSRQPONMMLMNOPPQRMOPNOPQSPNOPQSPNQQQQQP \n\n《约定》 \nLOPQPOQPLL JMNONMONJL MLLKKOJJPO \nPQRQQPOMP LOPQPOQPNL QMNONMONJL \nMLLKKOPQO MNOMOTSS POSQ QPONOMJM \nOPOTR RQRMNOP QRSSSTO \nSNPO PQMORQRSP POSQ QPONOMJM \nOPOTR RQRMNOP QRSSSTO \nSNPO PQRMRQOPO \n\n《美丽的神话》 \nMQN MOPOQ MTSTSPRQ \nMTSPQRQ O MQPNM \nMQNMOPOQ MTSTSPRQ \nMTSPQRQPO MPONM \nMNOPQONL MOPQQ \nMNOPQONLMOPOO MPONM \nMNOPQONL MOPQQ \nMNOPQONLMOPOO OOPQONLONMNT\n\n《有没有人告诉你》 \nJMMMMMMMMJKLK JLLLLLLLMNNJ \nJMMMMMMMMQQP NNNNNJONON \nJMMMMMMMMJKLK ILLLLLLLMNNJ \nJMMMMMMMMQQP NNNNNNNMNM \nQTQQQQOMJJQP JSSSSSSSTUUQ \nQTQQQQOMJJQP PPPPPJNNM \n\n《卡农》　(括号是一起按) \nH-JLO E-ILN F-HJM C-GIL \nD-FHK A-EHJ D-FHK E-GIL \n(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL \n(MD)-FHK (LA)-CEH (MD)-FHK (NE)-GIL \nONOH (G B )LIJ (CH)ONM (CN)QST \n(DR)QPR (QA)PON (DM)LKJ (EI)KJI \n(EH)IJK (EG)ILK (FJ)MLK (CL)KJI \n(DH)FMN (AO)NML (DK)JIM LML \n(SJ)QRS-QR(SE)LMNOPQR \n(FQ)OPQ-JK(GL)MLKLJKL \n(FK)MLK-JI(JE)IHIJKLM \n(FK)MLM-NO(GL)MNOPQRS \n(SI)QRS-QR(SE)LMNOPQR \n(FQ)OPQ-JK(GL)MLKLJKL \n(FK)MLK-JI(EJ)IHIJKLM \n(FK)MLM-NO(GL)MNOPQRS \n(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL \n(MD)-FHK (LA)-CEH (MD)-FHK (NE)-\n\n\n《月亮代表我的心》Flash键盘钢琴谱\nLOQSONQS STUVTS QPOOO QPOOO PQPOMPQP LOQSONQS STUVTS \nPOOO QPOOO PQPMNOPO QSQPOSN MNMNMLQ SQPOSN MNOOOPQP LOQSONQS STUVTS \nQPOOO QPOOO PQPMNOPO\n\n《安静》 Flash键盘钢琴谱\nQQQQPONPPPO LQPOOOLQPOOP \nQQQQPONPPPO LQPOOOLQPOOPPQR \nRRRRQPOOOPP LSSSRQPPPQQ \nMRQRQPOONOL QRQRQPOPS \nLQRSRQSLQRSRQS LQRSRQOPPPQO \nSSOONOOSSOONOO RRQQPPORRQQPPO \nLQRSRQSLQRSRQS LQRSRQOPPPQO \nSSOONOOSSOONOO RRQQPPOORQPOMOO\n\n《好好恋爱》 Flash键盘钢琴谱\nJKLLLLLKJIIL NNONOOOPQNNL \nHMMMJMOLLLLJH KKKJKLMMMOML \nJKJJKLLLLJIHHO NMLML \nJHHMMLLLKJ OOOONOPP \nLRQLLRPLRQRQRQPO ONMMQMQMLLQLQL \nRQRQOP LRQLLRSPLRQQQRQPQ \nONMMQMQMLLQLQPOM OPNMNMNQPOO\n\n《痴心绝对》 Flash键盘钢琴谱\nOPQQQRQPPOPPSP ONOOOQQOOMNNQN \nMLMMMRRQSO MLMMMRROOMP \nOOPQQQRQPPOPPSP ONOOOQQOOMNNQN \nMLMMRRQSO MLMMMRROOONO\n\n《想唱就唱》Flash键盘钢琴谱\nonopol jkkklj \nonopol lmmmon \nonopqolj opolj \nonopqolo rqpoq \nqrst oopqp \npqrs srqpq \nqrstss uuvuspq rqrs \nqrst oopqp \npqs quuqv vuvtsoo tsrqrs ts \nqrst oopqp \npqrs srqpq \nqrstss uuvuspq rqrs \nqrst oopqp \npqs quuqv vuvtsoo tsrqrs\n\n《梦里》Flash键盘钢琴谱\nqqqqqqpo lmoooomq \nqqqqstsqp lpppppsq \nqqrs oopq llmoqpsq \nqqrs oopq llmoqpoo \nopqrsssrqrss \nssssvtsq \nqqpo opm moppppqp \nopqrsssrqrss \nssssvtsq \nqqpo opm mopqqqqpom \nqqqqqqpo lmoooomq \nqqqqstsqp lpppppsq \nqqrs oopq llmoqpsq \nqqrs oopq llmoqpoo \nopqrsssrqrss \nssssvtsq \nqqpo opm moppppqp \nopqrsssrqrss \nssssvtsq \nqqpo opm mopqqqqmpqt\n\n《画心》Flash键盘钢琴谱\nLJJ IHIILJ LJJIHILmJ LJJIHIHGHIGEF CEF FJIHGEF EEFFHGFEBC CCEFGHEHIJ \nLJJ IHIHGHIGEF CEFFJIHGEF CEFHGFEFC CEFFGHEHIJ LJJ IHIHGHIGEF CEFFJIHGEF \nLJJ IHIHGHIGEF CEFFJIHGEF LJJIHIILJ LJJIHILmJ LJJIHIHGHIGEF CEFFJIHGEF\n\n《雪绒花》Flash键盘钢琴谱\nCEI HED CCCDEFE \nCEI HED CEEFGHH \nI EEGFECEH \nFHIHGE \nCEI HED \nCEEFGHH\n\n《隐形的翅膀》Flash键盘钢琴谱\nJLOON MLMOJIH HHHOLMLJHI \nJLOON MLMOJIH HHHOLMLJIH\n\n《说好的幸福－周杰伦》Flash键盘钢琴谱\nL LLLL LLLL LLORQ QPQP NO PLLMNI LLM NIJMN OKJ KNO PLK LLM NMJ IFG前奏\nMNONMNL MLKLJ MNONMNLPP QQRQP \nLMNOO OONOPP PPPPOPLOO OOLOLOO OOOL OLOO OOOP QQQQ QQRQ 中间\nOPQ QQQQ QQQQ QQQP PNOP PPPP PPP PQPO OOOO SRRQ QPPO PPOP POPO RQQP POOP RRRR SO QQQQ QQQQ QQQP PNOS SSSS SSSP PQPO OMMO SRRQ QPPO QPLL QPO 高潮\n\n《給我一首歌的时间》Flash键盘钢琴谱\nLQQROPOOPQP \nLQQPOOMOMPO \nQQRQPOOMOMPL \nLLMPOOMOMOPP\n\n《最熟悉的陌生人》Flash键盘钢琴谱\nPQPQ \nOPQRSRRQQPOP \nPQPQ \nOTSRRQRQPQPO \nOVUUTSQTSSRSRS \nPQRQRV TVWW \nVWXXXXYXXX \nWVVTX \nSSTVVVTS \nSXXXWV \nVVVTW \nVWXXXXYXXX \nWVVWWV \nSSTVVVTSSXXXWVTV\n\n《世上只有妈妈好》Flash键盘钢琴谱\nM L J L O M L M \nJ L M L J I H F L J I \nI J L L M J I H \nL J I H F H E\n\n《死了都要爱》Flash键盘钢琴谱\nJOOOO PNMLKIJJ KKLM IIJK \nMNMN JOOOO PNMLKIJJ KKLM ONMM\n\n《虫儿飞》Flash键盘钢琴谱\njjjkljii hhhijjgg fji fji fjihh \njjjkljii hhhijjgg fji fji fjihh \njil kji lkjklji hfji hfih kjkjh hkjkjhih\n\n《大海》Flash键盘钢琴谱\nFEHHHH EFHHIH FHIIII HFIIJI \nJLMMLM LJIJIHF EFHHHHIH \nJLMMMMOMLLML JIHHHHIJ \nJIHHHHOMLLML JLMOOML \nJLMMMMOMLLML JIHHHHLJ \nJIHHHHIJLLJL JLM FJIHH\n\n《天空之城》Flash键盘钢琴谱\nMNONOQN LJMLMOLL\nKJKOJ JHOON OONNMN\nONOQN JMLMHLJ\nJKONOPQOO ONMMNLM\nOPQPQSP LONOQQ\nMNOONOPO LLRQPOQ\nQTSQPO POPSQ\nQTSQPO POPNM\nMNONOQN JMLMHLJ\n\n《梁祝》Flash键盘钢琴谱\nLJIH IGFE \nNMNLMKJL IJLIJKJIH \nLGIFHE FHE \nCEFHI FHE \nLOMLJLI \nIJGFEFHICHFEFHE \nJLGIFHE CECEFGIF \nEFHILJIJIHFECH FHFECEFHE \nJLIJIHGFE\n\n《我是真的受伤了》Flash键盘钢琴谱\nmomqp lnlpo mrqomopo momqp lnlpo momqppopsq momqp\nlnlpo lrqomop-po rrqqp psppo rrqqppopqrqq ttsspprqpo\nmqoo sqpp--- momqp lnlpo momqppopsq ttttspsppo\nmrqomopo---- JKONOPQOO ONMMNLM\n\n《往事难忘》Flash键盘钢琴谱\nH HIJ JKL MLJ LKJI KJIH \nH HIJ JKL MLJ LKJI JIH \nLKJI EEKJIH LKJI KJIH \nH HIJ JKL MLJ LKJI JIH\n\n《离家出走》Flash键盘钢琴谱 \nSTSQP SQPPO OOPQO OPPOQP STSQS VUSQSTS PQRQORQPO SZRQRSTSRQP QRSTS \nVUTUVVVUTUS QRSSTTQPPQRRSSPO ORQRQRRSTS QRTSVV SZZX VQQQPQUUUVTOSTSQ \nRRRPTS VUSSVV SWWU VTVTV ZYX TVWXVW TVUUV TVWXYXYW VUVWVXX UVWUVQQQ QQUUVUV \nTOSTSV TVVUVW XWVSVV SWWU VTVTVZYX TVWXVW TVUTS\n\n《心乱如麻》 Flash键盘钢琴谱\nTSRQRSRQ RRVUTSS QTS TSRQRSRQ RRTSVUV WVXWV \nVVUUVWS SQTS RRSQVUV WVXWV SXXXYXWV XXXYXWV SWWVWVXXW \nQSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV QRSTSVWUTS SYXSYXSXYZXVW QSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV\n\n《不能说的秘密》 Flash键盘钢琴谱\nEHHH EGGG EHHH EIII EHHH EGGG EHHH EIII EKKKK KJJ KKKLJIHGGH \nELLLL LKK LLLLLKKJJI EKKKK KJJ KKKLJIHGGIH FHLMH LLLLLKKJJI \nHONOOLLLLKKJ HONOOLLLLPPO HONONMHNMNML HMLMLKKJKLMML \nHONOOLLLLKKJ HONOOLLLLPPO HONONM HNMNML HMLMLKKJKLMML HLHKJ HHLHKJH\n\n《蜗牛》 Flash键盘钢琴谱\nJ JJKJIJIH HHK KIHHIJ HHL LMLKJK GH EEJ JKJIJH EEH HEHIJKL HONN NONMMNLHKLM MNOPQL EFLK KLKJIHI EEH HEHIJKL HONN NONMMNL HKLM MNOPQL EFLK KJIHHGH\n\n\n《123木头人》 Flash键盘钢琴谱\nLKJJJ III JIHIJO NML MKJKJK IJKONL MLL LKJJJ ILN MNONM J LMK KPOL IJKKJKL J I H\n\n\n《神秘园》 Flash键盘钢琴谱\njmno no opnmn nomlm lj jmno no opnmn nomlm lm nost tusrs noqr rsqpq nost tusrs strqr rsqpq jmno no opnmn nomlm lj jmno no opnmn nomlm lm\n\n《轨迹》 Flash键盘钢琴谱\nqeee reee weewqe qwee eweq hqewqw qeee reee weewqte qwee eweq hqewqw qjqjwq jwqjq q ttqqt qgqrewe ee rewqj wewq qtrewqwet g r eee ereww weqq ett qttrr ewreq qq wEwqw gr eee ereww weqq ett qttrr ewreq qerw jq\n\n《无赖》 Flash键盘钢琴谱\nHIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKKLKHI HIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKJHIH HHEFGHHIJHE EDDFEDE EFFGJIIHGH HHFEFG EEEJIHHIJHL JJLMMNOLJ JJLMMMKMNMLKLJ JKJKLMLL EJIHHIJHL JJLMMNONJ JJLMMMKMNMLJIH JKJKLMLLJIHH\n\n《海阔天空》 Flash键盘钢琴谱\nQPO PQSSSSTS TUVVVVVVUTST \nTSS SQPO QRQPPQPP QPPPOOOO POO \nTUVVVVVVUTSSSQPO \nVVVVWWWVWX XWV \nVVVVWW SSXWV \nVVVVWWWWVUV \nTTUTUV VVWVWX XWXV\n\n《下一站天后》 Flash键盘钢琴谱\nQQQSP PSOOOQM RQRTQ RSPPMOP QPQSSPQVUSST RQRSMOQPO \nQSUVUTSS QRSTRRQP POPQSS QTQPOP MOQPPQS \nVUTUT SSOQSS TTTRQP PPUS QQSO QQPPP TQS VUTUTSS OQSS TTTTVUTUVSSQSTSSRMNO\n\n《红河谷》Flash键盘钢琴谱\nehjjjjijih \nehjhjlkji \nlkjjihijlk \nffeghijih \nlhjjjijih \nehjjjlkji \nlkjjihijlkk \nffegijih\n\n《生日快乐》 Flash键盘钢琴谱\n\nEEFEHG EEFEIH\n\nEELJHGF KKJHIH\n\n09年1月21日更新Flash键盘钢琴谱\n\n《亡灵序曲》变奏和弦版Flash键盘钢琴谱\nTQTTUV TUV UTU\nQQVUT TTUTX WVW VUV\n\nWX WVZW WVW VUV QTUUVT\nMJMMNO MNO NMN\n\nJJON(MT)MMNMR QPQ POP\n(QW)R QPT QPQ POP JMNNOM\nTTUUV(TZ)(MT)(OU)(VP)(VP)(MT)\n\nTQTTUV TUV UTU\nQQVUT TTUTX WVW VUV\n\nWX WVZW WVW VUV QTUUVT\n\nMJMMNO MNO NMN\n\nJJON(MT)MMNMR QPQ POP\n\n(QW)R QPT QPQ POP JMNNOM\n\n(OU)(MT)(OU)(QW)(PV)(OU)(MT)\n\nMMOMR QPQ POPS S(TZ)\n\n《一千年以后》Flash键盘钢琴曲谱\nOHIJML KJHJI OHIJMNL JM NNNOPON ONOQQ\nNMNL MMNOPOPRQPPQO ONOQ NMNLMO\n\nOOOPQRQOQP LOP QPOLP QPONMJN\n\nONMNOPLQQ QRQOPP LOP QPOLP PQPONMPN\n\nONMLMOLPO QQRQP OPQPOPOLPO\n\n《男儿当自强》Flash键盘钢琴谱\nMOMOMLM\nMOMOLMP\nQOPS QPQO\nPQOPM\nOPMOL\nMOPOML MOL\nMOMLM OPOML\nMOLMP QSPQT\nQTSRQSQPQ\nQSTUTSQ QSTUSTU\nTUTSQSTUTSQSP\nQPOPSRQSP\nPQSTQSQPO MPO\nMOPQN NQPNM\nMOMLM\nMOMLM\nQSPQT\n\n《舞娘》Flash键盘钢琴曲谱\n\nKJK JKJK LKJ \nKJK JLK J- \nFKJK JKJK LKJ \nFFGHIHIH.IHIHFF \nMMLLKKJJMJ- \nFMMLLKKJ \nFMMLLKKJJMJ \nFFGHIHIH- \n.IHIHFF \nHH.JJ \nFFLJ \nFFGHJ \nFFGHL \nHH.JJFFLJ- \nFJIHI \nFJIHIJIHF \nIJIHIJIHF \nFJIHIJIHF \n\n(间奏略) \nMMLLKKJJMI \nFJKJKJKJ \nJKJI\n\n《借口》 Flash键盘钢琴曲谱 \n\nLLJKJKL JLONML 翻着我们的照片，想念若隐若现 \nMONOO QOOOLP 去年的冬天，我们笑得很甜 \nLLJKJKL JLONML 看着你哭泣的脸，背着我说再见 \nMONOO QOOPQP 来不及听见，你已走的很远 \nN（NN）ML（MN）P 也许你已经放弃我 \nO（OO）NM（NO）Q 也许已经很难回头 \nQPPOOLPO 我知道是自己错过 \nMNOOONOP PQPQP请在给我一个理由，说你不爱我 \nLJLPRQ LJLPRQ 就算是我不懂，能不能原谅我 \nLJLPRQPOPQPO 请不要把分手当作你的请求 \nMMKQPQP LLJPOPO 我知道坚持要走，是你受伤的借口 \nOPQO OPPOPQQPQP 请你回头，我会陪你一直走到最后 \nLJLPRQ LJLPRQ 就算没有结果，我也能够承受 \nLJLPRQ POPQPO 我知道你的痛是我给的承诺 \nMMKQPQP LLJPONO 你说给过我纵容，沉默是因为包容 \nOPQO LQPOO 如果要走，请你记得我 \nOPQO LQPOO 如果难过，请你忘了我。\n\n《当你孤单想起谁 和弦版》Flash键盘钢琴谱\n(EJ)K(AL)L(CL)L(EL) (CJ)K(EL)L(GL)L(IL) (HM)N(FO)J(NJ)J(GJ)J-I(EGJ) \n你的心情总在飞 什么事都想去追 想抓住一点安慰\n(GL)(DL)K(FK)J(DI)H Q (QL)R(OQ)P(JQO)--(SL)(DL)K(FK)J(HK)L--J(IE)--(X)(SW)\n你总是喜欢在人群中徘徊 你最害怕孤单的滋味 \n(EJ)K(AL)L(CL)L(EL)-(CJ)K(EL)L(GL)M(IL)\n你的心那么脆 一碰就会碎\n U(HM)N(FO)J(NJ)J(GJ)J-I(EGJ) J(K) (L) (SL)(DL)K(FK)J(DI)H\n 经不起一点风吹 你的身边总是要\n Q (QL)R(OQ)P(QO)--(SL)(DL)K(FK)J(HK)L\n 许多人陪 你最害怕每天的天黑\n (RM)-N (FO)(JO)(WP)O--O(CN)O(SN)(QL)\n 但是天总会黑 人总要离别\n L(DM)FH(FK)--K(JE)L-J(IE)\n 谁也不能永远陪谁\n (TM)N (FO)(JO)(WP)O--O(CN)O(SN)(QL) \n 而孤单的滋味 谁都要面对\n L(DM)O(FO)O(HO)O-O(QOL)P(PL)O-Q(PGL)-\n 不只是你我会感觉到疲惫\n (OJ)P(QHO)-(QO)R(JO) (NP)O(LP)-(SP)P(NUP) (QFO)-(JO)P(MO) (NJ)M(NC)-(GQ)N(NSL)\n 当你孤单你会想起谁 你想不想找个人来陪\n k(KM) PQ(LP)OM--(GL) PQ(EP)OM--(DTM) (WP)X(WEP)V(PT)U (VLA)-\n 你的快乐伤悲 只有我能体会 让我再陪你走一回\n\n 周华健的《朋友》Flash键盘钢琴谱\n\n Q-(OHIJA)--(PHIJ)-(AHQ)-(OHIJA)--(PHIJ)-(CQ)-(SHIJG)--(SHIJ)-(TGN)-(OFHJA)--(MAC)-(OF)-(PHIJ)--(PHIJ)-(OIB)-(MFHJ)--(MFHJ)-(OIB)-(PHIJB)-Q-(PHIJ)-(OIB)-(PGIL)--(QGIL)-(PE)O(OHIJA)--(PHIJ)-(QHA)O(OHIJ)--(PHIJ)-(QHA)-(SGIJ)--(SGIJ)-(TNG)-(OFHJ)--(MFHJ)-(OF)-(PHIK)--(PHIK)-(OIB)-(MADF)--(LBEG)-M-(OHJLF)CG-H-E-H-(IQ)-(SJ)-(SA)-(SE)-(SHJL)-(TE)-(SG)-E-(TGJL)-(UE)-(VF)-(TJ)-(THJM)-(SF)-(QE)--(QGJL)-(PE)-(OD)-H-(OHJM)-(TF)-(SC)-G-(QFJL)-(PE)-(OBI)-F-(MIFB)-(PDB)-(PE)BEF(QG)I(SL)N(SL)J(SH)E(LS)J(TH)E(SL)JHE(TL)Q(UG)E(VM)J(TH)F(TM)J(SH)F(QL)JGE(QL)J(PG)(OE)(OK)HFD(OK)H(TF)(SD)(SJ)GEC(QJ)G(PE)(OC)(OK)HFD(FB)D(OE)I(OHA)EHIJLOP(DK)HMMOMORT(AHJLO)-\n\n  \n\n  《笑傲江湖》  Flash键盘钢琴谱\n\n  JMJ LL-J IJLML J--\n\n  JMJ LL-J IJLML J--\n\n  J JI HHIJ IIIIH MMHIJ\n\n  LMLJI HIIJ IIIH MMHIJ LM-\n\n  QPO P-- OMSSQ P-- \n\n  MHII ILJ MIJ HIM \n\n  HML MJIJL M-- M--\n\n  JMJ LL-J IJLML J-- \n\n  JMJ LL-J IJLML J--\n\n   \n\n   请不要爱我 键盘钢琴谱\n   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q 9 S - - \n   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q ST(US) T S [9S9]\n   (QH) L O Q (9I) M P 9 (SE) I L N (U9) - - -\n   (SH) L (SO) S S S S - (9I) M (9P) 9 9 U 9 P \n   (QH) L (QO) Q Q - Q - (PB) F (MI) N P - - [99]\n   (SH) L (SO) S S U S - (9`) I (94) 9 9 U 9 P\n   (QA) E (QH) (QE) (QJ) - Q - (9B) F I 4 (/M)\n   (UE) I L (UN) (UP) (TN) (SL) (UI) (TI) M P (T9) (WT) (U9) (VP) (WM)\n   (UC) G J (UL) (VN) U (TL) (SJ) (VA) E U E T E S E\n   O C F H J - (PM) - 9 B (U`) G (9I) - (P4）\n   (QA) E H J L S Q U B F (TI) 4 M P (94) (TI)\n   (SW) B E G I G (NPE) B (SW) B E G (SVI) G (SUE) C\n   (TB) (TWF) (TWH) (TWJ) (TWL) (TJ) (UH) (VF) (SUC) G J L (SN) L (9J) G\n   (RB) (PSF) (PSI) (PS4) (SWZE) I (WYL) N (VXA) E H J (XL) (XZ) X\n   - [ ` G . Z - - (V,) E G I 4 V X T\n   C G J L (QSN) (QT) (QU) (QS) (QSVA) E H J L - Q -\n   (9B) F (PI) 4 (9U) F I (T4) (TA) E (SH) J L - 9 -\n   S B (PE) G (PS) B (PTE) G (9U) B (9WE) G (9X) B (9/E) G\n   (SC) G J 4 L - - -\n\n\n\n   　　回到过去 \n   　　hjjiihgh \n   　　hggffecf \n   　　feehhjji \n   　　ihhhgfe \n   　　hjjiihgih \n   　　hggffecg \n   　　feee \n   　　edced \n   　　hjji \n   　　iiihijji \n   　　eghhghml \n   　　hihjhhgee \n   　　ehihjhkkji \n   　　ehijj \n   　　jijkkjji \n   　　ihjjjiihgh \n   　　hihjjjj \n   　　hhlljjj \n   　　hhiihhhfhfhi \n   　　ehigh\n\n   　　亲爱的那不是爱情 \n   　　OOONMMLMLLKJL \n   　　HMMMMLOJJIIHI \n   　　JIHGHLL \n   　　LHMLLL \n   　　MNOOOLKJIHH \n   　　OOONMMLMLLKJL \n   　　HMMMMLOJJIIHI \n   　　JIHGHLL \n   　　LHMLLL \n   　　MNOOOLKJIHH \n   　　JJLPQLNNOM \n   　　KKMSRMOOPN \n   　　LLJPOPQPOJ \n   　　ONLONNLQQRP \n   　　JJLPQLNNOM \n   　　KKMSRMOOPN \n   　　LLJPOPQPOO \n   　　MOSRQPOO\n\n   　哆啦A梦 \n   　　ehhjmjl \n   　　lmljkji \n   　　fiiknnmlkkjfghi \n   　　ehhjmjl \n   　　lmljkji \n   　　fiiknnmlkkjfgih \n   　　mmlklml \n   　　ijkil \n   　　mlkinmlmlk \n   　　lmjih\n\n   　　同桌的你 \n   　　lllljkln \n   　　mmmmkml \n   　　llllnmlk \n   　　kkkkjih \n   　　oooolmoq \n   　　pppponm \n   　　nnnnnopl \n   　　nnopono \n   　　oooolmoq \n   　　pppponm \n   　　nnnnnopl \n   　　nnopono\n\n\n   　　大海 \n   　　FEHHHH EFHHIH FHIIII HFIIJI \n   　　JLMMLM LJIJIHF EFHHHHIH \n   　　JIMMMMOMLLML JIHHHHIJ \n   　　JIHHHHOMLLML JLMOOML \n   　　JIMMMMOMLLML JIHHHHLJ \n   　　JIHHHHIJLLJL JLM FJIHH\n\n\n   　送别》 　　\n   　　LJLO MOL 　　\n   　　LHIJ IHI 　　\n   　　LJLO NMOL 　　\n   　　LIJK GA\n\n\n   　　天空之城 \n   　　MNONOQN LJMLMOLL \n   　　KJKOJ JHOON OONNMN \n   　　ONOQN JMLMHLJ \n   　　JKONOPQOO ONMMNLM \n   　　OPQPQSP LONOQQ \n   　　MNOONOPO LLRQPOQ \n   　　QTSQPO POPSQ \n   　　QTSQPO POPNM \n   　　MNONOQN JMLMHLJ \n   　　JKONOPQOO ONMMNLM \n   　　\n   　　梁祝 \n   　　LJIH IGFE \n   　　NMNLMKJL IJLIJKJIH \n   　　LGIFHE FHE \n   　　CEFHI FHE \n   　　LOMLJLI \n   　　IJGFEFHICHFEFHE \n   　　JLGIFHE CECEFGIF \n   　　EFHILJIJIHFECH FHFECEFHE \n   　　JLIJIHGFE\n","slug":"song_lyric_20170330","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm700122oi8r2hro64r","content":"<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>《童话》　　<br>LONOL LONOL LONO OOMMLLONOL LQPPO LONOM MMOTS PPRRQQ QQNPOONO ONOR LSRQPPPRRQQ QQVUTUV VPOT TTSSSLSRQQRQ QRQ RQPOOQST TTSPPRQ OQST TTSPPRQRQPO PQMMOONO</p>\n<p>《星语心愿》　　<br>TVUTSTQ TSTVUVUTUV　　<br>VWXXXXW VUTUS TVUTST　　<br>QSTXWVUV VUTTTTSSTQ　　<br>SSTXWVUVV VUTTSUT</p>\n<p>《会呼吸的痛》<br>STVTXXTW WWVUVWXWSV VUTUVRRRVVWVSSS SYXWXX STVTXXTW WWVUVWXWSVV VUTUVRRRVVWVSSS STUVVUVV </p>\n<p>《欢乐颂》<br>J J K L L K J I H H I J J I IJ J K L L K J I H H I J I H H I I J H I J K J H I J K J I H I E J J K L L K J I H H I J I H H </p>\n<p>《千千阙歌》<br>HHIJ LMONNNLJ IIIJK MOQPPNLHHIJ LMONNNLJ IIIJK MOQPPNLMLMLMNNMN PPPPNOPQQQPPPOQ NLMLMOPQQPQ QPOP OMM LMOP QQPQ QSTSQQQQPPOPOM QQRQPOP QQ Q PPOP OMOO</p>\n<p>《婚礼进行曲》<br>HKKK HLJK HKNNMLKJKL HKKK HLJK HKMOMKILMKNMLII JKLL NMLII JKLL HKKK HLJK HKMOMKILMKILMKK </p>\n<p>《青花瓷》<br>LLJ IJF IJLJ I<br>LLJ IJE IJLI H<br>HIJLMLJ LJJI I<br>HIH IHI IJLJ J<br>LLJ IJF IJLJI<br>LLJ IJE IJLIH<br>HIJ LMLJ LJJII EJIIH </p>\n<p>《夜曲》<br>MN OOOONQQ TTTSRSOO<br>RRRSQNQP PONOON<br>OOOONQQ TTTSRSOO<br>RRR QPNOM</p>\n<p>《暗香》<br>JKJGHJM ONLJ JKJGHJM<br>ONLQ MMMOQLKMP PQRPQRQ<br>MPQRPQRM MQRSQRSM PQRMR<br>SKPQPQRQ<br>JKJGHJMONLJ<br>JKJGHJMONLM </p>\n<p>《遇见》<br>LJ LI JIH HGFGHGHIJ<br>LJ LP ONO HGFGHGHIH<br>LMNONONMLML HIJKJKLHIJ<br>LMNONONPOPOQL HIJKJKJIHGH<br>LMNONOPONML HIJKJKLHHML<br>LMNONOPOPQL, HIJKJKLHHML<br>LMNONOPOPQL, HIJIJILHIJH<br>LMNONOMNLKL<br>JJJKLJEE IIIJKIEE<br>HHHIJIGH GFGHG<br>FEFML IKJIH<br>HGFIIHFFGH </p>\n<p>《波斯猫》<br>OOOMLMLJJ MMMLJLJII<br>OOOMOMOJJ IMJ JL M M M </p>\n<p>《菊花台》<br>JJIJ JLJIJ HHIJLJ IIHI<br>J LJML MLLJL EJIILJIIIHI<br>JJIJ JLJIJ HHIJLJ IIHI<br>J LJML MLLJL JIJLJIIH<br>HIJJLM MQQPOML MLJIH FHIIHI<br>HIJJLM MQPOOPO LLJNOHIJIH </p>\n<p>《北京欢迎你》歌谱<br>QSQPQPQQPMO QP<br>POMOPQSPQTSSPO<br>POMOPQSPQTSSQ<br>PQPOSTQMQPPO<br>QSVSTTS QQ SS QS TV WV SQ P S Q Q<br>QS VS TV WV SQ SVT QP QS XW VV </p>\n<p>致爱丽斯<br>QPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMNOPQLRQPKQPOJPONNJQQQQPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMORQQPPRTSRQPONMMLMNOPPQRMOPNOPQSPNOPQSPNQQQQQP </p>\n<p>《约定》<br>LOPQPOQPLL JMNONMONJL MLLKKOJJPO<br>PQRQQPOMP LOPQPOQPNL QMNONMONJL<br>MLLKKOPQO MNOMOTSS POSQ QPONOMJM<br>OPOTR RQRMNOP QRSSSTO<br>SNPO PQMORQRSP POSQ QPONOMJM<br>OPOTR RQRMNOP QRSSSTO<br>SNPO PQRMRQOPO </p>\n<p>《美丽的神话》<br>MQN MOPOQ MTSTSPRQ<br>MTSPQRQ O MQPNM<br>MQNMOPOQ MTSTSPRQ<br>MTSPQRQPO MPONM<br>MNOPQONL MOPQQ<br>MNOPQONLMOPOO MPONM<br>MNOPQONL MOPQQ<br>MNOPQONLMOPOO OOPQONLONMNT</p>\n<p>《有没有人告诉你》<br>JMMMMMMMMJKLK JLLLLLLLMNNJ<br>JMMMMMMMMQQP NNNNNJONON<br>JMMMMMMMMJKLK ILLLLLLLMNNJ<br>JMMMMMMMMQQP NNNNNNNMNM<br>QTQQQQOMJJQP JSSSSSSSTUUQ<br>QTQQQQOMJJQP PPPPPJNNM </p>\n<p>《卡农》　(括号是一起按)<br>H-JLO E-ILN F-HJM C-GIL<br>D-FHK A-EHJ D-FHK E-GIL<br>(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL<br>(MD)-FHK (LA)-CEH (MD)-FHK (NE)-GIL<br>ONOH (G B )LIJ (CH)ONM (CN)QST<br>(DR)QPR (QA)PON (DM)LKJ (EI)KJI<br>(EH)IJK (EG)ILK (FJ)MLK (CL)KJI<br>(DH)FMN (AO)NML (DK)JIM LML<br>(SJ)QRS-QR(SE)LMNOPQR<br>(FQ)OPQ-JK(GL)MLKLJKL<br>(FK)MLK-JI(JE)IHIJKLM<br>(FK)MLM-NO(GL)MNOPQRS<br>(SI)QRS-QR(SE)LMNOPQR<br>(FQ)OPQ-JK(GL)MLKLJKL<br>(FK)MLK-JI(EJ)IHIJKLM<br>(FK)MLM-NO(GL)MNOPQRS<br>(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL<br>(MD)-FHK (LA)-CEH (MD)-FHK (NE)-</p>\n<p>《月亮代表我的心》Flash键盘钢琴谱<br>LOQSONQS STUVTS QPOOO QPOOO PQPOMPQP LOQSONQS STUVTS<br>POOO QPOOO PQPMNOPO QSQPOSN MNMNMLQ SQPOSN MNOOOPQP LOQSONQS STUVTS<br>QPOOO QPOOO PQPMNOPO</p>\n<p>《安静》 Flash键盘钢琴谱<br>QQQQPONPPPO LQPOOOLQPOOP<br>QQQQPONPPPO LQPOOOLQPOOPPQR<br>RRRRQPOOOPP LSSSRQPPPQQ<br>MRQRQPOONOL QRQRQPOPS<br>LQRSRQSLQRSRQS LQRSRQOPPPQO<br>SSOONOOSSOONOO RRQQPPORRQQPPO<br>LQRSRQSLQRSRQS LQRSRQOPPPQO<br>SSOONOOSSOONOO RRQQPPOORQPOMOO</p>\n<p>《好好恋爱》 Flash键盘钢琴谱<br>JKLLLLLKJIIL NNONOOOPQNNL<br>HMMMJMOLLLLJH KKKJKLMMMOML<br>JKJJKLLLLJIHHO NMLML<br>JHHMMLLLKJ OOOONOPP<br>LRQLLRPLRQRQRQPO ONMMQMQMLLQLQL<br>RQRQOP LRQLLRSPLRQQQRQPQ<br>ONMMQMQMLLQLQPOM OPNMNMNQPOO</p>\n<p>《痴心绝对》 Flash键盘钢琴谱<br>OPQQQRQPPOPPSP ONOOOQQOOMNNQN<br>MLMMMRRQSO MLMMMRROOMP<br>OOPQQQRQPPOPPSP ONOOOQQOOMNNQN<br>MLMMRRQSO MLMMMRROOONO</p>\n<p>《想唱就唱》Flash键盘钢琴谱<br>onopol jkkklj<br>onopol lmmmon<br>onopqolj opolj<br>onopqolo rqpoq<br>qrst oopqp<br>pqrs srqpq<br>qrstss uuvuspq rqrs<br>qrst oopqp<br>pqs quuqv vuvtsoo tsrqrs ts<br>qrst oopqp<br>pqrs srqpq<br>qrstss uuvuspq rqrs<br>qrst oopqp<br>pqs quuqv vuvtsoo tsrqrs</p>\n<p>《梦里》Flash键盘钢琴谱<br>qqqqqqpo lmoooomq<br>qqqqstsqp lpppppsq<br>qqrs oopq llmoqpsq<br>qqrs oopq llmoqpoo<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm moppppqp<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm mopqqqqpom<br>qqqqqqpo lmoooomq<br>qqqqstsqp lpppppsq<br>qqrs oopq llmoqpsq<br>qqrs oopq llmoqpoo<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm moppppqp<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm mopqqqqmpqt</p>\n<p>《画心》Flash键盘钢琴谱<br>LJJ IHIILJ LJJIHILmJ LJJIHIHGHIGEF CEF FJIHGEF EEFFHGFEBC CCEFGHEHIJ<br>LJJ IHIHGHIGEF CEFFJIHGEF CEFHGFEFC CEFFGHEHIJ LJJ IHIHGHIGEF CEFFJIHGEF<br>LJJ IHIHGHIGEF CEFFJIHGEF LJJIHIILJ LJJIHILmJ LJJIHIHGHIGEF CEFFJIHGEF</p>\n<p>《雪绒花》Flash键盘钢琴谱<br>CEI HED CCCDEFE<br>CEI HED CEEFGHH<br>I EEGFECEH<br>FHIHGE<br>CEI HED<br>CEEFGHH</p>\n<p>《隐形的翅膀》Flash键盘钢琴谱<br>JLOON MLMOJIH HHHOLMLJHI<br>JLOON MLMOJIH HHHOLMLJIH</p>\n<p>《说好的幸福－周杰伦》Flash键盘钢琴谱<br>L LLLL LLLL LLORQ QPQP NO PLLMNI LLM NIJMN OKJ KNO PLK LLM NMJ IFG前奏<br>MNONMNL MLKLJ MNONMNLPP QQRQP<br>LMNOO OONOPP PPPPOPLOO OOLOLOO OOOL OLOO OOOP QQQQ QQRQ 中间<br>OPQ QQQQ QQQQ QQQP PNOP PPPP PPP PQPO OOOO SRRQ QPPO PPOP POPO RQQP POOP RRRR SO QQQQ QQQQ QQQP PNOS SSSS SSSP PQPO OMMO SRRQ QPPO QPLL QPO 高潮</p>\n<p>《給我一首歌的时间》Flash键盘钢琴谱<br>LQQROPOOPQP<br>LQQPOOMOMPO<br>QQRQPOOMOMPL<br>LLMPOOMOMOPP</p>\n<p>《最熟悉的陌生人》Flash键盘钢琴谱<br>PQPQ<br>OPQRSRRQQPOP<br>PQPQ<br>OTSRRQRQPQPO<br>OVUUTSQTSSRSRS<br>PQRQRV TVWW<br>VWXXXXYXXX<br>WVVTX<br>SSTVVVTS<br>SXXXWV<br>VVVTW<br>VWXXXXYXXX<br>WVVWWV<br>SSTVVVTSSXXXWVTV</p>\n<p>《世上只有妈妈好》Flash键盘钢琴谱<br>M L J L O M L M<br>J L M L J I H F L J I<br>I J L L M J I H<br>L J I H F H E</p>\n<p>《死了都要爱》Flash键盘钢琴谱<br>JOOOO PNMLKIJJ KKLM IIJK<br>MNMN JOOOO PNMLKIJJ KKLM ONMM</p>\n<p>《虫儿飞》Flash键盘钢琴谱<br>jjjkljii hhhijjgg fji fji fjihh<br>jjjkljii hhhijjgg fji fji fjihh<br>jil kji lkjklji hfji hfih kjkjh hkjkjhih</p>\n<p>《大海》Flash键盘钢琴谱<br>FEHHHH EFHHIH FHIIII HFIIJI<br>JLMMLM LJIJIHF EFHHHHIH<br>JLMMMMOMLLML JIHHHHIJ<br>JIHHHHOMLLML JLMOOML<br>JLMMMMOMLLML JIHHHHLJ<br>JIHHHHIJLLJL JLM FJIHH</p>\n<p>《天空之城》Flash键盘钢琴谱<br>MNONOQN LJMLMOLL<br>KJKOJ JHOON OONNMN<br>ONOQN JMLMHLJ<br>JKONOPQOO ONMMNLM<br>OPQPQSP LONOQQ<br>MNOONOPO LLRQPOQ<br>QTSQPO POPSQ<br>QTSQPO POPNM<br>MNONOQN JMLMHLJ</p>\n<p>《梁祝》Flash键盘钢琴谱<br>LJIH IGFE<br>NMNLMKJL IJLIJKJIH<br>LGIFHE FHE<br>CEFHI FHE<br>LOMLJLI<br>IJGFEFHICHFEFHE<br>JLGIFHE CECEFGIF<br>EFHILJIJIHFECH FHFECEFHE<br>JLIJIHGFE</p>\n<p>《我是真的受伤了》Flash键盘钢琴谱<br>momqp lnlpo mrqomopo momqp lnlpo momqppopsq momqp<br>lnlpo lrqomop-po rrqqp psppo rrqqppopqrqq ttsspprqpo<br>mqoo sqpp— momqp lnlpo momqppopsq ttttspsppo<br>mrqomopo—- JKONOPQOO ONMMNLM</p>\n<p>《往事难忘》Flash键盘钢琴谱<br>H HIJ JKL MLJ LKJI KJIH<br>H HIJ JKL MLJ LKJI JIH<br>LKJI EEKJIH LKJI KJIH<br>H HIJ JKL MLJ LKJI JIH</p>\n<p>《离家出走》Flash键盘钢琴谱<br>STSQP SQPPO OOPQO OPPOQP STSQS VUSQSTS PQRQORQPO SZRQRSTSRQP QRSTS<br>VUTUVVVUTUS QRSSTTQPPQRRSSPO ORQRQRRSTS QRTSVV SZZX VQQQPQUUUVTOSTSQ<br>RRRPTS VUSSVV SWWU VTVTV ZYX TVWXVW TVUUV TVWXYXYW VUVWVXX UVWUVQQQ QQUUVUV<br>TOSTSV TVVUVW XWVSVV SWWU VTVTVZYX TVWXVW TVUTS</p>\n<p>《心乱如麻》 Flash键盘钢琴谱<br>TSRQRSRQ RRVUTSS QTS TSRQRSRQ RRTSVUV WVXWV<br>VVUUVWS SQTS RRSQVUV WVXWV SXXXYXWV XXXYXWV SWWVWVXXW<br>QSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV QRSTSVWUTS SYXSYXSXYZXVW QSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV</p>\n<p>《不能说的秘密》 Flash键盘钢琴谱<br>EHHH EGGG EHHH EIII EHHH EGGG EHHH EIII EKKKK KJJ KKKLJIHGGH<br>ELLLL LKK LLLLLKKJJI EKKKK KJJ KKKLJIHGGIH FHLMH LLLLLKKJJI<br>HONOOLLLLKKJ HONOOLLLLPPO HONONMHNMNML HMLMLKKJKLMML<br>HONOOLLLLKKJ HONOOLLLLPPO HONONM HNMNML HMLMLKKJKLMML HLHKJ HHLHKJH</p>\n<p>《蜗牛》 Flash键盘钢琴谱<br>J JJKJIJIH HHK KIHHIJ HHL LMLKJK GH EEJ JKJIJH EEH HEHIJKL HONN NONMMNLHKLM MNOPQL EFLK KLKJIHI EEH HEHIJKL HONN NONMMNL HKLM MNOPQL EFLK KJIHHGH</p>\n<p>《123木头人》 Flash键盘钢琴谱<br>LKJJJ III JIHIJO NML MKJKJK IJKONL MLL LKJJJ ILN MNONM J LMK KPOL IJKKJKL J I H</p>\n<p>《神秘园》 Flash键盘钢琴谱<br>jmno no opnmn nomlm lj jmno no opnmn nomlm lm nost tusrs noqr rsqpq nost tusrs strqr rsqpq jmno no opnmn nomlm lj jmno no opnmn nomlm lm</p>\n<p>《轨迹》 Flash键盘钢琴谱<br>qeee reee weewqe qwee eweq hqewqw qeee reee weewqte qwee eweq hqewqw qjqjwq jwqjq q ttqqt qgqrewe ee rewqj wewq qtrewqwet g r eee ereww weqq ett qttrr ewreq qq wEwqw gr eee ereww weqq ett qttrr ewreq qerw jq</p>\n<p>《无赖》 Flash键盘钢琴谱<br>HIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKKLKHI HIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKJHIH HHEFGHHIJHE EDDFEDE EFFGJIIHGH HHFEFG EEEJIHHIJHL JJLMMNOLJ JJLMMMKMNMLKLJ JKJKLMLL EJIHHIJHL JJLMMNONJ JJLMMMKMNMLJIH JKJKLMLLJIHH</p>\n<p>《海阔天空》 Flash键盘钢琴谱<br>QPO PQSSSSTS TUVVVVVVUTST<br>TSS SQPO QRQPPQPP QPPPOOOO POO<br>TUVVVVVVUTSSSQPO<br>VVVVWWWVWX XWV<br>VVVVWW SSXWV<br>VVVVWWWWVUV<br>TTUTUV VVWVWX XWXV</p>\n<p>《下一站天后》 Flash键盘钢琴谱<br>QQQSP PSOOOQM RQRTQ RSPPMOP QPQSSPQVUSST RQRSMOQPO<br>QSUVUTSS QRSTRRQP POPQSS QTQPOP MOQPPQS<br>VUTUT SSOQSS TTTRQP PPUS QQSO QQPPP TQS VUTUTSS OQSS TTTTVUTUVSSQSTSSRMNO</p>\n<p>《红河谷》Flash键盘钢琴谱<br>ehjjjjijih<br>ehjhjlkji<br>lkjjihijlk<br>ffeghijih<br>lhjjjijih<br>ehjjjlkji<br>lkjjihijlkk<br>ffegijih</p>\n<p>《生日快乐》 Flash键盘钢琴谱</p>\n<p>EEFEHG EEFEIH</p>\n<p>EELJHGF KKJHIH</p>\n<p>09年1月21日更新Flash键盘钢琴谱</p>\n<p>《亡灵序曲》变奏和弦版Flash键盘钢琴谱<br>TQTTUV TUV UTU<br>QQVUT TTUTX WVW VUV</p>\n<p>WX WVZW WVW VUV QTUUVT<br>MJMMNO MNO NMN</p>\n<p>JJON(MT)MMNMR QPQ POP<br>(QW)R QPT QPQ POP JMNNOM<br>TTUUV(TZ)(MT)(OU)(VP)(VP)(MT)</p>\n<p>TQTTUV TUV UTU<br>QQVUT TTUTX WVW VUV</p>\n<p>WX WVZW WVW VUV QTUUVT</p>\n<p>MJMMNO MNO NMN</p>\n<p>JJON(MT)MMNMR QPQ POP</p>\n<p>(QW)R QPT QPQ POP JMNNOM</p>\n<p>(OU)(MT)(OU)(QW)(PV)(OU)(MT)</p>\n<p>MMOMR QPQ POPS S(TZ)</p>\n<p>《一千年以后》Flash键盘钢琴曲谱<br>OHIJML KJHJI OHIJMNL JM NNNOPON ONOQQ<br>NMNL MMNOPOPRQPPQO ONOQ NMNLMO</p>\n<p>OOOPQRQOQP LOP QPOLP QPONMJN</p>\n<p>ONMNOPLQQ QRQOPP LOP QPOLP PQPONMPN</p>\n<p>ONMLMOLPO QQRQP OPQPOPOLPO</p>\n<p>《男儿当自强》Flash键盘钢琴谱<br>MOMOMLM<br>MOMOLMP<br>QOPS QPQO<br>PQOPM<br>OPMOL<br>MOPOML MOL<br>MOMLM OPOML<br>MOLMP QSPQT<br>QTSRQSQPQ<br>QSTUTSQ QSTUSTU<br>TUTSQSTUTSQSP<br>QPOPSRQSP<br>PQSTQSQPO MPO<br>MOPQN NQPNM<br>MOMLM<br>MOMLM<br>QSPQT</p>\n<p>《舞娘》Flash键盘钢琴曲谱</p>\n<p>KJK JKJK LKJ<br>KJK JLK J-<br>FKJK JKJK LKJ<br>FFGHIHIH.IHIHFF<br>MMLLKKJJMJ-<br>FMMLLKKJ<br>FMMLLKKJJMJ<br>FFGHIHIH-<br>.IHIHFF<br>HH.JJ<br>FFLJ<br>FFGHJ<br>FFGHL<br>HH.JJFFLJ-<br>FJIHI<br>FJIHIJIHF<br>IJIHIJIHF<br>FJIHIJIHF </p>\n<p>(间奏略)<br>MMLLKKJJMI<br>FJKJKJKJ<br>JKJI</p>\n<p>《借口》 Flash键盘钢琴曲谱 </p>\n<p>LLJKJKL JLONML 翻着我们的照片，想念若隐若现<br>MONOO QOOOLP 去年的冬天，我们笑得很甜<br>LLJKJKL JLONML 看着你哭泣的脸，背着我说再见<br>MONOO QOOPQP 来不及听见，你已走的很远<br>N（NN）ML（MN）P 也许你已经放弃我<br>O（OO）NM（NO）Q 也许已经很难回头<br>QPPOOLPO 我知道是自己错过<br>MNOOONOP PQPQP请在给我一个理由，说你不爱我<br>LJLPRQ LJLPRQ 就算是我不懂，能不能原谅我<br>LJLPRQPOPQPO 请不要把分手当作你的请求<br>MMKQPQP LLJPOPO 我知道坚持要走，是你受伤的借口<br>OPQO OPPOPQQPQP 请你回头，我会陪你一直走到最后<br>LJLPRQ LJLPRQ 就算没有结果，我也能够承受<br>LJLPRQ POPQPO 我知道你的痛是我给的承诺<br>MMKQPQP LLJPONO 你说给过我纵容，沉默是因为包容<br>OPQO LQPOO 如果要走，请你记得我<br>OPQO LQPOO 如果难过，请你忘了我。</p>\n<p>《当你孤单想起谁 和弦版》Flash键盘钢琴谱<br>(EJ)K(AL)L(CL)L(EL) (CJ)K(EL)L(GL)L(IL) (HM)N(FO)J(NJ)J(GJ)J-I(EGJ)<br>你的心情总在飞 什么事都想去追 想抓住一点安慰<br>(GL)(DL)K(FK)J(DI)H Q (QL)R(OQ)P(JQO)–(SL)(DL)K(FK)J(HK)L–J(IE)–(X)(SW)<br>你总是喜欢在人群中徘徊 你最害怕孤单的滋味<br>(EJ)K(AL)L(CL)L(EL)-(CJ)K(EL)L(GL)M(IL)<br>你的心那么脆 一碰就会碎<br> U(HM)N(FO)J(NJ)J(GJ)J-I(EGJ) J(K) (L) (SL)(DL)K(FK)J(DI)H<br> 经不起一点风吹 你的身边总是要<br> Q (QL)R(OQ)P(QO)–(SL)(DL)K(FK)J(HK)L<br> 许多人陪 你最害怕每天的天黑<br> (RM)-N (FO)(JO)(WP)O–O(CN)O(SN)(QL)<br> 但是天总会黑 人总要离别<br> L(DM)FH(FK)–K(JE)L-J(IE)<br> 谁也不能永远陪谁<br> (TM)N (FO)(JO)(WP)O–O(CN)O(SN)(QL)<br> 而孤单的滋味 谁都要面对<br> L(DM)O(FO)O(HO)O-O(QOL)P(PL)O-Q(PGL)-<br> 不只是你我会感觉到疲惫<br> (OJ)P(QHO)-(QO)R(JO) (NP)O(LP)-(SP)P(NUP) (QFO)-(JO)P(MO) (NJ)M(NC)-(GQ)N(NSL)<br> 当你孤单你会想起谁 你想不想找个人来陪<br> k(KM) PQ(LP)OM–(GL) PQ(EP)OM–(DTM) (WP)X(WEP)V(PT)U (VLA)-<br> 你的快乐伤悲 只有我能体会 让我再陪你走一回</p>\n<p> 周华健的《朋友》Flash键盘钢琴谱</p>\n<p> Q-(OHIJA)–(PHIJ)-(AHQ)-(OHIJA)–(PHIJ)-(CQ)-(SHIJG)–(SHIJ)-(TGN)-(OFHJA)–(MAC)-(OF)-(PHIJ)–(PHIJ)-(OIB)-(MFHJ)–(MFHJ)-(OIB)-(PHIJB)-Q-(PHIJ)-(OIB)-(PGIL)–(QGIL)-(PE)O(OHIJA)–(PHIJ)-(QHA)O(OHIJ)–(PHIJ)-(QHA)-(SGIJ)–(SGIJ)-(TNG)-(OFHJ)–(MFHJ)-(OF)-(PHIK)–(PHIK)-(OIB)-(MADF)–(LBEG)-M-(OHJLF)CG-H-E-H-(IQ)-(SJ)-(SA)-(SE)-(SHJL)-(TE)-(SG)-E-(TGJL)-(UE)-(VF)-(TJ)-(THJM)-(SF)-(QE)–(QGJL)-(PE)-(OD)-H-(OHJM)-(TF)-(SC)-G-(QFJL)-(PE)-(OBI)-F-(MIFB)-(PDB)-(PE)BEF(QG)I(SL)N(SL)J(SH)E(LS)J(TH)E(SL)JHE(TL)Q(UG)E(VM)J(TH)F(TM)J(SH)F(QL)JGE(QL)J(PG)(OE)(OK)HFD(OK)H(TF)(SD)(SJ)GEC(QJ)G(PE)(OC)(OK)HFD(FB)D(OE)I(OHA)EHIJLOP(DK)HMMOMORT(AHJLO)-</p>\n<p>  《笑傲江湖》  Flash键盘钢琴谱</p>\n<p>  JMJ LL-J IJLML J–</p>\n<p>  JMJ LL-J IJLML J–</p>\n<p>  J JI HHIJ IIIIH MMHIJ</p>\n<p>  LMLJI HIIJ IIIH MMHIJ LM-</p>\n<p>  QPO P– OMSSQ P– </p>\n<p>  MHII ILJ MIJ HIM </p>\n<p>  HML MJIJL M– M–</p>\n<p>  JMJ LL-J IJLML J– </p>\n<p>  JMJ LL-J IJLML J–</p>\n<p>   请不要爱我 键盘钢琴谱<br>   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q 9 S - -<br>   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q ST(US) T S [9S9]<br>   (QH) L O Q (9I) M P 9 (SE) I L N (U9) - - -<br>   (SH) L (SO) S S S S - (9I) M (9P) 9 9 U 9 P<br>   (QH) L (QO) Q Q - Q - (PB) F (MI) N P - - [99]<br>   (SH) L (SO) S S U S - (9<code>) I (94) 9 9 U 9 P\n   (QA) E (QH) (QE) (QJ) - Q - (9B) F I 4 (/M)\n   (UE) I L (UN) (UP) (TN) (SL) (UI) (TI) M P (T9) (WT) (U9) (VP) (WM)\n   (UC) G J (UL) (VN) U (TL) (SJ) (VA) E U E T E S E\n   O C F H J - (PM) - 9 B (U</code>) G (9I) - (P4）<br>   (QA) E H J L S Q U B F (TI) 4 M P (94) (TI)<br>   (SW) B E G I G (NPE) B (SW) B E G (SVI) G (SUE) C<br>   (TB) (TWF) (TWH) (TWJ) (TWL) (TJ) (UH) (VF) (SUC) G J L (SN) L (9J) G<br>   (RB) (PSF) (PSI) (PS4) (SWZE) I (WYL) N (VXA) E H J (XL) (XZ) X</p>\n<ul>\n<li>[ ` G . Z - - (V,) E G I 4 V X T<br>C G J L (QSN) (QT) (QU) (QS) (QSVA) E H J L - Q -<br>(9B) F (PI) 4 (9U) F I (T4) (TA) E (SH) J L - 9 -<br>S B (PE) G (PS) B (PTE) G (9U) B (9WE) G (9X) B (9/E) G<br>(SC) G J 4 L - - -</li>\n</ul>\n<p>   　　回到过去<br>   　　hjjiihgh<br>   　　hggffecf<br>   　　feehhjji<br>   　　ihhhgfe<br>   　　hjjiihgih<br>   　　hggffecg<br>   　　feee<br>   　　edced<br>   　　hjji<br>   　　iiihijji<br>   　　eghhghml<br>   　　hihjhhgee<br>   　　ehihjhkkji<br>   　　ehijj<br>   　　jijkkjji<br>   　　ihjjjiihgh<br>   　　hihjjjj<br>   　　hhlljjj<br>   　　hhiihhhfhfhi<br>   　　ehigh</p>\n<p>   　　亲爱的那不是爱情<br>   　　OOONMMLMLLKJL<br>   　　HMMMMLOJJIIHI<br>   　　JIHGHLL<br>   　　LHMLLL<br>   　　MNOOOLKJIHH<br>   　　OOONMMLMLLKJL<br>   　　HMMMMLOJJIIHI<br>   　　JIHGHLL<br>   　　LHMLLL<br>   　　MNOOOLKJIHH<br>   　　JJLPQLNNOM<br>   　　KKMSRMOOPN<br>   　　LLJPOPQPOJ<br>   　　ONLONNLQQRP<br>   　　JJLPQLNNOM<br>   　　KKMSRMOOPN<br>   　　LLJPOPQPOO<br>   　　MOSRQPOO</p>\n<p>   　哆啦A梦<br>   　　ehhjmjl<br>   　　lmljkji<br>   　　fiiknnmlkkjfghi<br>   　　ehhjmjl<br>   　　lmljkji<br>   　　fiiknnmlkkjfgih<br>   　　mmlklml<br>   　　ijkil<br>   　　mlkinmlmlk<br>   　　lmjih</p>\n<p>   　　同桌的你<br>   　　lllljkln<br>   　　mmmmkml<br>   　　llllnmlk<br>   　　kkkkjih<br>   　　oooolmoq<br>   　　pppponm<br>   　　nnnnnopl<br>   　　nnopono<br>   　　oooolmoq<br>   　　pppponm<br>   　　nnnnnopl<br>   　　nnopono</p>\n<p>   　　大海<br>   　　FEHHHH EFHHIH FHIIII HFIIJI<br>   　　JLMMLM LJIJIHF EFHHHHIH<br>   　　JIMMMMOMLLML JIHHHHIJ<br>   　　JIHHHHOMLLML JLMOOML<br>   　　JIMMMMOMLLML JIHHHHLJ<br>   　　JIHHHHIJLLJL JLM FJIHH</p>\n<p>   　送别》 　　<br>   　　LJLO MOL 　　<br>   　　LHIJ IHI 　　<br>   　　LJLO NMOL 　　<br>   　　LIJK GA</p>\n<p>   　　天空之城<br>   　　MNONOQN LJMLMOLL<br>   　　KJKOJ JHOON OONNMN<br>   　　ONOQN JMLMHLJ<br>   　　JKONOPQOO ONMMNLM<br>   　　OPQPQSP LONOQQ<br>   　　MNOONOPO LLRQPOQ<br>   　　QTSQPO POPSQ<br>   　　QTSQPO POPNM<br>   　　MNONOQN JMLMHLJ<br>   　　JKONOPQOO ONMMNLM<br>   　　<br>   　　梁祝<br>   　　LJIH IGFE<br>   　　NMNLMKJL IJLIJKJIH<br>   　　LGIFHE FHE<br>   　　CEFHI FHE<br>   　　LOMLJLI<br>   　　IJGFEFHICHFEFHE<br>   　　JLGIFHE CECEFGIF<br>   　　EFHILJIJIHFECH FHFECEFHE<br>   　　JLIJIHGFE</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h2><p>《童话》　　<br>LONOL LONOL LONO OOMMLLONOL LQPPO LONOM MMOTS PPRRQQ QQNPOONO ONOR LSRQPPPRRQQ QQVUTUV VPOT TTSSSLSRQQRQ QRQ RQPOOQST TTSPPRQ OQST TTSPPRQRQPO PQMMOONO</p>\n<p>《星语心愿》　　<br>TVUTSTQ TSTVUVUTUV　　<br>VWXXXXW VUTUS TVUTST　　<br>QSTXWVUV VUTTTTSSTQ　　<br>SSTXWVUVV VUTTSUT</p>\n<p>《会呼吸的痛》<br>STVTXXTW WWVUVWXWSV VUTUVRRRVVWVSSS SYXWXX STVTXXTW WWVUVWXWSVV VUTUVRRRVVWVSSS STUVVUVV </p>\n<p>《欢乐颂》<br>J J K L L K J I H H I J J I IJ J K L L K J I H H I J I H H I I J H I J K J H I J K J I H I E J J K L L K J I H H I J I H H </p>\n<p>《千千阙歌》<br>HHIJ LMONNNLJ IIIJK MOQPPNLHHIJ LMONNNLJ IIIJK MOQPPNLMLMLMNNMN PPPPNOPQQQPPPOQ NLMLMOPQQPQ QPOP OMM LMOP QQPQ QSTSQQQQPPOPOM QQRQPOP QQ Q PPOP OMOO</p>\n<p>《婚礼进行曲》<br>HKKK HLJK HKNNMLKJKL HKKK HLJK HKMOMKILMKNMLII JKLL NMLII JKLL HKKK HLJK HKMOMKILMKILMKK </p>\n<p>《青花瓷》<br>LLJ IJF IJLJ I<br>LLJ IJE IJLI H<br>HIJLMLJ LJJI I<br>HIH IHI IJLJ J<br>LLJ IJF IJLJI<br>LLJ IJE IJLIH<br>HIJ LMLJ LJJII EJIIH </p>\n<p>《夜曲》<br>MN OOOONQQ TTTSRSOO<br>RRRSQNQP PONOON<br>OOOONQQ TTTSRSOO<br>RRR QPNOM</p>\n<p>《暗香》<br>JKJGHJM ONLJ JKJGHJM<br>ONLQ MMMOQLKMP PQRPQRQ<br>MPQRPQRM MQRSQRSM PQRMR<br>SKPQPQRQ<br>JKJGHJMONLJ<br>JKJGHJMONLM </p>\n<p>《遇见》<br>LJ LI JIH HGFGHGHIJ<br>LJ LP ONO HGFGHGHIH<br>LMNONONMLML HIJKJKLHIJ<br>LMNONONPOPOQL HIJKJKJIHGH<br>LMNONOPONML HIJKJKLHHML<br>LMNONOPOPQL, HIJKJKLHHML<br>LMNONOPOPQL, HIJIJILHIJH<br>LMNONOMNLKL<br>JJJKLJEE IIIJKIEE<br>HHHIJIGH GFGHG<br>FEFML IKJIH<br>HGFIIHFFGH </p>\n<p>《波斯猫》<br>OOOMLMLJJ MMMLJLJII<br>OOOMOMOJJ IMJ JL M M M </p>\n<p>《菊花台》<br>JJIJ JLJIJ HHIJLJ IIHI<br>J LJML MLLJL EJIILJIIIHI<br>JJIJ JLJIJ HHIJLJ IIHI<br>J LJML MLLJL JIJLJIIH<br>HIJJLM MQQPOML MLJIH FHIIHI<br>HIJJLM MQPOOPO LLJNOHIJIH </p>\n<p>《北京欢迎你》歌谱<br>QSQPQPQQPMO QP<br>POMOPQSPQTSSPO<br>POMOPQSPQTSSQ<br>PQPOSTQMQPPO<br>QSVSTTS QQ SS QS TV WV SQ P S Q Q<br>QS VS TV WV SQ SVT QP QS XW VV </p>\n<p>致爱丽斯<br>QPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMNOPQLRQPKQPOJPONNJQQQQPQPQNPOMHJMNJLNOJQPQPQNPOMHJMNJONMORQQPPRTSRQPONMMLMNOPPQRMOPNOPQSPNOPQSPNQQQQQP </p>\n<p>《约定》<br>LOPQPOQPLL JMNONMONJL MLLKKOJJPO<br>PQRQQPOMP LOPQPOQPNL QMNONMONJL<br>MLLKKOPQO MNOMOTSS POSQ QPONOMJM<br>OPOTR RQRMNOP QRSSSTO<br>SNPO PQMORQRSP POSQ QPONOMJM<br>OPOTR RQRMNOP QRSSSTO<br>SNPO PQRMRQOPO </p>\n<p>《美丽的神话》<br>MQN MOPOQ MTSTSPRQ<br>MTSPQRQ O MQPNM<br>MQNMOPOQ MTSTSPRQ<br>MTSPQRQPO MPONM<br>MNOPQONL MOPQQ<br>MNOPQONLMOPOO MPONM<br>MNOPQONL MOPQQ<br>MNOPQONLMOPOO OOPQONLONMNT</p>\n<p>《有没有人告诉你》<br>JMMMMMMMMJKLK JLLLLLLLMNNJ<br>JMMMMMMMMQQP NNNNNJONON<br>JMMMMMMMMJKLK ILLLLLLLMNNJ<br>JMMMMMMMMQQP NNNNNNNMNM<br>QTQQQQOMJJQP JSSSSSSSTUUQ<br>QTQQQQOMJJQP PPPPPJNNM </p>\n<p>《卡农》　(括号是一起按)<br>H-JLO E-ILN F-HJM C-GIL<br>D-FHK A-EHJ D-FHK E-GIL<br>(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL<br>(MD)-FHK (LA)-CEH (MD)-FHK (NE)-GIL<br>ONOH (G B )LIJ (CH)ONM (CN)QST<br>(DR)QPR (QA)PON (DM)LKJ (EI)KJI<br>(EH)IJK (EG)ILK (FJ)MLK (CL)KJI<br>(DH)FMN (AO)NML (DK)JIM LML<br>(SJ)QRS-QR(SE)LMNOPQR<br>(FQ)OPQ-JK(GL)MLKLJKL<br>(FK)MLK-JI(JE)IHIJKLM<br>(FK)MLM-NO(GL)MNOPQRS<br>(SI)QRS-QR(SE)LMNOPQR<br>(FQ)OPQ-JK(GL)MLKLJKL<br>(FK)MLK-JI(EJ)IHIJKLM<br>(FK)MLM-NO(GL)MNOPQRS<br>(HQ)-JLO (EP)-GIL (OF)-HJM (NC)-GJL<br>(MD)-FHK (LA)-CEH (MD)-FHK (NE)-</p>\n<p>《月亮代表我的心》Flash键盘钢琴谱<br>LOQSONQS STUVTS QPOOO QPOOO PQPOMPQP LOQSONQS STUVTS<br>POOO QPOOO PQPMNOPO QSQPOSN MNMNMLQ SQPOSN MNOOOPQP LOQSONQS STUVTS<br>QPOOO QPOOO PQPMNOPO</p>\n<p>《安静》 Flash键盘钢琴谱<br>QQQQPONPPPO LQPOOOLQPOOP<br>QQQQPONPPPO LQPOOOLQPOOPPQR<br>RRRRQPOOOPP LSSSRQPPPQQ<br>MRQRQPOONOL QRQRQPOPS<br>LQRSRQSLQRSRQS LQRSRQOPPPQO<br>SSOONOOSSOONOO RRQQPPORRQQPPO<br>LQRSRQSLQRSRQS LQRSRQOPPPQO<br>SSOONOOSSOONOO RRQQPPOORQPOMOO</p>\n<p>《好好恋爱》 Flash键盘钢琴谱<br>JKLLLLLKJIIL NNONOOOPQNNL<br>HMMMJMOLLLLJH KKKJKLMMMOML<br>JKJJKLLLLJIHHO NMLML<br>JHHMMLLLKJ OOOONOPP<br>LRQLLRPLRQRQRQPO ONMMQMQMLLQLQL<br>RQRQOP LRQLLRSPLRQQQRQPQ<br>ONMMQMQMLLQLQPOM OPNMNMNQPOO</p>\n<p>《痴心绝对》 Flash键盘钢琴谱<br>OPQQQRQPPOPPSP ONOOOQQOOMNNQN<br>MLMMMRRQSO MLMMMRROOMP<br>OOPQQQRQPPOPPSP ONOOOQQOOMNNQN<br>MLMMRRQSO MLMMMRROOONO</p>\n<p>《想唱就唱》Flash键盘钢琴谱<br>onopol jkkklj<br>onopol lmmmon<br>onopqolj opolj<br>onopqolo rqpoq<br>qrst oopqp<br>pqrs srqpq<br>qrstss uuvuspq rqrs<br>qrst oopqp<br>pqs quuqv vuvtsoo tsrqrs ts<br>qrst oopqp<br>pqrs srqpq<br>qrstss uuvuspq rqrs<br>qrst oopqp<br>pqs quuqv vuvtsoo tsrqrs</p>\n<p>《梦里》Flash键盘钢琴谱<br>qqqqqqpo lmoooomq<br>qqqqstsqp lpppppsq<br>qqrs oopq llmoqpsq<br>qqrs oopq llmoqpoo<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm moppppqp<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm mopqqqqpom<br>qqqqqqpo lmoooomq<br>qqqqstsqp lpppppsq<br>qqrs oopq llmoqpsq<br>qqrs oopq llmoqpoo<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm moppppqp<br>opqrsssrqrss<br>ssssvtsq<br>qqpo opm mopqqqqmpqt</p>\n<p>《画心》Flash键盘钢琴谱<br>LJJ IHIILJ LJJIHILmJ LJJIHIHGHIGEF CEF FJIHGEF EEFFHGFEBC CCEFGHEHIJ<br>LJJ IHIHGHIGEF CEFFJIHGEF CEFHGFEFC CEFFGHEHIJ LJJ IHIHGHIGEF CEFFJIHGEF<br>LJJ IHIHGHIGEF CEFFJIHGEF LJJIHIILJ LJJIHILmJ LJJIHIHGHIGEF CEFFJIHGEF</p>\n<p>《雪绒花》Flash键盘钢琴谱<br>CEI HED CCCDEFE<br>CEI HED CEEFGHH<br>I EEGFECEH<br>FHIHGE<br>CEI HED<br>CEEFGHH</p>\n<p>《隐形的翅膀》Flash键盘钢琴谱<br>JLOON MLMOJIH HHHOLMLJHI<br>JLOON MLMOJIH HHHOLMLJIH</p>\n<p>《说好的幸福－周杰伦》Flash键盘钢琴谱<br>L LLLL LLLL LLORQ QPQP NO PLLMNI LLM NIJMN OKJ KNO PLK LLM NMJ IFG前奏<br>MNONMNL MLKLJ MNONMNLPP QQRQP<br>LMNOO OONOPP PPPPOPLOO OOLOLOO OOOL OLOO OOOP QQQQ QQRQ 中间<br>OPQ QQQQ QQQQ QQQP PNOP PPPP PPP PQPO OOOO SRRQ QPPO PPOP POPO RQQP POOP RRRR SO QQQQ QQQQ QQQP PNOS SSSS SSSP PQPO OMMO SRRQ QPPO QPLL QPO 高潮</p>\n<p>《給我一首歌的时间》Flash键盘钢琴谱<br>LQQROPOOPQP<br>LQQPOOMOMPO<br>QQRQPOOMOMPL<br>LLMPOOMOMOPP</p>\n<p>《最熟悉的陌生人》Flash键盘钢琴谱<br>PQPQ<br>OPQRSRRQQPOP<br>PQPQ<br>OTSRRQRQPQPO<br>OVUUTSQTSSRSRS<br>PQRQRV TVWW<br>VWXXXXYXXX<br>WVVTX<br>SSTVVVTS<br>SXXXWV<br>VVVTW<br>VWXXXXYXXX<br>WVVWWV<br>SSTVVVTSSXXXWVTV</p>\n<p>《世上只有妈妈好》Flash键盘钢琴谱<br>M L J L O M L M<br>J L M L J I H F L J I<br>I J L L M J I H<br>L J I H F H E</p>\n<p>《死了都要爱》Flash键盘钢琴谱<br>JOOOO PNMLKIJJ KKLM IIJK<br>MNMN JOOOO PNMLKIJJ KKLM ONMM</p>\n<p>《虫儿飞》Flash键盘钢琴谱<br>jjjkljii hhhijjgg fji fji fjihh<br>jjjkljii hhhijjgg fji fji fjihh<br>jil kji lkjklji hfji hfih kjkjh hkjkjhih</p>\n<p>《大海》Flash键盘钢琴谱<br>FEHHHH EFHHIH FHIIII HFIIJI<br>JLMMLM LJIJIHF EFHHHHIH<br>JLMMMMOMLLML JIHHHHIJ<br>JIHHHHOMLLML JLMOOML<br>JLMMMMOMLLML JIHHHHLJ<br>JIHHHHIJLLJL JLM FJIHH</p>\n<p>《天空之城》Flash键盘钢琴谱<br>MNONOQN LJMLMOLL<br>KJKOJ JHOON OONNMN<br>ONOQN JMLMHLJ<br>JKONOPQOO ONMMNLM<br>OPQPQSP LONOQQ<br>MNOONOPO LLRQPOQ<br>QTSQPO POPSQ<br>QTSQPO POPNM<br>MNONOQN JMLMHLJ</p>\n<p>《梁祝》Flash键盘钢琴谱<br>LJIH IGFE<br>NMNLMKJL IJLIJKJIH<br>LGIFHE FHE<br>CEFHI FHE<br>LOMLJLI<br>IJGFEFHICHFEFHE<br>JLGIFHE CECEFGIF<br>EFHILJIJIHFECH FHFECEFHE<br>JLIJIHGFE</p>\n<p>《我是真的受伤了》Flash键盘钢琴谱<br>momqp lnlpo mrqomopo momqp lnlpo momqppopsq momqp<br>lnlpo lrqomop-po rrqqp psppo rrqqppopqrqq ttsspprqpo<br>mqoo sqpp— momqp lnlpo momqppopsq ttttspsppo<br>mrqomopo—- JKONOPQOO ONMMNLM</p>\n<p>《往事难忘》Flash键盘钢琴谱<br>H HIJ JKL MLJ LKJI KJIH<br>H HIJ JKL MLJ LKJI JIH<br>LKJI EEKJIH LKJI KJIH<br>H HIJ JKL MLJ LKJI JIH</p>\n<p>《离家出走》Flash键盘钢琴谱<br>STSQP SQPPO OOPQO OPPOQP STSQS VUSQSTS PQRQORQPO SZRQRSTSRQP QRSTS<br>VUTUVVVUTUS QRSSTTQPPQRRSSPO ORQRQRRSTS QRTSVV SZZX VQQQPQUUUVTOSTSQ<br>RRRPTS VUSSVV SWWU VTVTV ZYX TVWXVW TVUUV TVWXYXYW VUVWVXX UVWUVQQQ QQUUVUV<br>TOSTSV TVVUVW XWVSVV SWWU VTVTVZYX TVWXVW TVUTS</p>\n<p>《心乱如麻》 Flash键盘钢琴谱<br>TSRQRSRQ RRVUTSS QTS TSRQRSRQ RRTSVUV WVXWV<br>VVUUVWS SQTS RRSQVUV WVXWV SXXXYXWV XXXYXWV SWWVWVXXW<br>QSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV QRSTSVWUTS SYXSYXSXYZXVW QSTTSS TVWWVV SZYXVVTTVXYXW SVWXYXVWX WVWVZZ XXTVX XTUVWV</p>\n<p>《不能说的秘密》 Flash键盘钢琴谱<br>EHHH EGGG EHHH EIII EHHH EGGG EHHH EIII EKKKK KJJ KKKLJIHGGH<br>ELLLL LKK LLLLLKKJJI EKKKK KJJ KKKLJIHGGIH FHLMH LLLLLKKJJI<br>HONOOLLLLKKJ HONOOLLLLPPO HONONMHNMNML HMLMLKKJKLMML<br>HONOOLLLLKKJ HONOOLLLLPPO HONONM HNMNML HMLMLKKJKLMML HLHKJ HHLHKJH</p>\n<p>《蜗牛》 Flash键盘钢琴谱<br>J JJKJIJIH HHK KIHHIJ HHL LMLKJK GH EEJ JKJIJH EEH HEHIJKL HONN NONMMNLHKLM MNOPQL EFLK KLKJIHI EEH HEHIJKL HONN NONMMNL HKLM MNOPQL EFLK KJIHHGH</p>\n<p>《123木头人》 Flash键盘钢琴谱<br>LKJJJ III JIHIJO NML MKJKJK IJKONL MLL LKJJJ ILN MNONM J LMK KPOL IJKKJKL J I H</p>\n<p>《神秘园》 Flash键盘钢琴谱<br>jmno no opnmn nomlm lj jmno no opnmn nomlm lm nost tusrs noqr rsqpq nost tusrs strqr rsqpq jmno no opnmn nomlm lj jmno no opnmn nomlm lm</p>\n<p>《轨迹》 Flash键盘钢琴谱<br>qeee reee weewqe qwee eweq hqewqw qeee reee weewqte qwee eweq hqewqw qjqjwq jwqjq q ttqqt qgqrewe ee rewqj wewq qtrewqwet g r eee ereww weqq ett qttrr ewreq qq wEwqw gr eee ereww weqq ett qttrr ewreq qerw jq</p>\n<p>《无赖》 Flash键盘钢琴谱<br>HIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKKLKHI HIJJIJKJIGE FGHHIJJMLJL JLMMMLK JKLLKJ JKJHIH HHEFGHHIJHE EDDFEDE EFFGJIIHGH HHFEFG EEEJIHHIJHL JJLMMNOLJ JJLMMMKMNMLKLJ JKJKLMLL EJIHHIJHL JJLMMNONJ JJLMMMKMNMLJIH JKJKLMLLJIHH</p>\n<p>《海阔天空》 Flash键盘钢琴谱<br>QPO PQSSSSTS TUVVVVVVUTST<br>TSS SQPO QRQPPQPP QPPPOOOO POO<br>TUVVVVVVUTSSSQPO<br>VVVVWWWVWX XWV<br>VVVVWW SSXWV<br>VVVVWWWWVUV<br>TTUTUV VVWVWX XWXV</p>\n<p>《下一站天后》 Flash键盘钢琴谱<br>QQQSP PSOOOQM RQRTQ RSPPMOP QPQSSPQVUSST RQRSMOQPO<br>QSUVUTSS QRSTRRQP POPQSS QTQPOP MOQPPQS<br>VUTUT SSOQSS TTTRQP PPUS QQSO QQPPP TQS VUTUTSS OQSS TTTTVUTUVSSQSTSSRMNO</p>\n<p>《红河谷》Flash键盘钢琴谱<br>ehjjjjijih<br>ehjhjlkji<br>lkjjihijlk<br>ffeghijih<br>lhjjjijih<br>ehjjjlkji<br>lkjjihijlkk<br>ffegijih</p>\n<p>《生日快乐》 Flash键盘钢琴谱</p>\n<p>EEFEHG EEFEIH</p>\n<p>EELJHGF KKJHIH</p>\n<p>09年1月21日更新Flash键盘钢琴谱</p>\n<p>《亡灵序曲》变奏和弦版Flash键盘钢琴谱<br>TQTTUV TUV UTU<br>QQVUT TTUTX WVW VUV</p>\n<p>WX WVZW WVW VUV QTUUVT<br>MJMMNO MNO NMN</p>\n<p>JJON(MT)MMNMR QPQ POP<br>(QW)R QPT QPQ POP JMNNOM<br>TTUUV(TZ)(MT)(OU)(VP)(VP)(MT)</p>\n<p>TQTTUV TUV UTU<br>QQVUT TTUTX WVW VUV</p>\n<p>WX WVZW WVW VUV QTUUVT</p>\n<p>MJMMNO MNO NMN</p>\n<p>JJON(MT)MMNMR QPQ POP</p>\n<p>(QW)R QPT QPQ POP JMNNOM</p>\n<p>(OU)(MT)(OU)(QW)(PV)(OU)(MT)</p>\n<p>MMOMR QPQ POPS S(TZ)</p>\n<p>《一千年以后》Flash键盘钢琴曲谱<br>OHIJML KJHJI OHIJMNL JM NNNOPON ONOQQ<br>NMNL MMNOPOPRQPPQO ONOQ NMNLMO</p>\n<p>OOOPQRQOQP LOP QPOLP QPONMJN</p>\n<p>ONMNOPLQQ QRQOPP LOP QPOLP PQPONMPN</p>\n<p>ONMLMOLPO QQRQP OPQPOPOLPO</p>\n<p>《男儿当自强》Flash键盘钢琴谱<br>MOMOMLM<br>MOMOLMP<br>QOPS QPQO<br>PQOPM<br>OPMOL<br>MOPOML MOL<br>MOMLM OPOML<br>MOLMP QSPQT<br>QTSRQSQPQ<br>QSTUTSQ QSTUSTU<br>TUTSQSTUTSQSP<br>QPOPSRQSP<br>PQSTQSQPO MPO<br>MOPQN NQPNM<br>MOMLM<br>MOMLM<br>QSPQT</p>\n<p>《舞娘》Flash键盘钢琴曲谱</p>\n<p>KJK JKJK LKJ<br>KJK JLK J-<br>FKJK JKJK LKJ<br>FFGHIHIH.IHIHFF<br>MMLLKKJJMJ-<br>FMMLLKKJ<br>FMMLLKKJJMJ<br>FFGHIHIH-<br>.IHIHFF<br>HH.JJ<br>FFLJ<br>FFGHJ<br>FFGHL<br>HH.JJFFLJ-<br>FJIHI<br>FJIHIJIHF<br>IJIHIJIHF<br>FJIHIJIHF </p>\n<p>(间奏略)<br>MMLLKKJJMI<br>FJKJKJKJ<br>JKJI</p>\n<p>《借口》 Flash键盘钢琴曲谱 </p>\n<p>LLJKJKL JLONML 翻着我们的照片，想念若隐若现<br>MONOO QOOOLP 去年的冬天，我们笑得很甜<br>LLJKJKL JLONML 看着你哭泣的脸，背着我说再见<br>MONOO QOOPQP 来不及听见，你已走的很远<br>N（NN）ML（MN）P 也许你已经放弃我<br>O（OO）NM（NO）Q 也许已经很难回头<br>QPPOOLPO 我知道是自己错过<br>MNOOONOP PQPQP请在给我一个理由，说你不爱我<br>LJLPRQ LJLPRQ 就算是我不懂，能不能原谅我<br>LJLPRQPOPQPO 请不要把分手当作你的请求<br>MMKQPQP LLJPOPO 我知道坚持要走，是你受伤的借口<br>OPQO OPPOPQQPQP 请你回头，我会陪你一直走到最后<br>LJLPRQ LJLPRQ 就算没有结果，我也能够承受<br>LJLPRQ POPQPO 我知道你的痛是我给的承诺<br>MMKQPQP LLJPONO 你说给过我纵容，沉默是因为包容<br>OPQO LQPOO 如果要走，请你记得我<br>OPQO LQPOO 如果难过，请你忘了我。</p>\n<p>《当你孤单想起谁 和弦版》Flash键盘钢琴谱<br>(EJ)K(AL)L(CL)L(EL) (CJ)K(EL)L(GL)L(IL) (HM)N(FO)J(NJ)J(GJ)J-I(EGJ)<br>你的心情总在飞 什么事都想去追 想抓住一点安慰<br>(GL)(DL)K(FK)J(DI)H Q (QL)R(OQ)P(JQO)–(SL)(DL)K(FK)J(HK)L–J(IE)–(X)(SW)<br>你总是喜欢在人群中徘徊 你最害怕孤单的滋味<br>(EJ)K(AL)L(CL)L(EL)-(CJ)K(EL)L(GL)M(IL)<br>你的心那么脆 一碰就会碎<br> U(HM)N(FO)J(NJ)J(GJ)J-I(EGJ) J(K) (L) (SL)(DL)K(FK)J(DI)H<br> 经不起一点风吹 你的身边总是要<br> Q (QL)R(OQ)P(QO)–(SL)(DL)K(FK)J(HK)L<br> 许多人陪 你最害怕每天的天黑<br> (RM)-N (FO)(JO)(WP)O–O(CN)O(SN)(QL)<br> 但是天总会黑 人总要离别<br> L(DM)FH(FK)–K(JE)L-J(IE)<br> 谁也不能永远陪谁<br> (TM)N (FO)(JO)(WP)O–O(CN)O(SN)(QL)<br> 而孤单的滋味 谁都要面对<br> L(DM)O(FO)O(HO)O-O(QOL)P(PL)O-Q(PGL)-<br> 不只是你我会感觉到疲惫<br> (OJ)P(QHO)-(QO)R(JO) (NP)O(LP)-(SP)P(NUP) (QFO)-(JO)P(MO) (NJ)M(NC)-(GQ)N(NSL)<br> 当你孤单你会想起谁 你想不想找个人来陪<br> k(KM) PQ(LP)OM–(GL) PQ(EP)OM–(DTM) (WP)X(WEP)V(PT)U (VLA)-<br> 你的快乐伤悲 只有我能体会 让我再陪你走一回</p>\n<p> 周华健的《朋友》Flash键盘钢琴谱</p>\n<p> Q-(OHIJA)–(PHIJ)-(AHQ)-(OHIJA)–(PHIJ)-(CQ)-(SHIJG)–(SHIJ)-(TGN)-(OFHJA)–(MAC)-(OF)-(PHIJ)–(PHIJ)-(OIB)-(MFHJ)–(MFHJ)-(OIB)-(PHIJB)-Q-(PHIJ)-(OIB)-(PGIL)–(QGIL)-(PE)O(OHIJA)–(PHIJ)-(QHA)O(OHIJ)–(PHIJ)-(QHA)-(SGIJ)–(SGIJ)-(TNG)-(OFHJ)–(MFHJ)-(OF)-(PHIK)–(PHIK)-(OIB)-(MADF)–(LBEG)-M-(OHJLF)CG-H-E-H-(IQ)-(SJ)-(SA)-(SE)-(SHJL)-(TE)-(SG)-E-(TGJL)-(UE)-(VF)-(TJ)-(THJM)-(SF)-(QE)–(QGJL)-(PE)-(OD)-H-(OHJM)-(TF)-(SC)-G-(QFJL)-(PE)-(OBI)-F-(MIFB)-(PDB)-(PE)BEF(QG)I(SL)N(SL)J(SH)E(LS)J(TH)E(SL)JHE(TL)Q(UG)E(VM)J(TH)F(TM)J(SH)F(QL)JGE(QL)J(PG)(OE)(OK)HFD(OK)H(TF)(SD)(SJ)GEC(QJ)G(PE)(OC)(OK)HFD(FB)D(OE)I(OHA)EHIJLOP(DK)HMMOMORT(AHJLO)-</p>\n<p>  《笑傲江湖》  Flash键盘钢琴谱</p>\n<p>  JMJ LL-J IJLML J–</p>\n<p>  JMJ LL-J IJLML J–</p>\n<p>  J JI HHIJ IIIIH MMHIJ</p>\n<p>  LMLJI HIIJ IIIH MMHIJ LM-</p>\n<p>  QPO P– OMSSQ P– </p>\n<p>  MHII ILJ MIJ HIM </p>\n<p>  HML MJIJL M– M–</p>\n<p>  JMJ LL-J IJLML J– </p>\n<p>  JMJ LL-J IJLML J–</p>\n<p>   请不要爱我 键盘钢琴谱<br>   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q 9 S - -<br>   (SH) L (QO) S (SI) M (SP) 9 (SJ) N Q ST(US) T S [9S9]<br>   (QH) L O Q (9I) M P 9 (SE) I L N (U9) - - -<br>   (SH) L (SO) S S S S - (9I) M (9P) 9 9 U 9 P<br>   (QH) L (QO) Q Q - Q - (PB) F (MI) N P - - [99]<br>   (SH) L (SO) S S U S - (9<code>) I (94) 9 9 U 9 P\n   (QA) E (QH) (QE) (QJ) - Q - (9B) F I 4 (/M)\n   (UE) I L (UN) (UP) (TN) (SL) (UI) (TI) M P (T9) (WT) (U9) (VP) (WM)\n   (UC) G J (UL) (VN) U (TL) (SJ) (VA) E U E T E S E\n   O C F H J - (PM) - 9 B (U</code>) G (9I) - (P4）<br>   (QA) E H J L S Q U B F (TI) 4 M P (94) (TI)<br>   (SW) B E G I G (NPE) B (SW) B E G (SVI) G (SUE) C<br>   (TB) (TWF) (TWH) (TWJ) (TWL) (TJ) (UH) (VF) (SUC) G J L (SN) L (9J) G<br>   (RB) (PSF) (PSI) (PS4) (SWZE) I (WYL) N (VXA) E H J (XL) (XZ) X</p>\n<ul>\n<li>[ ` G . Z - - (V,) E G I 4 V X T<br>C G J L (QSN) (QT) (QU) (QS) (QSVA) E H J L - Q -<br>(9B) F (PI) 4 (9U) F I (T4) (TA) E (SH) J L - 9 -<br>S B (PE) G (PS) B (PTE) G (9U) B (9WE) G (9X) B (9/E) G<br>(SC) G J 4 L - - -</li>\n</ul>\n<p>   　　回到过去<br>   　　hjjiihgh<br>   　　hggffecf<br>   　　feehhjji<br>   　　ihhhgfe<br>   　　hjjiihgih<br>   　　hggffecg<br>   　　feee<br>   　　edced<br>   　　hjji<br>   　　iiihijji<br>   　　eghhghml<br>   　　hihjhhgee<br>   　　ehihjhkkji<br>   　　ehijj<br>   　　jijkkjji<br>   　　ihjjjiihgh<br>   　　hihjjjj<br>   　　hhlljjj<br>   　　hhiihhhfhfhi<br>   　　ehigh</p>\n<p>   　　亲爱的那不是爱情<br>   　　OOONMMLMLLKJL<br>   　　HMMMMLOJJIIHI<br>   　　JIHGHLL<br>   　　LHMLLL<br>   　　MNOOOLKJIHH<br>   　　OOONMMLMLLKJL<br>   　　HMMMMLOJJIIHI<br>   　　JIHGHLL<br>   　　LHMLLL<br>   　　MNOOOLKJIHH<br>   　　JJLPQLNNOM<br>   　　KKMSRMOOPN<br>   　　LLJPOPQPOJ<br>   　　ONLONNLQQRP<br>   　　JJLPQLNNOM<br>   　　KKMSRMOOPN<br>   　　LLJPOPQPOO<br>   　　MOSRQPOO</p>\n<p>   　哆啦A梦<br>   　　ehhjmjl<br>   　　lmljkji<br>   　　fiiknnmlkkjfghi<br>   　　ehhjmjl<br>   　　lmljkji<br>   　　fiiknnmlkkjfgih<br>   　　mmlklml<br>   　　ijkil<br>   　　mlkinmlmlk<br>   　　lmjih</p>\n<p>   　　同桌的你<br>   　　lllljkln<br>   　　mmmmkml<br>   　　llllnmlk<br>   　　kkkkjih<br>   　　oooolmoq<br>   　　pppponm<br>   　　nnnnnopl<br>   　　nnopono<br>   　　oooolmoq<br>   　　pppponm<br>   　　nnnnnopl<br>   　　nnopono</p>\n<p>   　　大海<br>   　　FEHHHH EFHHIH FHIIII HFIIJI<br>   　　JLMMLM LJIJIHF EFHHHHIH<br>   　　JIMMMMOMLLML JIHHHHIJ<br>   　　JIHHHHOMLLML JLMOOML<br>   　　JIMMMMOMLLML JIHHHHLJ<br>   　　JIHHHHIJLLJL JLM FJIHH</p>\n<p>   　送别》 　　<br>   　　LJLO MOL 　　<br>   　　LHIJ IHI 　　<br>   　　LJLO NMOL 　　<br>   　　LIJK GA</p>\n<p>   　　天空之城<br>   　　MNONOQN LJMLMOLL<br>   　　KJKOJ JHOON OONNMN<br>   　　ONOQN JMLMHLJ<br>   　　JKONOPQOO ONMMNLM<br>   　　OPQPQSP LONOQQ<br>   　　MNOONOPO LLRQPOQ<br>   　　QTSQPO POPSQ<br>   　　QTSQPO POPNM<br>   　　MNONOQN JMLMHLJ<br>   　　JKONOPQOO ONMMNLM<br>   　　<br>   　　梁祝<br>   　　LJIH IGFE<br>   　　NMNLMKJL IJLIJKJIH<br>   　　LGIFHE FHE<br>   　　CEFHI FHE<br>   　　LOMLJLI<br>   　　IJGFEFHICHFEFHE<br>   　　JLGIFHE CECEFGIF<br>   　　EFHILJIJIHFECH FHFECEFHE<br>   　　JLIJIHGFE</p>\n"},{"title":"行业会议","date":"2018-03-08T02:09:43.000Z","update":null,"_content":"1. QCon(全球软件开发大会) \nQCon是由InfoQ主办的全球顶级技术盛会，每年在伦敦、北京、东京、纽约、圣保罗、上海、旧金山召开。自2007年3月份首次举办以来，已经有超万名高级技术人员参加过QCon大会。QCon内容源于实践并面向社区，演讲嘉宾依据热点话题，面向5年以上工作经验的技术团队负责人、架构师、工程总监、高级开发人员分享技术创新和最佳实践。\n\n2. D2开发者大会\n   阿里举办前端开发分享会\n\n","source":"_posts/summitmeeting.md","raw":"---\ntitle: 行业会议\ndate: 2018-03-08 10:09:43\nupdate:\ntags:\n---\n1. QCon(全球软件开发大会) \nQCon是由InfoQ主办的全球顶级技术盛会，每年在伦敦、北京、东京、纽约、圣保罗、上海、旧金山召开。自2007年3月份首次举办以来，已经有超万名高级技术人员参加过QCon大会。QCon内容源于实践并面向社区，演讲嘉宾依据热点话题，面向5年以上工作经验的技术团队负责人、架构师、工程总监、高级开发人员分享技术创新和最佳实践。\n\n2. D2开发者大会\n   阿里举办前端开发分享会\n\n","slug":"summitmeeting","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm800132oi89a8o4mfk","content":"<ol>\n<li><p>QCon(全球软件开发大会)<br>QCon是由InfoQ主办的全球顶级技术盛会，每年在伦敦、北京、东京、纽约、圣保罗、上海、旧金山召开。自2007年3月份首次举办以来，已经有超万名高级技术人员参加过QCon大会。QCon内容源于实践并面向社区，演讲嘉宾依据热点话题，面向5年以上工作经验的技术团队负责人、架构师、工程总监、高级开发人员分享技术创新和最佳实践。</p>\n</li>\n<li><p>D2开发者大会<br>阿里举办前端开发分享会</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>QCon(全球软件开发大会)<br>QCon是由InfoQ主办的全球顶级技术盛会，每年在伦敦、北京、东京、纽约、圣保罗、上海、旧金山召开。自2007年3月份首次举办以来，已经有超万名高级技术人员参加过QCon大会。QCon内容源于实践并面向社区，演讲嘉宾依据热点话题，面向5年以上工作经验的技术团队负责人、架构师、工程总监、高级开发人员分享技术创新和最佳实践。</p>\n</li>\n<li><p>D2开发者大会<br>阿里举办前端开发分享会</p>\n</li>\n</ol>\n"},{"title":"ubuntu 16.04 装机攻略","date":"2017-11-15T11:13:35.000Z","_content":"\n下面分别介绍一下所用的软件：\n## 桌面美化类\n\n至于桌面美化只是简单的做了一些处理，可以参考博客ubuntu16.04主题美化和软件推荐,这里不再赘述，毕竟Ubuntu原始桌面实在是不好看。至于Docker发现装了作用不大而且使屏幕复杂多了就不再用了。\n\n### BingWallpaper\n\n bing壁纸使用每天可以更换壁纸而且壁纸质量比较好，不同每天看着一样的壁纸。\n\n### Redshift\n\n屏幕防蓝光工具，毕竟要天天看着电脑要保护眼睛。以前在笔记本上使用f.lux，但是在台式机上安装f.lux发现并不能调节屏幕蓝光，找到Redshift，发现还蛮好用的。\n\n## 开发工具类\n\n### eclipse\n\neclipse作为Java集成开发环境中最好的的存在，当然要接着使用。\n\n### Atom\n\nGithub出品的文本编辑器，本人感觉比sublime好用多了，sublime在Ubuntu中最大的缺陷在于对中文支持实在不咋地，遂放弃sublime。Vim就不用说了，超级牛只是用不习惯。\n\n### Pycharm\n\n尝试Pycharm写Python也比较爽，但是本人习惯使用Eclipse的界面风格，所以一般写Python都是使用Eclipse+PyDev的，偶尔也用一下Pycharm。\n\n### Code Blocks\n\n虽然Linux Shell已经提供了Vim+Gcc环境开发C，但是还是习惯集成的开发环境，就装了一个Code Blocks，反正C现在也一般不常用了，装着只是以备不时之需。\n\n### TexStudio\n\n平常写论文少不了LeTex排版工具，本人一直觉得TexStudio+Texlive比Ctex好用多了，就一直用到现在。\n\n### MySQL\n\n至于数据库一直用开源的MySQL+MySQL Workbench，虽然现在已经被Oracle收购了，但是现在还能用。微软的SQLServer实在是太大了，本科学数据库的时候一直用SQLServer。\n\n### Gephi\n\n由于研究生方向是社团检测，Gephi作为复杂网络可视化中比较好用的工具就少不了它罗 。\n\n### Typora\n\n以前在Windows上一直用小书匠，Ubuntu中也能使用小书匠但是感觉真的没有Typora好用。强烈推荐这一款Markdown编辑器。\n\n## 系统工具类\n\n### Google Chrome\n\nGoogle浏览器一直在用，我觉得这是最好用的浏览器，没有之一。。。。插件尤为强悍\n\n### Firefox\n\n在Google浏览器不能使用的时候偶尔用用Firefox\n\n### ShadowSocks-Qt5\n\nUbuntu中常用的翻墙软件，当然首先是要有一个账号，并且还要在浏览器中设置代理。\n\n## 新立得软件包管理器\n\n平常用来删除一下不用的软件包。主要是Ubuntu的文件系统有点不熟悉，有时候命令行安装的包不知道安到哪去了。\n\n### Unity Tweak Tool 系统桌面管理工具\n\n添加包命令：sudo add-apt-repository ppa:freyja-dev/unity-tweak-tool-daily\n更新包管理器：sudo apt-get update\n安装命令：sudo apt-get install unity-tweak-tool\n安装完成，但失败无法启用\n参考：http://www.linuxidc.com/Linux/2013-02/79830.htm\n貌似后来通过软件中心安装成功，可以使用了\n\n### 安装替换系统默认字体\n安装文泉字体，通过tweak替换\n参考：http://www.linuxdiyf.com/linux/11653.html\n\n### 安装Adobe flash\n安装命令：sudo apt-get install flashplugin-installer\n### 安装压缩软件RAR\n安装命令：sudo apt-get install rar\n提高电池的寿命并且减少过热\n笔记本过热是一个普遍的问题，它不仅仅存在于ubuntu中，也存在与其他的操作系统中，过热会影响电池的寿命，从 ubuntu12.10开始，tupiter就是解决过热的最好的工具。可惜的是这个项目已经停止开发了，你可以使用TLP或者CPUFREQ来代替 jupiter,安装TLP通过使用下面的命令：\nsudo add-apt-repository ppa:linrunner/tlp\nsudo apt-get update\nsudo apt-get install tlp tlp-rdw\nsudo tlp start\n使用TPL是不需要进行配置的。\n参考：http://www.zhihu.com/question/20509148\n安装云盘Dropbox（需VPN）\nsudo apt-get install nautilus-dropbox\nsudo apt-get install libappindicator1\n下载的是一个下载器，完成后可能需要VPN来下载Dropbox主程序。\n启动器albert\nsudo add-apt-repository ppa:nilarimogard/webupd8\nsudo apt-get update\nsudo apt-get install albert\n安装完成后，在启动器里输入albert打开并设置热键（我这里设置的热键是`+Ctrl）\n参考：\nhttp://www.zhihu.com/question/20509148\nhttp://www.webupd8.org/2015/01/albert-fast-lightweight-quick-launcher.html\n### 笔记本Zim Desktop Wiki\n摘抄知乎：Zim的所有笔记都以文本格式存储，以文件夹方式管理；同时支持HTML、LaTeX、Markdown、rst等多种格式，可在模板中选择(虽然我没用过)；支持全文搜索、标签检索。默认是一种类似Markdown的wiki格式，支持列表、任务列表，可以插入图片、附件、LaTeX公式(需先安装latex相关软件)，插入的图片可单独指定一个附件目录，可输出为HTML、LaTeX、Markdown、rst。\n安装命令：sudo apt-get install zim\n参考：www.zhihu.com/question/20509148\n### 思维导图 Xmind\n下载安装包：http://www.xmind.net/download/linux/\n安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb\n安装失败，缺少依赖包，安装依赖包：sudo apt-get install -f\n重新安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb\n### 自动调节屏幕色温Redshift\n根据日出日落时间(设定经纬度)自动调节电脑屏幕的亮度、色彩(色温)，保护眼睛\n没用之前我一直觉得这种东西有必要吗，一直在后台耗费系统资源？用过了之后，我才发现真的很有必要呀！开启软件时，眼睛是一种很柔和的感觉，关闭则是对比很明显的刺眼蓝光。这才发现我的搓本屏幕颜色严重偏蓝，而之前我笔记本的亮度也因为刺眼的蓝光调的过低了。\n安装命令：sudo apt-get install redshift\n启动命令：redshift\n可以加到系统启动里面：vim /etc/rc.local\n将启动命令添加进去，保存并推出\n参考：http://www.zhihu.com/question/20509148\n最近，也找到一个win下的屏幕色温调节工具：flux\n### Linux下的完美帅气终端Guake\n安装命令：sudo apt-get install guake\n     常用快捷键\n     调用：键盘F12\n     新建终端选项卡：Ctrl+Shift+T\n     关闭当前选项卡：Ctrl+Shift+W\n     切换到当前选项卡右边：Ctrl+Page Down\n     切换到当前选项卡左边：Ctrl+Page Up\n\n\n### 浮动菜单\n下方的浮动图标工具栏：docky\n安装方法：sudo apt-get install docky\n\n### 便签Xpad\n不是和docky集成的便签\n安装方法：sudo apt-get install xpad\n参考：http://article.yeeyan.org/view/140496/124205/\n### WPS\n首先去下载：http://linux.wps.cn/\n之后安装：sudo dpkg -i wps-office_10.1.0.5444~a20_amd64.deb\n\n\n### Pinta\n\n简单好用的图片编辑器，虽然Gimp非常强悍，但是操作觉得比较复杂。\n\n### Catfish\n\n文件搜索，有时文件太多而且不知道放在哪，这个工具可以帮你快速找到，系统自带的文件搜索也好用。\n\n### sougou input 输入法\n\n搜狗输入法，比系统自带的输入法好用多了。\n\n以后发现了什么好用的软件再更新博客。\n之前安装的是搜狗拼音，这次安装16.04选择的是汉语各种中文，已经把拼音集成了。所以这次没有安装输入法。不过麻烦的就是去个我的文件夹，原本是cd Downloads的命令要改成cd 下载．\n后来发现还是搜狗好用，比方说你要当前的时间，直接输入sj就会出现，但是其他的输入法比方说Ubuntu自带的就没有这个功能，好吧，装搜狗．\n安装包下载地址：http://pinyin.sogou.com/linux/\n执行安装命令：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb\n缺少依赖包，安装失败，安装依赖包：sudo apt-get install -f\n依赖包安装完成，重新安装：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb\n安装成功\n在启动里直接搜索Fcitx Configuration，打开后在Input Method里删除除了Sougou拼音以外的其它中文输入法（可能略有延迟，Sougou拼音没出来），确保除了Sougou拼音外，只有一个Keyboard – English(US)，若没有这一项就在下方点击加号＂＋＂添加这一项．\n\n## 开发工具类\n\n### R+RStudio \nR语言作为统计学习中重要的编程语言。最近装着用着试试。。。可以也不太用的到。\n系统工具\n\n### Remmina远程桌面 \n最近老师给了一台服务器用用，感觉还是蛮爽的，服务器是Windows Server系统，因此发现了这个比较好用的Linux->Windows远程工具。\n\n### VirtualBox虚拟机 \n最近需要做实验需要用到Windows和Kali，于是找了一个虚拟机软件。Linux下VirtualBox和VmWare都可以使用，但是本人觉得轻量级的VirtualBox还是好用一点。但是被其中的界面全屏折腾了一下，后来解决了。\n\n\n注意：在Linux下Win键就是Super键\n\n启动器\n\nWin(长按) 打开启动器，显示快捷键\nWin + Tab 通过启动器切换应用程序\nWin + 1到9 与点击启动器上的图标效果一样\nWin + Shift + 1到9 在应用中打开一个新窗口\nWin + T 打开垃圾桶\n面板\n\nWin(轻触点击) 打开dash主页\nWin + A 打开dash应用栏目\nWin + F 打开dash文件栏目\nWin + M 打开dash音乐栏目\nWin + C 打开dash图片栏目\nWin + V 打开dash视频栏目\nCtrl + Tab 在栏目或者标签间切换\n切换中\n\nAlt + Tab 切换应用程序\nCtrl + Alt +Tab 切换所有工作区的应用程序\nAlt + ` 切换当前运行的应用程序窗口\nAlt + Q 关闭选中的应用程序或窗口\n工作区\n\nWin + S 切换工作区\nCtrl + Alt +方向键 切换工作区\nCtrl + Shift + Alt + 方向键 移动当前窗口到另一个工作区\n窗口\n\nWin + W 展开当前工作区的所有窗口\nShift + Win + W 展开所有工作区的窗口\nCtrl + Win + W 平展当前工作区中焦点应用的所有窗口\nShift + Ctrl + Win + W 平展当前焦点应用在所有工作区中的窗口\nCtrl + Win +D 最小化所有窗口(显示桌面）也可以用 Win + D\n Ctrl + Win + 上 最大化当前窗口\n Ctrl + Win + 下 还原或最小化当前窗口\n Ctrl + Win + 左或右 半最大化当前窗口\n Alt + F4 关闭当前窗口 或者 Ctrl + Q\n Alt + 空格 打开窗口通用访问菜单\n Alt + 鼠标左键拖拽 移动当前窗口\n Alt + 鼠标中键拖拽 调整当前窗口大小\n Ctrl + L 资源管理器中显示当前目录的路径\n Ctrl + H 资源管理器中显示所有文件和文件夹（显示隐藏的文件夹）\n Alt + Enter 显示所选文件或者文件夹的属性信息\n Alt + Home 直接移到你的主目录\n 其他\n\n Ctrl + Alt + T 打开终端\n Ctrl + Q 退出当前程序\n Alt + F1 + Enter 搜索计算机\n Alt + F2 搜索计算机\n Ctrl + Alt + L 锁屏，如果你想走开一会而不想让别人看到你的屏幕，相当于 Win + L\n Ctrl + Alt + F1 切换到首个虚拟终端\n Ctrl + Alt + F2(F3)(F4)(F5)(F6) 选择不同的虚拟终端\nCtrl + Alt + F7 切换到当前登录会话\n","source":"_posts/ubuntu_tips20171115.md","raw":"---\ntitle: ubuntu 16.04 装机攻略\ndate: 2017-11-15 19:13:35\ntags:\n---\n\n下面分别介绍一下所用的软件：\n## 桌面美化类\n\n至于桌面美化只是简单的做了一些处理，可以参考博客ubuntu16.04主题美化和软件推荐,这里不再赘述，毕竟Ubuntu原始桌面实在是不好看。至于Docker发现装了作用不大而且使屏幕复杂多了就不再用了。\n\n### BingWallpaper\n\n bing壁纸使用每天可以更换壁纸而且壁纸质量比较好，不同每天看着一样的壁纸。\n\n### Redshift\n\n屏幕防蓝光工具，毕竟要天天看着电脑要保护眼睛。以前在笔记本上使用f.lux，但是在台式机上安装f.lux发现并不能调节屏幕蓝光，找到Redshift，发现还蛮好用的。\n\n## 开发工具类\n\n### eclipse\n\neclipse作为Java集成开发环境中最好的的存在，当然要接着使用。\n\n### Atom\n\nGithub出品的文本编辑器，本人感觉比sublime好用多了，sublime在Ubuntu中最大的缺陷在于对中文支持实在不咋地，遂放弃sublime。Vim就不用说了，超级牛只是用不习惯。\n\n### Pycharm\n\n尝试Pycharm写Python也比较爽，但是本人习惯使用Eclipse的界面风格，所以一般写Python都是使用Eclipse+PyDev的，偶尔也用一下Pycharm。\n\n### Code Blocks\n\n虽然Linux Shell已经提供了Vim+Gcc环境开发C，但是还是习惯集成的开发环境，就装了一个Code Blocks，反正C现在也一般不常用了，装着只是以备不时之需。\n\n### TexStudio\n\n平常写论文少不了LeTex排版工具，本人一直觉得TexStudio+Texlive比Ctex好用多了，就一直用到现在。\n\n### MySQL\n\n至于数据库一直用开源的MySQL+MySQL Workbench，虽然现在已经被Oracle收购了，但是现在还能用。微软的SQLServer实在是太大了，本科学数据库的时候一直用SQLServer。\n\n### Gephi\n\n由于研究生方向是社团检测，Gephi作为复杂网络可视化中比较好用的工具就少不了它罗 。\n\n### Typora\n\n以前在Windows上一直用小书匠，Ubuntu中也能使用小书匠但是感觉真的没有Typora好用。强烈推荐这一款Markdown编辑器。\n\n## 系统工具类\n\n### Google Chrome\n\nGoogle浏览器一直在用，我觉得这是最好用的浏览器，没有之一。。。。插件尤为强悍\n\n### Firefox\n\n在Google浏览器不能使用的时候偶尔用用Firefox\n\n### ShadowSocks-Qt5\n\nUbuntu中常用的翻墙软件，当然首先是要有一个账号，并且还要在浏览器中设置代理。\n\n## 新立得软件包管理器\n\n平常用来删除一下不用的软件包。主要是Ubuntu的文件系统有点不熟悉，有时候命令行安装的包不知道安到哪去了。\n\n### Unity Tweak Tool 系统桌面管理工具\n\n添加包命令：sudo add-apt-repository ppa:freyja-dev/unity-tweak-tool-daily\n更新包管理器：sudo apt-get update\n安装命令：sudo apt-get install unity-tweak-tool\n安装完成，但失败无法启用\n参考：http://www.linuxidc.com/Linux/2013-02/79830.htm\n貌似后来通过软件中心安装成功，可以使用了\n\n### 安装替换系统默认字体\n安装文泉字体，通过tweak替换\n参考：http://www.linuxdiyf.com/linux/11653.html\n\n### 安装Adobe flash\n安装命令：sudo apt-get install flashplugin-installer\n### 安装压缩软件RAR\n安装命令：sudo apt-get install rar\n提高电池的寿命并且减少过热\n笔记本过热是一个普遍的问题，它不仅仅存在于ubuntu中，也存在与其他的操作系统中，过热会影响电池的寿命，从 ubuntu12.10开始，tupiter就是解决过热的最好的工具。可惜的是这个项目已经停止开发了，你可以使用TLP或者CPUFREQ来代替 jupiter,安装TLP通过使用下面的命令：\nsudo add-apt-repository ppa:linrunner/tlp\nsudo apt-get update\nsudo apt-get install tlp tlp-rdw\nsudo tlp start\n使用TPL是不需要进行配置的。\n参考：http://www.zhihu.com/question/20509148\n安装云盘Dropbox（需VPN）\nsudo apt-get install nautilus-dropbox\nsudo apt-get install libappindicator1\n下载的是一个下载器，完成后可能需要VPN来下载Dropbox主程序。\n启动器albert\nsudo add-apt-repository ppa:nilarimogard/webupd8\nsudo apt-get update\nsudo apt-get install albert\n安装完成后，在启动器里输入albert打开并设置热键（我这里设置的热键是`+Ctrl）\n参考：\nhttp://www.zhihu.com/question/20509148\nhttp://www.webupd8.org/2015/01/albert-fast-lightweight-quick-launcher.html\n### 笔记本Zim Desktop Wiki\n摘抄知乎：Zim的所有笔记都以文本格式存储，以文件夹方式管理；同时支持HTML、LaTeX、Markdown、rst等多种格式，可在模板中选择(虽然我没用过)；支持全文搜索、标签检索。默认是一种类似Markdown的wiki格式，支持列表、任务列表，可以插入图片、附件、LaTeX公式(需先安装latex相关软件)，插入的图片可单独指定一个附件目录，可输出为HTML、LaTeX、Markdown、rst。\n安装命令：sudo apt-get install zim\n参考：www.zhihu.com/question/20509148\n### 思维导图 Xmind\n下载安装包：http://www.xmind.net/download/linux/\n安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb\n安装失败，缺少依赖包，安装依赖包：sudo apt-get install -f\n重新安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb\n### 自动调节屏幕色温Redshift\n根据日出日落时间(设定经纬度)自动调节电脑屏幕的亮度、色彩(色温)，保护眼睛\n没用之前我一直觉得这种东西有必要吗，一直在后台耗费系统资源？用过了之后，我才发现真的很有必要呀！开启软件时，眼睛是一种很柔和的感觉，关闭则是对比很明显的刺眼蓝光。这才发现我的搓本屏幕颜色严重偏蓝，而之前我笔记本的亮度也因为刺眼的蓝光调的过低了。\n安装命令：sudo apt-get install redshift\n启动命令：redshift\n可以加到系统启动里面：vim /etc/rc.local\n将启动命令添加进去，保存并推出\n参考：http://www.zhihu.com/question/20509148\n最近，也找到一个win下的屏幕色温调节工具：flux\n### Linux下的完美帅气终端Guake\n安装命令：sudo apt-get install guake\n     常用快捷键\n     调用：键盘F12\n     新建终端选项卡：Ctrl+Shift+T\n     关闭当前选项卡：Ctrl+Shift+W\n     切换到当前选项卡右边：Ctrl+Page Down\n     切换到当前选项卡左边：Ctrl+Page Up\n\n\n### 浮动菜单\n下方的浮动图标工具栏：docky\n安装方法：sudo apt-get install docky\n\n### 便签Xpad\n不是和docky集成的便签\n安装方法：sudo apt-get install xpad\n参考：http://article.yeeyan.org/view/140496/124205/\n### WPS\n首先去下载：http://linux.wps.cn/\n之后安装：sudo dpkg -i wps-office_10.1.0.5444~a20_amd64.deb\n\n\n### Pinta\n\n简单好用的图片编辑器，虽然Gimp非常强悍，但是操作觉得比较复杂。\n\n### Catfish\n\n文件搜索，有时文件太多而且不知道放在哪，这个工具可以帮你快速找到，系统自带的文件搜索也好用。\n\n### sougou input 输入法\n\n搜狗输入法，比系统自带的输入法好用多了。\n\n以后发现了什么好用的软件再更新博客。\n之前安装的是搜狗拼音，这次安装16.04选择的是汉语各种中文，已经把拼音集成了。所以这次没有安装输入法。不过麻烦的就是去个我的文件夹，原本是cd Downloads的命令要改成cd 下载．\n后来发现还是搜狗好用，比方说你要当前的时间，直接输入sj就会出现，但是其他的输入法比方说Ubuntu自带的就没有这个功能，好吧，装搜狗．\n安装包下载地址：http://pinyin.sogou.com/linux/\n执行安装命令：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb\n缺少依赖包，安装失败，安装依赖包：sudo apt-get install -f\n依赖包安装完成，重新安装：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb\n安装成功\n在启动里直接搜索Fcitx Configuration，打开后在Input Method里删除除了Sougou拼音以外的其它中文输入法（可能略有延迟，Sougou拼音没出来），确保除了Sougou拼音外，只有一个Keyboard – English(US)，若没有这一项就在下方点击加号＂＋＂添加这一项．\n\n## 开发工具类\n\n### R+RStudio \nR语言作为统计学习中重要的编程语言。最近装着用着试试。。。可以也不太用的到。\n系统工具\n\n### Remmina远程桌面 \n最近老师给了一台服务器用用，感觉还是蛮爽的，服务器是Windows Server系统，因此发现了这个比较好用的Linux->Windows远程工具。\n\n### VirtualBox虚拟机 \n最近需要做实验需要用到Windows和Kali，于是找了一个虚拟机软件。Linux下VirtualBox和VmWare都可以使用，但是本人觉得轻量级的VirtualBox还是好用一点。但是被其中的界面全屏折腾了一下，后来解决了。\n\n\n注意：在Linux下Win键就是Super键\n\n启动器\n\nWin(长按) 打开启动器，显示快捷键\nWin + Tab 通过启动器切换应用程序\nWin + 1到9 与点击启动器上的图标效果一样\nWin + Shift + 1到9 在应用中打开一个新窗口\nWin + T 打开垃圾桶\n面板\n\nWin(轻触点击) 打开dash主页\nWin + A 打开dash应用栏目\nWin + F 打开dash文件栏目\nWin + M 打开dash音乐栏目\nWin + C 打开dash图片栏目\nWin + V 打开dash视频栏目\nCtrl + Tab 在栏目或者标签间切换\n切换中\n\nAlt + Tab 切换应用程序\nCtrl + Alt +Tab 切换所有工作区的应用程序\nAlt + ` 切换当前运行的应用程序窗口\nAlt + Q 关闭选中的应用程序或窗口\n工作区\n\nWin + S 切换工作区\nCtrl + Alt +方向键 切换工作区\nCtrl + Shift + Alt + 方向键 移动当前窗口到另一个工作区\n窗口\n\nWin + W 展开当前工作区的所有窗口\nShift + Win + W 展开所有工作区的窗口\nCtrl + Win + W 平展当前工作区中焦点应用的所有窗口\nShift + Ctrl + Win + W 平展当前焦点应用在所有工作区中的窗口\nCtrl + Win +D 最小化所有窗口(显示桌面）也可以用 Win + D\n Ctrl + Win + 上 最大化当前窗口\n Ctrl + Win + 下 还原或最小化当前窗口\n Ctrl + Win + 左或右 半最大化当前窗口\n Alt + F4 关闭当前窗口 或者 Ctrl + Q\n Alt + 空格 打开窗口通用访问菜单\n Alt + 鼠标左键拖拽 移动当前窗口\n Alt + 鼠标中键拖拽 调整当前窗口大小\n Ctrl + L 资源管理器中显示当前目录的路径\n Ctrl + H 资源管理器中显示所有文件和文件夹（显示隐藏的文件夹）\n Alt + Enter 显示所选文件或者文件夹的属性信息\n Alt + Home 直接移到你的主目录\n 其他\n\n Ctrl + Alt + T 打开终端\n Ctrl + Q 退出当前程序\n Alt + F1 + Enter 搜索计算机\n Alt + F2 搜索计算机\n Ctrl + Alt + L 锁屏，如果你想走开一会而不想让别人看到你的屏幕，相当于 Win + L\n Ctrl + Alt + F1 切换到首个虚拟终端\n Ctrl + Alt + F2(F3)(F4)(F5)(F6) 选择不同的虚拟终端\nCtrl + Alt + F7 切换到当前登录会话\n","slug":"ubuntu_tips20171115","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm800142oi8ui0zw2wn","content":"<p>下面分别介绍一下所用的软件：</p>\n<h2 id=\"桌面美化类\"><a href=\"#桌面美化类\" class=\"headerlink\" title=\"桌面美化类\"></a>桌面美化类</h2><p>至于桌面美化只是简单的做了一些处理，可以参考博客ubuntu16.04主题美化和软件推荐,这里不再赘述，毕竟Ubuntu原始桌面实在是不好看。至于Docker发现装了作用不大而且使屏幕复杂多了就不再用了。</p>\n<h3 id=\"BingWallpaper\"><a href=\"#BingWallpaper\" class=\"headerlink\" title=\"BingWallpaper\"></a>BingWallpaper</h3><p> bing壁纸使用每天可以更换壁纸而且壁纸质量比较好，不同每天看着一样的壁纸。</p>\n<h3 id=\"Redshift\"><a href=\"#Redshift\" class=\"headerlink\" title=\"Redshift\"></a>Redshift</h3><p>屏幕防蓝光工具，毕竟要天天看着电脑要保护眼睛。以前在笔记本上使用f.lux，但是在台式机上安装f.lux发现并不能调节屏幕蓝光，找到Redshift，发现还蛮好用的。</p>\n<h2 id=\"开发工具类\"><a href=\"#开发工具类\" class=\"headerlink\" title=\"开发工具类\"></a>开发工具类</h2><h3 id=\"eclipse\"><a href=\"#eclipse\" class=\"headerlink\" title=\"eclipse\"></a>eclipse</h3><p>eclipse作为Java集成开发环境中最好的的存在，当然要接着使用。</p>\n<h3 id=\"Atom\"><a href=\"#Atom\" class=\"headerlink\" title=\"Atom\"></a>Atom</h3><p>Github出品的文本编辑器，本人感觉比sublime好用多了，sublime在Ubuntu中最大的缺陷在于对中文支持实在不咋地，遂放弃sublime。Vim就不用说了，超级牛只是用不习惯。</p>\n<h3 id=\"Pycharm\"><a href=\"#Pycharm\" class=\"headerlink\" title=\"Pycharm\"></a>Pycharm</h3><p>尝试Pycharm写Python也比较爽，但是本人习惯使用Eclipse的界面风格，所以一般写Python都是使用Eclipse+PyDev的，偶尔也用一下Pycharm。</p>\n<h3 id=\"Code-Blocks\"><a href=\"#Code-Blocks\" class=\"headerlink\" title=\"Code Blocks\"></a>Code Blocks</h3><p>虽然Linux Shell已经提供了Vim+Gcc环境开发C，但是还是习惯集成的开发环境，就装了一个Code Blocks，反正C现在也一般不常用了，装着只是以备不时之需。</p>\n<h3 id=\"TexStudio\"><a href=\"#TexStudio\" class=\"headerlink\" title=\"TexStudio\"></a>TexStudio</h3><p>平常写论文少不了LeTex排版工具，本人一直觉得TexStudio+Texlive比Ctex好用多了，就一直用到现在。</p>\n<h3 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h3><p>至于数据库一直用开源的MySQL+MySQL Workbench，虽然现在已经被Oracle收购了，但是现在还能用。微软的SQLServer实在是太大了，本科学数据库的时候一直用SQLServer。</p>\n<h3 id=\"Gephi\"><a href=\"#Gephi\" class=\"headerlink\" title=\"Gephi\"></a>Gephi</h3><p>由于研究生方向是社团检测，Gephi作为复杂网络可视化中比较好用的工具就少不了它罗 。</p>\n<h3 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h3><p>以前在Windows上一直用小书匠，Ubuntu中也能使用小书匠但是感觉真的没有Typora好用。强烈推荐这一款Markdown编辑器。</p>\n<h2 id=\"系统工具类\"><a href=\"#系统工具类\" class=\"headerlink\" title=\"系统工具类\"></a>系统工具类</h2><h3 id=\"Google-Chrome\"><a href=\"#Google-Chrome\" class=\"headerlink\" title=\"Google Chrome\"></a>Google Chrome</h3><p>Google浏览器一直在用，我觉得这是最好用的浏览器，没有之一。。。。插件尤为强悍</p>\n<h3 id=\"Firefox\"><a href=\"#Firefox\" class=\"headerlink\" title=\"Firefox\"></a>Firefox</h3><p>在Google浏览器不能使用的时候偶尔用用Firefox</p>\n<h3 id=\"ShadowSocks-Qt5\"><a href=\"#ShadowSocks-Qt5\" class=\"headerlink\" title=\"ShadowSocks-Qt5\"></a>ShadowSocks-Qt5</h3><p>Ubuntu中常用的翻墙软件，当然首先是要有一个账号，并且还要在浏览器中设置代理。</p>\n<h2 id=\"新立得软件包管理器\"><a href=\"#新立得软件包管理器\" class=\"headerlink\" title=\"新立得软件包管理器\"></a>新立得软件包管理器</h2><p>平常用来删除一下不用的软件包。主要是Ubuntu的文件系统有点不熟悉，有时候命令行安装的包不知道安到哪去了。</p>\n<h3 id=\"Unity-Tweak-Tool-系统桌面管理工具\"><a href=\"#Unity-Tweak-Tool-系统桌面管理工具\" class=\"headerlink\" title=\"Unity Tweak Tool 系统桌面管理工具\"></a>Unity Tweak Tool 系统桌面管理工具</h3><p>添加包命令：sudo add-apt-repository ppa:freyja-dev/unity-tweak-tool-daily<br>更新包管理器：sudo apt-get update<br>安装命令：sudo apt-get install unity-tweak-tool<br>安装完成，但失败无法启用<br>参考：<a href=\"http://www.linuxidc.com/Linux/2013-02/79830.htm\" target=\"_blank\" rel=\"noopener\">http://www.linuxidc.com/Linux/2013-02/79830.htm</a><br>貌似后来通过软件中心安装成功，可以使用了</p>\n<h3 id=\"安装替换系统默认字体\"><a href=\"#安装替换系统默认字体\" class=\"headerlink\" title=\"安装替换系统默认字体\"></a>安装替换系统默认字体</h3><p>安装文泉字体，通过tweak替换<br>参考：<a href=\"http://www.linuxdiyf.com/linux/11653.html\" target=\"_blank\" rel=\"noopener\">http://www.linuxdiyf.com/linux/11653.html</a></p>\n<h3 id=\"安装Adobe-flash\"><a href=\"#安装Adobe-flash\" class=\"headerlink\" title=\"安装Adobe flash\"></a>安装Adobe flash</h3><p>安装命令：sudo apt-get install flashplugin-installer</p>\n<h3 id=\"安装压缩软件RAR\"><a href=\"#安装压缩软件RAR\" class=\"headerlink\" title=\"安装压缩软件RAR\"></a>安装压缩软件RAR</h3><p>安装命令：sudo apt-get install rar<br>提高电池的寿命并且减少过热<br>笔记本过热是一个普遍的问题，它不仅仅存在于ubuntu中，也存在与其他的操作系统中，过热会影响电池的寿命，从 ubuntu12.10开始，tupiter就是解决过热的最好的工具。可惜的是这个项目已经停止开发了，你可以使用TLP或者CPUFREQ来代替 jupiter,安装TLP通过使用下面的命令：<br>sudo add-apt-repository ppa:linrunner/tlp<br>sudo apt-get update<br>sudo apt-get install tlp tlp-rdw<br>sudo tlp start<br>使用TPL是不需要进行配置的。<br>参考：<a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/20509148</a><br>安装云盘Dropbox（需VPN）<br>sudo apt-get install nautilus-dropbox<br>sudo apt-get install libappindicator1<br>下载的是一个下载器，完成后可能需要VPN来下载Dropbox主程序。<br>启动器albert<br>sudo add-apt-repository ppa:nilarimogard/webupd8<br>sudo apt-get update<br>sudo apt-get install albert<br>安装完成后，在启动器里输入albert打开并设置热键（我这里设置的热键是`+Ctrl）<br>参考：<br><a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/20509148</a><br><a href=\"http://www.webupd8.org/2015/01/albert-fast-lightweight-quick-launcher.html\" target=\"_blank\" rel=\"noopener\">http://www.webupd8.org/2015/01/albert-fast-lightweight-quick-launcher.html</a></p>\n<h3 id=\"笔记本Zim-Desktop-Wiki\"><a href=\"#笔记本Zim-Desktop-Wiki\" class=\"headerlink\" title=\"笔记本Zim Desktop Wiki\"></a>笔记本Zim Desktop Wiki</h3><p>摘抄知乎：Zim的所有笔记都以文本格式存储，以文件夹方式管理；同时支持HTML、LaTeX、Markdown、rst等多种格式，可在模板中选择(虽然我没用过)；支持全文搜索、标签检索。默认是一种类似Markdown的wiki格式，支持列表、任务列表，可以插入图片、附件、LaTeX公式(需先安装latex相关软件)，插入的图片可单独指定一个附件目录，可输出为HTML、LaTeX、Markdown、rst。<br>安装命令：sudo apt-get install zim<br>参考：<a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">www.zhihu.com/question/20509148</a></p>\n<h3 id=\"思维导图-Xmind\"><a href=\"#思维导图-Xmind\" class=\"headerlink\" title=\"思维导图 Xmind\"></a>思维导图 Xmind</h3><p>下载安装包：<a href=\"http://www.xmind.net/download/linux/\" target=\"_blank\" rel=\"noopener\">http://www.xmind.net/download/linux/</a><br>安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb<br>安装失败，缺少依赖包，安装依赖包：sudo apt-get install -f<br>重新安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb</p>\n<h3 id=\"自动调节屏幕色温Redshift\"><a href=\"#自动调节屏幕色温Redshift\" class=\"headerlink\" title=\"自动调节屏幕色温Redshift\"></a>自动调节屏幕色温Redshift</h3><p>根据日出日落时间(设定经纬度)自动调节电脑屏幕的亮度、色彩(色温)，保护眼睛<br>没用之前我一直觉得这种东西有必要吗，一直在后台耗费系统资源？用过了之后，我才发现真的很有必要呀！开启软件时，眼睛是一种很柔和的感觉，关闭则是对比很明显的刺眼蓝光。这才发现我的搓本屏幕颜色严重偏蓝，而之前我笔记本的亮度也因为刺眼的蓝光调的过低了。<br>安装命令：sudo apt-get install redshift<br>启动命令：redshift<br>可以加到系统启动里面：vim /etc/rc.local<br>将启动命令添加进去，保存并推出<br>参考：<a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/20509148</a><br>最近，也找到一个win下的屏幕色温调节工具：flux</p>\n<h3 id=\"Linux下的完美帅气终端Guake\"><a href=\"#Linux下的完美帅气终端Guake\" class=\"headerlink\" title=\"Linux下的完美帅气终端Guake\"></a>Linux下的完美帅气终端Guake</h3><p>安装命令：sudo apt-get install guake<br>     常用快捷键<br>     调用：键盘F12<br>     新建终端选项卡：Ctrl+Shift+T<br>     关闭当前选项卡：Ctrl+Shift+W<br>     切换到当前选项卡右边：Ctrl+Page Down<br>     切换到当前选项卡左边：Ctrl+Page Up</p>\n<h3 id=\"浮动菜单\"><a href=\"#浮动菜单\" class=\"headerlink\" title=\"浮动菜单\"></a>浮动菜单</h3><p>下方的浮动图标工具栏：docky<br>安装方法：sudo apt-get install docky</p>\n<h3 id=\"便签Xpad\"><a href=\"#便签Xpad\" class=\"headerlink\" title=\"便签Xpad\"></a>便签Xpad</h3><p>不是和docky集成的便签<br>安装方法：sudo apt-get install xpad<br>参考：<a href=\"http://article.yeeyan.org/view/140496/124205/\" target=\"_blank\" rel=\"noopener\">http://article.yeeyan.org/view/140496/124205/</a></p>\n<h3 id=\"WPS\"><a href=\"#WPS\" class=\"headerlink\" title=\"WPS\"></a>WPS</h3><p>首先去下载：<a href=\"http://linux.wps.cn/\" target=\"_blank\" rel=\"noopener\">http://linux.wps.cn/</a><br>之后安装：sudo dpkg -i wps-office_10.1.0.5444~a20_amd64.deb</p>\n<h3 id=\"Pinta\"><a href=\"#Pinta\" class=\"headerlink\" title=\"Pinta\"></a>Pinta</h3><p>简单好用的图片编辑器，虽然Gimp非常强悍，但是操作觉得比较复杂。</p>\n<h3 id=\"Catfish\"><a href=\"#Catfish\" class=\"headerlink\" title=\"Catfish\"></a>Catfish</h3><p>文件搜索，有时文件太多而且不知道放在哪，这个工具可以帮你快速找到，系统自带的文件搜索也好用。</p>\n<h3 id=\"sougou-input-输入法\"><a href=\"#sougou-input-输入法\" class=\"headerlink\" title=\"sougou input 输入法\"></a>sougou input 输入法</h3><p>搜狗输入法，比系统自带的输入法好用多了。</p>\n<p>以后发现了什么好用的软件再更新博客。<br>之前安装的是搜狗拼音，这次安装16.04选择的是汉语各种中文，已经把拼音集成了。所以这次没有安装输入法。不过麻烦的就是去个我的文件夹，原本是cd Downloads的命令要改成cd 下载．<br>后来发现还是搜狗好用，比方说你要当前的时间，直接输入sj就会出现，但是其他的输入法比方说Ubuntu自带的就没有这个功能，好吧，装搜狗．<br>安装包下载地址：<a href=\"http://pinyin.sogou.com/linux/\" target=\"_blank\" rel=\"noopener\">http://pinyin.sogou.com/linux/</a><br>执行安装命令：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb<br>缺少依赖包，安装失败，安装依赖包：sudo apt-get install -f<br>依赖包安装完成，重新安装：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb<br>安装成功<br>在启动里直接搜索Fcitx Configuration，打开后在Input Method里删除除了Sougou拼音以外的其它中文输入法（可能略有延迟，Sougou拼音没出来），确保除了Sougou拼音外，只有一个Keyboard – English(US)，若没有这一项就在下方点击加号＂＋＂添加这一项．</p>\n<h2 id=\"开发工具类-1\"><a href=\"#开发工具类-1\" class=\"headerlink\" title=\"开发工具类\"></a>开发工具类</h2><h3 id=\"R-RStudio\"><a href=\"#R-RStudio\" class=\"headerlink\" title=\"R+RStudio\"></a>R+RStudio</h3><p>R语言作为统计学习中重要的编程语言。最近装着用着试试。。。可以也不太用的到。<br>系统工具</p>\n<h3 id=\"Remmina远程桌面\"><a href=\"#Remmina远程桌面\" class=\"headerlink\" title=\"Remmina远程桌面\"></a>Remmina远程桌面</h3><p>最近老师给了一台服务器用用，感觉还是蛮爽的，服务器是Windows Server系统，因此发现了这个比较好用的Linux-&gt;Windows远程工具。</p>\n<h3 id=\"VirtualBox虚拟机\"><a href=\"#VirtualBox虚拟机\" class=\"headerlink\" title=\"VirtualBox虚拟机\"></a>VirtualBox虚拟机</h3><p>最近需要做实验需要用到Windows和Kali，于是找了一个虚拟机软件。Linux下VirtualBox和VmWare都可以使用，但是本人觉得轻量级的VirtualBox还是好用一点。但是被其中的界面全屏折腾了一下，后来解决了。</p>\n<p>注意：在Linux下Win键就是Super键</p>\n<p>启动器</p>\n<p>Win(长按) 打开启动器，显示快捷键<br>Win + Tab 通过启动器切换应用程序<br>Win + 1到9 与点击启动器上的图标效果一样<br>Win + Shift + 1到9 在应用中打开一个新窗口<br>Win + T 打开垃圾桶<br>面板</p>\n<p>Win(轻触点击) 打开dash主页<br>Win + A 打开dash应用栏目<br>Win + F 打开dash文件栏目<br>Win + M 打开dash音乐栏目<br>Win + C 打开dash图片栏目<br>Win + V 打开dash视频栏目<br>Ctrl + Tab 在栏目或者标签间切换<br>切换中</p>\n<p>Alt + Tab 切换应用程序<br>Ctrl + Alt +Tab 切换所有工作区的应用程序<br>Alt + ` 切换当前运行的应用程序窗口<br>Alt + Q 关闭选中的应用程序或窗口<br>工作区</p>\n<p>Win + S 切换工作区<br>Ctrl + Alt +方向键 切换工作区<br>Ctrl + Shift + Alt + 方向键 移动当前窗口到另一个工作区<br>窗口</p>\n<p>Win + W 展开当前工作区的所有窗口<br>Shift + Win + W 展开所有工作区的窗口<br>Ctrl + Win + W 平展当前工作区中焦点应用的所有窗口<br>Shift + Ctrl + Win + W 平展当前焦点应用在所有工作区中的窗口<br>Ctrl + Win +D 最小化所有窗口(显示桌面）也可以用 Win + D<br> Ctrl + Win + 上 最大化当前窗口<br> Ctrl + Win + 下 还原或最小化当前窗口<br> Ctrl + Win + 左或右 半最大化当前窗口<br> Alt + F4 关闭当前窗口 或者 Ctrl + Q<br> Alt + 空格 打开窗口通用访问菜单<br> Alt + 鼠标左键拖拽 移动当前窗口<br> Alt + 鼠标中键拖拽 调整当前窗口大小<br> Ctrl + L 资源管理器中显示当前目录的路径<br> Ctrl + H 资源管理器中显示所有文件和文件夹（显示隐藏的文件夹）<br> Alt + Enter 显示所选文件或者文件夹的属性信息<br> Alt + Home 直接移到你的主目录<br> 其他</p>\n<p> Ctrl + Alt + T 打开终端<br> Ctrl + Q 退出当前程序<br> Alt + F1 + Enter 搜索计算机<br> Alt + F2 搜索计算机<br> Ctrl + Alt + L 锁屏，如果你想走开一会而不想让别人看到你的屏幕，相当于 Win + L<br> Ctrl + Alt + F1 切换到首个虚拟终端<br> Ctrl + Alt + F2(F3)(F4)(F5)(F6) 选择不同的虚拟终端<br>Ctrl + Alt + F7 切换到当前登录会话</p>\n","site":{"data":{}},"excerpt":"","more":"<p>下面分别介绍一下所用的软件：</p>\n<h2 id=\"桌面美化类\"><a href=\"#桌面美化类\" class=\"headerlink\" title=\"桌面美化类\"></a>桌面美化类</h2><p>至于桌面美化只是简单的做了一些处理，可以参考博客ubuntu16.04主题美化和软件推荐,这里不再赘述，毕竟Ubuntu原始桌面实在是不好看。至于Docker发现装了作用不大而且使屏幕复杂多了就不再用了。</p>\n<h3 id=\"BingWallpaper\"><a href=\"#BingWallpaper\" class=\"headerlink\" title=\"BingWallpaper\"></a>BingWallpaper</h3><p> bing壁纸使用每天可以更换壁纸而且壁纸质量比较好，不同每天看着一样的壁纸。</p>\n<h3 id=\"Redshift\"><a href=\"#Redshift\" class=\"headerlink\" title=\"Redshift\"></a>Redshift</h3><p>屏幕防蓝光工具，毕竟要天天看着电脑要保护眼睛。以前在笔记本上使用f.lux，但是在台式机上安装f.lux发现并不能调节屏幕蓝光，找到Redshift，发现还蛮好用的。</p>\n<h2 id=\"开发工具类\"><a href=\"#开发工具类\" class=\"headerlink\" title=\"开发工具类\"></a>开发工具类</h2><h3 id=\"eclipse\"><a href=\"#eclipse\" class=\"headerlink\" title=\"eclipse\"></a>eclipse</h3><p>eclipse作为Java集成开发环境中最好的的存在，当然要接着使用。</p>\n<h3 id=\"Atom\"><a href=\"#Atom\" class=\"headerlink\" title=\"Atom\"></a>Atom</h3><p>Github出品的文本编辑器，本人感觉比sublime好用多了，sublime在Ubuntu中最大的缺陷在于对中文支持实在不咋地，遂放弃sublime。Vim就不用说了，超级牛只是用不习惯。</p>\n<h3 id=\"Pycharm\"><a href=\"#Pycharm\" class=\"headerlink\" title=\"Pycharm\"></a>Pycharm</h3><p>尝试Pycharm写Python也比较爽，但是本人习惯使用Eclipse的界面风格，所以一般写Python都是使用Eclipse+PyDev的，偶尔也用一下Pycharm。</p>\n<h3 id=\"Code-Blocks\"><a href=\"#Code-Blocks\" class=\"headerlink\" title=\"Code Blocks\"></a>Code Blocks</h3><p>虽然Linux Shell已经提供了Vim+Gcc环境开发C，但是还是习惯集成的开发环境，就装了一个Code Blocks，反正C现在也一般不常用了，装着只是以备不时之需。</p>\n<h3 id=\"TexStudio\"><a href=\"#TexStudio\" class=\"headerlink\" title=\"TexStudio\"></a>TexStudio</h3><p>平常写论文少不了LeTex排版工具，本人一直觉得TexStudio+Texlive比Ctex好用多了，就一直用到现在。</p>\n<h3 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h3><p>至于数据库一直用开源的MySQL+MySQL Workbench，虽然现在已经被Oracle收购了，但是现在还能用。微软的SQLServer实在是太大了，本科学数据库的时候一直用SQLServer。</p>\n<h3 id=\"Gephi\"><a href=\"#Gephi\" class=\"headerlink\" title=\"Gephi\"></a>Gephi</h3><p>由于研究生方向是社团检测，Gephi作为复杂网络可视化中比较好用的工具就少不了它罗 。</p>\n<h3 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h3><p>以前在Windows上一直用小书匠，Ubuntu中也能使用小书匠但是感觉真的没有Typora好用。强烈推荐这一款Markdown编辑器。</p>\n<h2 id=\"系统工具类\"><a href=\"#系统工具类\" class=\"headerlink\" title=\"系统工具类\"></a>系统工具类</h2><h3 id=\"Google-Chrome\"><a href=\"#Google-Chrome\" class=\"headerlink\" title=\"Google Chrome\"></a>Google Chrome</h3><p>Google浏览器一直在用，我觉得这是最好用的浏览器，没有之一。。。。插件尤为强悍</p>\n<h3 id=\"Firefox\"><a href=\"#Firefox\" class=\"headerlink\" title=\"Firefox\"></a>Firefox</h3><p>在Google浏览器不能使用的时候偶尔用用Firefox</p>\n<h3 id=\"ShadowSocks-Qt5\"><a href=\"#ShadowSocks-Qt5\" class=\"headerlink\" title=\"ShadowSocks-Qt5\"></a>ShadowSocks-Qt5</h3><p>Ubuntu中常用的翻墙软件，当然首先是要有一个账号，并且还要在浏览器中设置代理。</p>\n<h2 id=\"新立得软件包管理器\"><a href=\"#新立得软件包管理器\" class=\"headerlink\" title=\"新立得软件包管理器\"></a>新立得软件包管理器</h2><p>平常用来删除一下不用的软件包。主要是Ubuntu的文件系统有点不熟悉，有时候命令行安装的包不知道安到哪去了。</p>\n<h3 id=\"Unity-Tweak-Tool-系统桌面管理工具\"><a href=\"#Unity-Tweak-Tool-系统桌面管理工具\" class=\"headerlink\" title=\"Unity Tweak Tool 系统桌面管理工具\"></a>Unity Tweak Tool 系统桌面管理工具</h3><p>添加包命令：sudo add-apt-repository ppa:freyja-dev/unity-tweak-tool-daily<br>更新包管理器：sudo apt-get update<br>安装命令：sudo apt-get install unity-tweak-tool<br>安装完成，但失败无法启用<br>参考：<a href=\"http://www.linuxidc.com/Linux/2013-02/79830.htm\" target=\"_blank\" rel=\"noopener\">http://www.linuxidc.com/Linux/2013-02/79830.htm</a><br>貌似后来通过软件中心安装成功，可以使用了</p>\n<h3 id=\"安装替换系统默认字体\"><a href=\"#安装替换系统默认字体\" class=\"headerlink\" title=\"安装替换系统默认字体\"></a>安装替换系统默认字体</h3><p>安装文泉字体，通过tweak替换<br>参考：<a href=\"http://www.linuxdiyf.com/linux/11653.html\" target=\"_blank\" rel=\"noopener\">http://www.linuxdiyf.com/linux/11653.html</a></p>\n<h3 id=\"安装Adobe-flash\"><a href=\"#安装Adobe-flash\" class=\"headerlink\" title=\"安装Adobe flash\"></a>安装Adobe flash</h3><p>安装命令：sudo apt-get install flashplugin-installer</p>\n<h3 id=\"安装压缩软件RAR\"><a href=\"#安装压缩软件RAR\" class=\"headerlink\" title=\"安装压缩软件RAR\"></a>安装压缩软件RAR</h3><p>安装命令：sudo apt-get install rar<br>提高电池的寿命并且减少过热<br>笔记本过热是一个普遍的问题，它不仅仅存在于ubuntu中，也存在与其他的操作系统中，过热会影响电池的寿命，从 ubuntu12.10开始，tupiter就是解决过热的最好的工具。可惜的是这个项目已经停止开发了，你可以使用TLP或者CPUFREQ来代替 jupiter,安装TLP通过使用下面的命令：<br>sudo add-apt-repository ppa:linrunner/tlp<br>sudo apt-get update<br>sudo apt-get install tlp tlp-rdw<br>sudo tlp start<br>使用TPL是不需要进行配置的。<br>参考：<a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/20509148</a><br>安装云盘Dropbox（需VPN）<br>sudo apt-get install nautilus-dropbox<br>sudo apt-get install libappindicator1<br>下载的是一个下载器，完成后可能需要VPN来下载Dropbox主程序。<br>启动器albert<br>sudo add-apt-repository ppa:nilarimogard/webupd8<br>sudo apt-get update<br>sudo apt-get install albert<br>安装完成后，在启动器里输入albert打开并设置热键（我这里设置的热键是`+Ctrl）<br>参考：<br><a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/20509148</a><br><a href=\"http://www.webupd8.org/2015/01/albert-fast-lightweight-quick-launcher.html\" target=\"_blank\" rel=\"noopener\">http://www.webupd8.org/2015/01/albert-fast-lightweight-quick-launcher.html</a></p>\n<h3 id=\"笔记本Zim-Desktop-Wiki\"><a href=\"#笔记本Zim-Desktop-Wiki\" class=\"headerlink\" title=\"笔记本Zim Desktop Wiki\"></a>笔记本Zim Desktop Wiki</h3><p>摘抄知乎：Zim的所有笔记都以文本格式存储，以文件夹方式管理；同时支持HTML、LaTeX、Markdown、rst等多种格式，可在模板中选择(虽然我没用过)；支持全文搜索、标签检索。默认是一种类似Markdown的wiki格式，支持列表、任务列表，可以插入图片、附件、LaTeX公式(需先安装latex相关软件)，插入的图片可单独指定一个附件目录，可输出为HTML、LaTeX、Markdown、rst。<br>安装命令：sudo apt-get install zim<br>参考：<a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">www.zhihu.com/question/20509148</a></p>\n<h3 id=\"思维导图-Xmind\"><a href=\"#思维导图-Xmind\" class=\"headerlink\" title=\"思维导图 Xmind\"></a>思维导图 Xmind</h3><p>下载安装包：<a href=\"http://www.xmind.net/download/linux/\" target=\"_blank\" rel=\"noopener\">http://www.xmind.net/download/linux/</a><br>安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb<br>安装失败，缺少依赖包，安装依赖包：sudo apt-get install -f<br>重新安装：sudo dpkg -i xmind-7-update1-linux_amd64.deb</p>\n<h3 id=\"自动调节屏幕色温Redshift\"><a href=\"#自动调节屏幕色温Redshift\" class=\"headerlink\" title=\"自动调节屏幕色温Redshift\"></a>自动调节屏幕色温Redshift</h3><p>根据日出日落时间(设定经纬度)自动调节电脑屏幕的亮度、色彩(色温)，保护眼睛<br>没用之前我一直觉得这种东西有必要吗，一直在后台耗费系统资源？用过了之后，我才发现真的很有必要呀！开启软件时，眼睛是一种很柔和的感觉，关闭则是对比很明显的刺眼蓝光。这才发现我的搓本屏幕颜色严重偏蓝，而之前我笔记本的亮度也因为刺眼的蓝光调的过低了。<br>安装命令：sudo apt-get install redshift<br>启动命令：redshift<br>可以加到系统启动里面：vim /etc/rc.local<br>将启动命令添加进去，保存并推出<br>参考：<a href=\"http://www.zhihu.com/question/20509148\" target=\"_blank\" rel=\"noopener\">http://www.zhihu.com/question/20509148</a><br>最近，也找到一个win下的屏幕色温调节工具：flux</p>\n<h3 id=\"Linux下的完美帅气终端Guake\"><a href=\"#Linux下的完美帅气终端Guake\" class=\"headerlink\" title=\"Linux下的完美帅气终端Guake\"></a>Linux下的完美帅气终端Guake</h3><p>安装命令：sudo apt-get install guake<br>     常用快捷键<br>     调用：键盘F12<br>     新建终端选项卡：Ctrl+Shift+T<br>     关闭当前选项卡：Ctrl+Shift+W<br>     切换到当前选项卡右边：Ctrl+Page Down<br>     切换到当前选项卡左边：Ctrl+Page Up</p>\n<h3 id=\"浮动菜单\"><a href=\"#浮动菜单\" class=\"headerlink\" title=\"浮动菜单\"></a>浮动菜单</h3><p>下方的浮动图标工具栏：docky<br>安装方法：sudo apt-get install docky</p>\n<h3 id=\"便签Xpad\"><a href=\"#便签Xpad\" class=\"headerlink\" title=\"便签Xpad\"></a>便签Xpad</h3><p>不是和docky集成的便签<br>安装方法：sudo apt-get install xpad<br>参考：<a href=\"http://article.yeeyan.org/view/140496/124205/\" target=\"_blank\" rel=\"noopener\">http://article.yeeyan.org/view/140496/124205/</a></p>\n<h3 id=\"WPS\"><a href=\"#WPS\" class=\"headerlink\" title=\"WPS\"></a>WPS</h3><p>首先去下载：<a href=\"http://linux.wps.cn/\" target=\"_blank\" rel=\"noopener\">http://linux.wps.cn/</a><br>之后安装：sudo dpkg -i wps-office_10.1.0.5444~a20_amd64.deb</p>\n<h3 id=\"Pinta\"><a href=\"#Pinta\" class=\"headerlink\" title=\"Pinta\"></a>Pinta</h3><p>简单好用的图片编辑器，虽然Gimp非常强悍，但是操作觉得比较复杂。</p>\n<h3 id=\"Catfish\"><a href=\"#Catfish\" class=\"headerlink\" title=\"Catfish\"></a>Catfish</h3><p>文件搜索，有时文件太多而且不知道放在哪，这个工具可以帮你快速找到，系统自带的文件搜索也好用。</p>\n<h3 id=\"sougou-input-输入法\"><a href=\"#sougou-input-输入法\" class=\"headerlink\" title=\"sougou input 输入法\"></a>sougou input 输入法</h3><p>搜狗输入法，比系统自带的输入法好用多了。</p>\n<p>以后发现了什么好用的软件再更新博客。<br>之前安装的是搜狗拼音，这次安装16.04选择的是汉语各种中文，已经把拼音集成了。所以这次没有安装输入法。不过麻烦的就是去个我的文件夹，原本是cd Downloads的命令要改成cd 下载．<br>后来发现还是搜狗好用，比方说你要当前的时间，直接输入sj就会出现，但是其他的输入法比方说Ubuntu自带的就没有这个功能，好吧，装搜狗．<br>安装包下载地址：<a href=\"http://pinyin.sogou.com/linux/\" target=\"_blank\" rel=\"noopener\">http://pinyin.sogou.com/linux/</a><br>执行安装命令：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb<br>缺少依赖包，安装失败，安装依赖包：sudo apt-get install -f<br>依赖包安装完成，重新安装：sudo dpkg -i sogoupinyin_2.0.0.0072_amd64.deb<br>安装成功<br>在启动里直接搜索Fcitx Configuration，打开后在Input Method里删除除了Sougou拼音以外的其它中文输入法（可能略有延迟，Sougou拼音没出来），确保除了Sougou拼音外，只有一个Keyboard – English(US)，若没有这一项就在下方点击加号＂＋＂添加这一项．</p>\n<h2 id=\"开发工具类-1\"><a href=\"#开发工具类-1\" class=\"headerlink\" title=\"开发工具类\"></a>开发工具类</h2><h3 id=\"R-RStudio\"><a href=\"#R-RStudio\" class=\"headerlink\" title=\"R+RStudio\"></a>R+RStudio</h3><p>R语言作为统计学习中重要的编程语言。最近装着用着试试。。。可以也不太用的到。<br>系统工具</p>\n<h3 id=\"Remmina远程桌面\"><a href=\"#Remmina远程桌面\" class=\"headerlink\" title=\"Remmina远程桌面\"></a>Remmina远程桌面</h3><p>最近老师给了一台服务器用用，感觉还是蛮爽的，服务器是Windows Server系统，因此发现了这个比较好用的Linux-&gt;Windows远程工具。</p>\n<h3 id=\"VirtualBox虚拟机\"><a href=\"#VirtualBox虚拟机\" class=\"headerlink\" title=\"VirtualBox虚拟机\"></a>VirtualBox虚拟机</h3><p>最近需要做实验需要用到Windows和Kali，于是找了一个虚拟机软件。Linux下VirtualBox和VmWare都可以使用，但是本人觉得轻量级的VirtualBox还是好用一点。但是被其中的界面全屏折腾了一下，后来解决了。</p>\n<p>注意：在Linux下Win键就是Super键</p>\n<p>启动器</p>\n<p>Win(长按) 打开启动器，显示快捷键<br>Win + Tab 通过启动器切换应用程序<br>Win + 1到9 与点击启动器上的图标效果一样<br>Win + Shift + 1到9 在应用中打开一个新窗口<br>Win + T 打开垃圾桶<br>面板</p>\n<p>Win(轻触点击) 打开dash主页<br>Win + A 打开dash应用栏目<br>Win + F 打开dash文件栏目<br>Win + M 打开dash音乐栏目<br>Win + C 打开dash图片栏目<br>Win + V 打开dash视频栏目<br>Ctrl + Tab 在栏目或者标签间切换<br>切换中</p>\n<p>Alt + Tab 切换应用程序<br>Ctrl + Alt +Tab 切换所有工作区的应用程序<br>Alt + ` 切换当前运行的应用程序窗口<br>Alt + Q 关闭选中的应用程序或窗口<br>工作区</p>\n<p>Win + S 切换工作区<br>Ctrl + Alt +方向键 切换工作区<br>Ctrl + Shift + Alt + 方向键 移动当前窗口到另一个工作区<br>窗口</p>\n<p>Win + W 展开当前工作区的所有窗口<br>Shift + Win + W 展开所有工作区的窗口<br>Ctrl + Win + W 平展当前工作区中焦点应用的所有窗口<br>Shift + Ctrl + Win + W 平展当前焦点应用在所有工作区中的窗口<br>Ctrl + Win +D 最小化所有窗口(显示桌面）也可以用 Win + D<br> Ctrl + Win + 上 最大化当前窗口<br> Ctrl + Win + 下 还原或最小化当前窗口<br> Ctrl + Win + 左或右 半最大化当前窗口<br> Alt + F4 关闭当前窗口 或者 Ctrl + Q<br> Alt + 空格 打开窗口通用访问菜单<br> Alt + 鼠标左键拖拽 移动当前窗口<br> Alt + 鼠标中键拖拽 调整当前窗口大小<br> Ctrl + L 资源管理器中显示当前目录的路径<br> Ctrl + H 资源管理器中显示所有文件和文件夹（显示隐藏的文件夹）<br> Alt + Enter 显示所选文件或者文件夹的属性信息<br> Alt + Home 直接移到你的主目录<br> 其他</p>\n<p> Ctrl + Alt + T 打开终端<br> Ctrl + Q 退出当前程序<br> Alt + F1 + Enter 搜索计算机<br> Alt + F2 搜索计算机<br> Ctrl + Alt + L 锁屏，如果你想走开一会而不想让别人看到你的屏幕，相当于 Win + L<br> Ctrl + Alt + F1 切换到首个虚拟终端<br> Ctrl + Alt + F2(F3)(F4)(F5)(F6) 选择不同的虚拟终端<br>Ctrl + Alt + F7 切换到当前登录会话</p>\n"},{"title":"UNIX 编辑艺术 读书笔记","date":"2017-03-16T10:33:51.000Z","_content":"V7版本手册  网络地址  http://plan9.bell-labs.com/7thEdMan/index.html\n谷歌ip    216.58.200.238 \n谷歌ip    37.61.54.158 \n谷歌ip    69.171.245.32\n谷歌ip    69.171.245.32\n","source":"_posts/unix_note_20170316.md","raw":"---\ntitle: UNIX 编辑艺术 读书笔记 \ndate: 2017-03-16 18:33:51\ntags:\n---\nV7版本手册  网络地址  http://plan9.bell-labs.com/7thEdMan/index.html\n谷歌ip    216.58.200.238 \n谷歌ip    37.61.54.158 \n谷歌ip    69.171.245.32\n谷歌ip    69.171.245.32\n","slug":"unix_note_20170316","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm900152oi8jykr1ix4","content":"<p>V7版本手册  网络地址  <a href=\"http://plan9.bell-labs.com/7thEdMan/index.html\" target=\"_blank\" rel=\"noopener\">http://plan9.bell-labs.com/7thEdMan/index.html</a><br>谷歌ip    216.58.200.238<br>谷歌ip    37.61.54.158<br>谷歌ip    69.171.245.32<br>谷歌ip    69.171.245.32</p>\n","site":{"data":{}},"excerpt":"","more":"<p>V7版本手册  网络地址  <a href=\"http://plan9.bell-labs.com/7thEdMan/index.html\" target=\"_blank\" rel=\"noopener\">http://plan9.bell-labs.com/7thEdMan/index.html</a><br>谷歌ip    216.58.200.238<br>谷歌ip    37.61.54.158<br>谷歌ip    69.171.245.32<br>谷歌ip    69.171.245.32</p>\n"},{"title":"vue","date":"2017-12-05T10:28:08.000Z","_content":"","source":"_posts/vue.md","raw":"---\ntitle: vue\ndate: 2017-12-05 18:28:08\ntags:\n---\n","slug":"vue","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zm900162oi8ubsggmlf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"w3c标准学习","date":"2018-01-11T03:12:04.000Z","_content":"\nA list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at https://www.w3.org/TR/.\n\n| 名称 | 网址 | 描述 | 链接 |\n|:-: | :-: | :-: | :-: |\n| w3c| https://www.w3.org/ | w3c官网 | [链接](https://www.w3.org/) |\n| whatwg | https://whatwg.org/ | whatwg官网 | [链接](https://whatwg.org/) |\n| webdesign |https://www.w3.org/standards/webdesign/ | w3c标准web设计相关标准 | [链接](https://www.w3.org/standards/webdesign/) |\n| html52 | https://www.w3.org/TR/html52/ | html 5.2 标准文档 | [链接](https://www.w3.org/TR/html52/) |\n| ui events | https://www.w3.org/TR/DOM-Level-3-Events/  | ui events 标准文档 | [链接](https://www.w3.org/TR/DOM-Level-3-Events/) |\n| css标准 | https://www.w3.org/Style/CSS/ | w3c的css标准 | [链接](https://www.w3.org/Style/CSS/) |\n| w3c所有的标准 | https://www.w3.org/TR/ | w3c所有的 标准文档和草稿 | [链接](https://www.w3.org/TR/) |\n| RFC文档目录 | http://man.chinaunix.net/develop/rfc/default.htm |RFC文档目录 | [链接](http://man.chinaunix.net/develop/rfc/default.htm) |\n| RFC 文档 | https://www.rfc-editor.org/ | RFC文档 | [链接](https://www.rfc-editor.org/) |\n","source":"_posts/w3c-tips.md","raw":"---\ntitle: w3c标准学习\ndate: 2018-01-11 11:12:04\ntags:\n---\n\nA list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at https://www.w3.org/TR/.\n\n| 名称 | 网址 | 描述 | 链接 |\n|:-: | :-: | :-: | :-: |\n| w3c| https://www.w3.org/ | w3c官网 | [链接](https://www.w3.org/) |\n| whatwg | https://whatwg.org/ | whatwg官网 | [链接](https://whatwg.org/) |\n| webdesign |https://www.w3.org/standards/webdesign/ | w3c标准web设计相关标准 | [链接](https://www.w3.org/standards/webdesign/) |\n| html52 | https://www.w3.org/TR/html52/ | html 5.2 标准文档 | [链接](https://www.w3.org/TR/html52/) |\n| ui events | https://www.w3.org/TR/DOM-Level-3-Events/  | ui events 标准文档 | [链接](https://www.w3.org/TR/DOM-Level-3-Events/) |\n| css标准 | https://www.w3.org/Style/CSS/ | w3c的css标准 | [链接](https://www.w3.org/Style/CSS/) |\n| w3c所有的标准 | https://www.w3.org/TR/ | w3c所有的 标准文档和草稿 | [链接](https://www.w3.org/TR/) |\n| RFC文档目录 | http://man.chinaunix.net/develop/rfc/default.htm |RFC文档目录 | [链接](http://man.chinaunix.net/develop/rfc/default.htm) |\n| RFC 文档 | https://www.rfc-editor.org/ | RFC文档 | [链接](https://www.rfc-editor.org/) |\n","slug":"w3c-tips","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zma00172oi8w176myoo","content":"<p>A list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at <a href=\"https://www.w3.org/TR/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/</a>.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">网址</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">链接</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">w3c</td>\n<td align=\"center\"><a href=\"https://www.w3.org/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/</a></td>\n<td align=\"center\">w3c官网</td>\n<td align=\"center\"><a href=\"https://www.w3.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">whatwg</td>\n<td align=\"center\"><a href=\"https://whatwg.org/\" target=\"_blank\" rel=\"noopener\">https://whatwg.org/</a></td>\n<td align=\"center\">whatwg官网</td>\n<td align=\"center\"><a href=\"https://whatwg.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">webdesign</td>\n<td align=\"center\"><a href=\"https://www.w3.org/standards/webdesign/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/standards/webdesign/</a></td>\n<td align=\"center\">w3c标准web设计相关标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/standards/webdesign/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">html52</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/html52/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/html52/</a></td>\n<td align=\"center\">html 5.2 标准文档</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/html52/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">ui events</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/DOM-Level-3-Events/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/DOM-Level-3-Events/</a></td>\n<td align=\"center\">ui events 标准文档</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/DOM-Level-3-Events/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/Style/CSS/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/Style/CSS/</a></td>\n<td align=\"center\">w3c的css标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/Style/CSS/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">w3c所有的标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/</a></td>\n<td align=\"center\">w3c所有的 标准文档和草稿</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">RFC文档目录</td>\n<td align=\"center\"><a href=\"http://man.chinaunix.net/develop/rfc/default.htm\" target=\"_blank\" rel=\"noopener\">http://man.chinaunix.net/develop/rfc/default.htm</a></td>\n<td align=\"center\">RFC文档目录</td>\n<td align=\"center\"><a href=\"http://man.chinaunix.net/develop/rfc/default.htm\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">RFC 文档</td>\n<td align=\"center\"><a href=\"https://www.rfc-editor.org/\" target=\"_blank\" rel=\"noopener\">https://www.rfc-editor.org/</a></td>\n<td align=\"center\">RFC文档</td>\n<td align=\"center\"><a href=\"https://www.rfc-editor.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"","more":"<p>A list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at <a href=\"https://www.w3.org/TR/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/</a>.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">网址</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">链接</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">w3c</td>\n<td align=\"center\"><a href=\"https://www.w3.org/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/</a></td>\n<td align=\"center\">w3c官网</td>\n<td align=\"center\"><a href=\"https://www.w3.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">whatwg</td>\n<td align=\"center\"><a href=\"https://whatwg.org/\" target=\"_blank\" rel=\"noopener\">https://whatwg.org/</a></td>\n<td align=\"center\">whatwg官网</td>\n<td align=\"center\"><a href=\"https://whatwg.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">webdesign</td>\n<td align=\"center\"><a href=\"https://www.w3.org/standards/webdesign/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/standards/webdesign/</a></td>\n<td align=\"center\">w3c标准web设计相关标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/standards/webdesign/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">html52</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/html52/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/html52/</a></td>\n<td align=\"center\">html 5.2 标准文档</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/html52/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">ui events</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/DOM-Level-3-Events/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/DOM-Level-3-Events/</a></td>\n<td align=\"center\">ui events 标准文档</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/DOM-Level-3-Events/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">css标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/Style/CSS/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/Style/CSS/</a></td>\n<td align=\"center\">w3c的css标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/Style/CSS/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">w3c所有的标准</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/TR/</a></td>\n<td align=\"center\">w3c所有的 标准文档和草稿</td>\n<td align=\"center\"><a href=\"https://www.w3.org/TR/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">RFC文档目录</td>\n<td align=\"center\"><a href=\"http://man.chinaunix.net/develop/rfc/default.htm\" target=\"_blank\" rel=\"noopener\">http://man.chinaunix.net/develop/rfc/default.htm</a></td>\n<td align=\"center\">RFC文档目录</td>\n<td align=\"center\"><a href=\"http://man.chinaunix.net/develop/rfc/default.htm\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n<tr>\n<td align=\"center\">RFC 文档</td>\n<td align=\"center\"><a href=\"https://www.rfc-editor.org/\" target=\"_blank\" rel=\"noopener\">https://www.rfc-editor.org/</a></td>\n<td align=\"center\">RFC文档</td>\n<td align=\"center\"><a href=\"https://www.rfc-editor.org/\" target=\"_blank\" rel=\"noopener\">链接</a></td>\n</tr>\n</tbody></table>\n"},{"title":"网站性能提升","date":"2017-11-25T02:28:20.000Z","_content":"\n前言\n一个成熟的大型网站（如淘宝、天猫、腾讯等）的系统架构并不是一开始设计时就具备完整的高性能、高可用、高伸缩等特性的，它是随着用户量的增加，业务功能的扩展逐渐演变完善的，在这个过程中，开发模式、技术架构、设计思想也发生了很大的变化，就连技术人员也从几个人发展到一个部门甚至一条产品线。所以成熟的系统架构是随着业务的扩展而逐步完善的，并不是一蹴而就；不同业务特征的系统，会有各自的侧重点，例如：淘宝，要解决海量的商品信息的搜索、下单、支付，例如腾讯，要解决数亿用户的实时消息传输，百度它要处理海量的搜索请求，他们都有各自的业务特性，系统架构也有所不同。尽管如此我们也可以从这些不同的网站背景下，找出其中共用优化的技术，这些优化技术和手段广泛运用在大型网站系统的架构中，下面让我们来认识这些优化性能的技术和手段。\n\n###  数据应用文件分离\n    最开始的网站架构\n    最初业务量不大，访问量小，此时的架构，应用程序、数据库、文件都部署在一台服务器上，有些甚至仅仅是租用主机空间 \n    将应用程序、数据库、文件各自部署在独立的服务器上，并且根据服务器的用途配置不同的硬件，达到最佳的性能效果。\n\n### 使用缓存技术\n    本地缓存\n    2.1 本地缓存\n    本地缓存，顾名思义是将数据缓存在应用服务器本地，可以存在内存中，也可以存在文件，组件。本地缓存的特点是速度快，但因为本地空间有限所以缓存数据量也有限。OSCache就是常用的本地缓存。 \n    分布式缓存\n    分布式缓存的特点是，可以缓存海量的数据，并且扩展非常容易，在门户类网站中常常被使用，速度按理没有本地缓存快，常用的分布式缓存是Memcached、Redis。 \n    反向代理\n    部署在网站的机房，当用户请求达到时首先访问反向代理服务器，反向代理服务器将缓存的数据返回给用户，如果没有缓存数据才会继续访问应用服务器获取，这样做减少了获取数据的成本。反向代理有Squid，Nginx。 \n    CDN\n    假设我们的服务器都部署在杭州的机房，对于浙江的用户来说访问是较快的，而对于北京的用户访问是较慢的，这是由于浙江和北京分别属于电信和联通的不同发达地区，北京用户访问需要通过互联路由器经过较长的路径才能访问到杭州的服务器，返回路径也一样，所以数据传输时间比较长。对于这种情况，常常使用CDN解决，CDN将数据内容缓存到运营商的机房，用户访问时先从最近的运营商获取数据，这样大大减少了网络访问的路径。比较专业的CDN运营商有蓝汛、网宿。\n\n### 服务器集群＋　负载均衡\n    应用服务器作为网站的入口，会承担大量的请求，我们往往通过应用服务器集群来分担请求数。\n    应用服务器前面部署负载均衡服务器调度用户请求，根据分发策略将请求分发到多个应用服务器节点。 \n    常用的负载均衡技术硬件的有F5，价格比较贵一般都在15W以上。\n        软件的有LVS、Nginx、HAProxy。LVS是四层（传输层）负载均衡，根据目标地址和端口选择内部服务器，Nginx和HAProxy是七层（应用层）负载均衡，可以根据报文内容选择内部服务器，因此LVS分发路径优于Nginx 和HAProxy，性能要高些，而Nginx和HAProxy则更具配置性，如可以用来做动静分离（根据请求报文特征，选择静态资源服务器还是应用服务器）。\n### 数据库优化\n    数据库读写分离和分库分表\n    4.1 读写分离和分库分表\n    随着用户量的增加，数据库成为最大的瓶颈，改善数据库性能常用的手段是进行读写分离以及分库分表，读写分离顾名思义就是将数据库分为读库和写库，通过主备功能实现数据同步。分库分表则分为水平切分和垂直切分，水平切分则是对一个数据库特大的表进行拆分，例如用户表。垂直切分则是根据业务的不同来切分，如用户业务、商品业务相关的表放在不同的数据库中。 \n    使用NoSQL和搜索引擎\n    4.2 使用NoSql数据库和搜索引擎\n    对于海量数据的查询和分析，我们使用nosql数据库加上搜索引擎可以达到更好的性能。并不是所有的数据都要放在关系型数据中。常用的NOSQL有mongodb、hbase、redis，搜索引擎有lucene、solr、elasticsearch。 \n### 业务拆分　微服务...\n    随着业务的扩展，应用程序变得非常臃肿，这时我们需要将应用程序进行业务拆分，如百度分为新闻、网页、图片等业务。每个业务应用负责相对独立的业务运作。业务之间通过消息进行通信或者共享数据库来实现。 \n### 分布式系统\n    分布式文件系统\n    6.1 分布式文件系统\n    用户一天天增加，业务量越来越大，产生的文件越来越多，单台的文件服务器已经不能满足需求，这时就需要分布式文件系统的支撑。常用的分布式文件系统有GFS、HDFS、TFS。\n    GFS（Google File System）可以给大量的用户提供总体性能较高的服务\n    • 适合部署在廉价的普通硬件上\n    • 提供容错功能\n\n    HDFS（Hadoop Distributed File System）能提供高吞吐量的数据访问，非常适合大规模数据集上的应用\n    • 运行在通用硬件(commodityhardware)\n    • 高度容错\n    • 适合部署在廉价的机器上\n\n    TFS（Taobao Flies System）主要针对海量的非结构化数据，提供高可靠和高并发的存储访问\n    • 高可扩展、高可用、高性能\n    • 面向互联网服务\n    • 适合海量小文件存储\n\n    分布式服务\n    6.2 分布式服务\n    各个业务应用都会使用到一些基本的业务服务，例如用户服务、订单服务、支付服务、安全服务，这些服务是支撑各业务应用的基本要素。我们将这些服务抽取出来利用分部式服务框架搭建分布式服务。阿里的Dubbo是一个不错的选择。\n## 总结\n    大型网站的架构是根据业务需求不断完善的，根据不同的业务特征会做特定的设计和考虑，本文只是讲述一个常规大型网站会涉及的一些优化技术和手段。\n\n[转载原文链接](http://geek.csdn.net/news/detail/245449)\n[转载原文链接](http://www.cnblogs.com/leefreeman/p/3993449.html)\n","source":"_posts/web-performance-improvement.md","raw":"---\ntitle: 网站性能提升\ndate: 2017-11-25 10:28:20\ntags:\n---\n\n前言\n一个成熟的大型网站（如淘宝、天猫、腾讯等）的系统架构并不是一开始设计时就具备完整的高性能、高可用、高伸缩等特性的，它是随着用户量的增加，业务功能的扩展逐渐演变完善的，在这个过程中，开发模式、技术架构、设计思想也发生了很大的变化，就连技术人员也从几个人发展到一个部门甚至一条产品线。所以成熟的系统架构是随着业务的扩展而逐步完善的，并不是一蹴而就；不同业务特征的系统，会有各自的侧重点，例如：淘宝，要解决海量的商品信息的搜索、下单、支付，例如腾讯，要解决数亿用户的实时消息传输，百度它要处理海量的搜索请求，他们都有各自的业务特性，系统架构也有所不同。尽管如此我们也可以从这些不同的网站背景下，找出其中共用优化的技术，这些优化技术和手段广泛运用在大型网站系统的架构中，下面让我们来认识这些优化性能的技术和手段。\n\n###  数据应用文件分离\n    最开始的网站架构\n    最初业务量不大，访问量小，此时的架构，应用程序、数据库、文件都部署在一台服务器上，有些甚至仅仅是租用主机空间 \n    将应用程序、数据库、文件各自部署在独立的服务器上，并且根据服务器的用途配置不同的硬件，达到最佳的性能效果。\n\n### 使用缓存技术\n    本地缓存\n    2.1 本地缓存\n    本地缓存，顾名思义是将数据缓存在应用服务器本地，可以存在内存中，也可以存在文件，组件。本地缓存的特点是速度快，但因为本地空间有限所以缓存数据量也有限。OSCache就是常用的本地缓存。 \n    分布式缓存\n    分布式缓存的特点是，可以缓存海量的数据，并且扩展非常容易，在门户类网站中常常被使用，速度按理没有本地缓存快，常用的分布式缓存是Memcached、Redis。 \n    反向代理\n    部署在网站的机房，当用户请求达到时首先访问反向代理服务器，反向代理服务器将缓存的数据返回给用户，如果没有缓存数据才会继续访问应用服务器获取，这样做减少了获取数据的成本。反向代理有Squid，Nginx。 \n    CDN\n    假设我们的服务器都部署在杭州的机房，对于浙江的用户来说访问是较快的，而对于北京的用户访问是较慢的，这是由于浙江和北京分别属于电信和联通的不同发达地区，北京用户访问需要通过互联路由器经过较长的路径才能访问到杭州的服务器，返回路径也一样，所以数据传输时间比较长。对于这种情况，常常使用CDN解决，CDN将数据内容缓存到运营商的机房，用户访问时先从最近的运营商获取数据，这样大大减少了网络访问的路径。比较专业的CDN运营商有蓝汛、网宿。\n\n### 服务器集群＋　负载均衡\n    应用服务器作为网站的入口，会承担大量的请求，我们往往通过应用服务器集群来分担请求数。\n    应用服务器前面部署负载均衡服务器调度用户请求，根据分发策略将请求分发到多个应用服务器节点。 \n    常用的负载均衡技术硬件的有F5，价格比较贵一般都在15W以上。\n        软件的有LVS、Nginx、HAProxy。LVS是四层（传输层）负载均衡，根据目标地址和端口选择内部服务器，Nginx和HAProxy是七层（应用层）负载均衡，可以根据报文内容选择内部服务器，因此LVS分发路径优于Nginx 和HAProxy，性能要高些，而Nginx和HAProxy则更具配置性，如可以用来做动静分离（根据请求报文特征，选择静态资源服务器还是应用服务器）。\n### 数据库优化\n    数据库读写分离和分库分表\n    4.1 读写分离和分库分表\n    随着用户量的增加，数据库成为最大的瓶颈，改善数据库性能常用的手段是进行读写分离以及分库分表，读写分离顾名思义就是将数据库分为读库和写库，通过主备功能实现数据同步。分库分表则分为水平切分和垂直切分，水平切分则是对一个数据库特大的表进行拆分，例如用户表。垂直切分则是根据业务的不同来切分，如用户业务、商品业务相关的表放在不同的数据库中。 \n    使用NoSQL和搜索引擎\n    4.2 使用NoSql数据库和搜索引擎\n    对于海量数据的查询和分析，我们使用nosql数据库加上搜索引擎可以达到更好的性能。并不是所有的数据都要放在关系型数据中。常用的NOSQL有mongodb、hbase、redis，搜索引擎有lucene、solr、elasticsearch。 \n### 业务拆分　微服务...\n    随着业务的扩展，应用程序变得非常臃肿，这时我们需要将应用程序进行业务拆分，如百度分为新闻、网页、图片等业务。每个业务应用负责相对独立的业务运作。业务之间通过消息进行通信或者共享数据库来实现。 \n### 分布式系统\n    分布式文件系统\n    6.1 分布式文件系统\n    用户一天天增加，业务量越来越大，产生的文件越来越多，单台的文件服务器已经不能满足需求，这时就需要分布式文件系统的支撑。常用的分布式文件系统有GFS、HDFS、TFS。\n    GFS（Google File System）可以给大量的用户提供总体性能较高的服务\n    • 适合部署在廉价的普通硬件上\n    • 提供容错功能\n\n    HDFS（Hadoop Distributed File System）能提供高吞吐量的数据访问，非常适合大规模数据集上的应用\n    • 运行在通用硬件(commodityhardware)\n    • 高度容错\n    • 适合部署在廉价的机器上\n\n    TFS（Taobao Flies System）主要针对海量的非结构化数据，提供高可靠和高并发的存储访问\n    • 高可扩展、高可用、高性能\n    • 面向互联网服务\n    • 适合海量小文件存储\n\n    分布式服务\n    6.2 分布式服务\n    各个业务应用都会使用到一些基本的业务服务，例如用户服务、订单服务、支付服务、安全服务，这些服务是支撑各业务应用的基本要素。我们将这些服务抽取出来利用分部式服务框架搭建分布式服务。阿里的Dubbo是一个不错的选择。\n## 总结\n    大型网站的架构是根据业务需求不断完善的，根据不同的业务特征会做特定的设计和考虑，本文只是讲述一个常规大型网站会涉及的一些优化技术和手段。\n\n[转载原文链接](http://geek.csdn.net/news/detail/245449)\n[转载原文链接](http://www.cnblogs.com/leefreeman/p/3993449.html)\n","slug":"web-performance-improvement","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zmb00182oi8x7wipmaz","content":"<p>前言<br>一个成熟的大型网站（如淘宝、天猫、腾讯等）的系统架构并不是一开始设计时就具备完整的高性能、高可用、高伸缩等特性的，它是随着用户量的增加，业务功能的扩展逐渐演变完善的，在这个过程中，开发模式、技术架构、设计思想也发生了很大的变化，就连技术人员也从几个人发展到一个部门甚至一条产品线。所以成熟的系统架构是随着业务的扩展而逐步完善的，并不是一蹴而就；不同业务特征的系统，会有各自的侧重点，例如：淘宝，要解决海量的商品信息的搜索、下单、支付，例如腾讯，要解决数亿用户的实时消息传输，百度它要处理海量的搜索请求，他们都有各自的业务特性，系统架构也有所不同。尽管如此我们也可以从这些不同的网站背景下，找出其中共用优化的技术，这些优化技术和手段广泛运用在大型网站系统的架构中，下面让我们来认识这些优化性能的技术和手段。</p>\n<h3 id=\"数据应用文件分离\"><a href=\"#数据应用文件分离\" class=\"headerlink\" title=\"数据应用文件分离\"></a>数据应用文件分离</h3><pre><code>最开始的网站架构\n最初业务量不大，访问量小，此时的架构，应用程序、数据库、文件都部署在一台服务器上，有些甚至仅仅是租用主机空间 \n将应用程序、数据库、文件各自部署在独立的服务器上，并且根据服务器的用途配置不同的硬件，达到最佳的性能效果。</code></pre><h3 id=\"使用缓存技术\"><a href=\"#使用缓存技术\" class=\"headerlink\" title=\"使用缓存技术\"></a>使用缓存技术</h3><pre><code>本地缓存\n2.1 本地缓存\n本地缓存，顾名思义是将数据缓存在应用服务器本地，可以存在内存中，也可以存在文件，组件。本地缓存的特点是速度快，但因为本地空间有限所以缓存数据量也有限。OSCache就是常用的本地缓存。 \n分布式缓存\n分布式缓存的特点是，可以缓存海量的数据，并且扩展非常容易，在门户类网站中常常被使用，速度按理没有本地缓存快，常用的分布式缓存是Memcached、Redis。 \n反向代理\n部署在网站的机房，当用户请求达到时首先访问反向代理服务器，反向代理服务器将缓存的数据返回给用户，如果没有缓存数据才会继续访问应用服务器获取，这样做减少了获取数据的成本。反向代理有Squid，Nginx。 \nCDN\n假设我们的服务器都部署在杭州的机房，对于浙江的用户来说访问是较快的，而对于北京的用户访问是较慢的，这是由于浙江和北京分别属于电信和联通的不同发达地区，北京用户访问需要通过互联路由器经过较长的路径才能访问到杭州的服务器，返回路径也一样，所以数据传输时间比较长。对于这种情况，常常使用CDN解决，CDN将数据内容缓存到运营商的机房，用户访问时先从最近的运营商获取数据，这样大大减少了网络访问的路径。比较专业的CDN运营商有蓝汛、网宿。</code></pre><h3 id=\"服务器集群＋-负载均衡\"><a href=\"#服务器集群＋-负载均衡\" class=\"headerlink\" title=\"服务器集群＋　负载均衡\"></a>服务器集群＋　负载均衡</h3><pre><code>应用服务器作为网站的入口，会承担大量的请求，我们往往通过应用服务器集群来分担请求数。\n应用服务器前面部署负载均衡服务器调度用户请求，根据分发策略将请求分发到多个应用服务器节点。 \n常用的负载均衡技术硬件的有F5，价格比较贵一般都在15W以上。\n    软件的有LVS、Nginx、HAProxy。LVS是四层（传输层）负载均衡，根据目标地址和端口选择内部服务器，Nginx和HAProxy是七层（应用层）负载均衡，可以根据报文内容选择内部服务器，因此LVS分发路径优于Nginx 和HAProxy，性能要高些，而Nginx和HAProxy则更具配置性，如可以用来做动静分离（根据请求报文特征，选择静态资源服务器还是应用服务器）。</code></pre><h3 id=\"数据库优化\"><a href=\"#数据库优化\" class=\"headerlink\" title=\"数据库优化\"></a>数据库优化</h3><pre><code>数据库读写分离和分库分表\n4.1 读写分离和分库分表\n随着用户量的增加，数据库成为最大的瓶颈，改善数据库性能常用的手段是进行读写分离以及分库分表，读写分离顾名思义就是将数据库分为读库和写库，通过主备功能实现数据同步。分库分表则分为水平切分和垂直切分，水平切分则是对一个数据库特大的表进行拆分，例如用户表。垂直切分则是根据业务的不同来切分，如用户业务、商品业务相关的表放在不同的数据库中。 \n使用NoSQL和搜索引擎\n4.2 使用NoSql数据库和搜索引擎\n对于海量数据的查询和分析，我们使用nosql数据库加上搜索引擎可以达到更好的性能。并不是所有的数据都要放在关系型数据中。常用的NOSQL有mongodb、hbase、redis，搜索引擎有lucene、solr、elasticsearch。 </code></pre><h3 id=\"业务拆分-微服务…\"><a href=\"#业务拆分-微服务…\" class=\"headerlink\" title=\"业务拆分　微服务…\"></a>业务拆分　微服务…</h3><pre><code>随着业务的扩展，应用程序变得非常臃肿，这时我们需要将应用程序进行业务拆分，如百度分为新闻、网页、图片等业务。每个业务应用负责相对独立的业务运作。业务之间通过消息进行通信或者共享数据库来实现。 </code></pre><h3 id=\"分布式系统\"><a href=\"#分布式系统\" class=\"headerlink\" title=\"分布式系统\"></a>分布式系统</h3><pre><code>分布式文件系统\n6.1 分布式文件系统\n用户一天天增加，业务量越来越大，产生的文件越来越多，单台的文件服务器已经不能满足需求，这时就需要分布式文件系统的支撑。常用的分布式文件系统有GFS、HDFS、TFS。\nGFS（Google File System）可以给大量的用户提供总体性能较高的服务\n• 适合部署在廉价的普通硬件上\n• 提供容错功能\n\nHDFS（Hadoop Distributed File System）能提供高吞吐量的数据访问，非常适合大规模数据集上的应用\n• 运行在通用硬件(commodityhardware)\n• 高度容错\n• 适合部署在廉价的机器上\n\nTFS（Taobao Flies System）主要针对海量的非结构化数据，提供高可靠和高并发的存储访问\n• 高可扩展、高可用、高性能\n• 面向互联网服务\n• 适合海量小文件存储\n\n分布式服务\n6.2 分布式服务\n各个业务应用都会使用到一些基本的业务服务，例如用户服务、订单服务、支付服务、安全服务，这些服务是支撑各业务应用的基本要素。我们将这些服务抽取出来利用分部式服务框架搭建分布式服务。阿里的Dubbo是一个不错的选择。</code></pre><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><pre><code>大型网站的架构是根据业务需求不断完善的，根据不同的业务特征会做特定的设计和考虑，本文只是讲述一个常规大型网站会涉及的一些优化技术和手段。</code></pre><p><a href=\"http://geek.csdn.net/news/detail/245449\" target=\"_blank\" rel=\"noopener\">转载原文链接</a><br><a href=\"http://www.cnblogs.com/leefreeman/p/3993449.html\" target=\"_blank\" rel=\"noopener\">转载原文链接</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>前言<br>一个成熟的大型网站（如淘宝、天猫、腾讯等）的系统架构并不是一开始设计时就具备完整的高性能、高可用、高伸缩等特性的，它是随着用户量的增加，业务功能的扩展逐渐演变完善的，在这个过程中，开发模式、技术架构、设计思想也发生了很大的变化，就连技术人员也从几个人发展到一个部门甚至一条产品线。所以成熟的系统架构是随着业务的扩展而逐步完善的，并不是一蹴而就；不同业务特征的系统，会有各自的侧重点，例如：淘宝，要解决海量的商品信息的搜索、下单、支付，例如腾讯，要解决数亿用户的实时消息传输，百度它要处理海量的搜索请求，他们都有各自的业务特性，系统架构也有所不同。尽管如此我们也可以从这些不同的网站背景下，找出其中共用优化的技术，这些优化技术和手段广泛运用在大型网站系统的架构中，下面让我们来认识这些优化性能的技术和手段。</p>\n<h3 id=\"数据应用文件分离\"><a href=\"#数据应用文件分离\" class=\"headerlink\" title=\"数据应用文件分离\"></a>数据应用文件分离</h3><pre><code>最开始的网站架构\n最初业务量不大，访问量小，此时的架构，应用程序、数据库、文件都部署在一台服务器上，有些甚至仅仅是租用主机空间 \n将应用程序、数据库、文件各自部署在独立的服务器上，并且根据服务器的用途配置不同的硬件，达到最佳的性能效果。</code></pre><h3 id=\"使用缓存技术\"><a href=\"#使用缓存技术\" class=\"headerlink\" title=\"使用缓存技术\"></a>使用缓存技术</h3><pre><code>本地缓存\n2.1 本地缓存\n本地缓存，顾名思义是将数据缓存在应用服务器本地，可以存在内存中，也可以存在文件，组件。本地缓存的特点是速度快，但因为本地空间有限所以缓存数据量也有限。OSCache就是常用的本地缓存。 \n分布式缓存\n分布式缓存的特点是，可以缓存海量的数据，并且扩展非常容易，在门户类网站中常常被使用，速度按理没有本地缓存快，常用的分布式缓存是Memcached、Redis。 \n反向代理\n部署在网站的机房，当用户请求达到时首先访问反向代理服务器，反向代理服务器将缓存的数据返回给用户，如果没有缓存数据才会继续访问应用服务器获取，这样做减少了获取数据的成本。反向代理有Squid，Nginx。 \nCDN\n假设我们的服务器都部署在杭州的机房，对于浙江的用户来说访问是较快的，而对于北京的用户访问是较慢的，这是由于浙江和北京分别属于电信和联通的不同发达地区，北京用户访问需要通过互联路由器经过较长的路径才能访问到杭州的服务器，返回路径也一样，所以数据传输时间比较长。对于这种情况，常常使用CDN解决，CDN将数据内容缓存到运营商的机房，用户访问时先从最近的运营商获取数据，这样大大减少了网络访问的路径。比较专业的CDN运营商有蓝汛、网宿。</code></pre><h3 id=\"服务器集群＋-负载均衡\"><a href=\"#服务器集群＋-负载均衡\" class=\"headerlink\" title=\"服务器集群＋　负载均衡\"></a>服务器集群＋　负载均衡</h3><pre><code>应用服务器作为网站的入口，会承担大量的请求，我们往往通过应用服务器集群来分担请求数。\n应用服务器前面部署负载均衡服务器调度用户请求，根据分发策略将请求分发到多个应用服务器节点。 \n常用的负载均衡技术硬件的有F5，价格比较贵一般都在15W以上。\n    软件的有LVS、Nginx、HAProxy。LVS是四层（传输层）负载均衡，根据目标地址和端口选择内部服务器，Nginx和HAProxy是七层（应用层）负载均衡，可以根据报文内容选择内部服务器，因此LVS分发路径优于Nginx 和HAProxy，性能要高些，而Nginx和HAProxy则更具配置性，如可以用来做动静分离（根据请求报文特征，选择静态资源服务器还是应用服务器）。</code></pre><h3 id=\"数据库优化\"><a href=\"#数据库优化\" class=\"headerlink\" title=\"数据库优化\"></a>数据库优化</h3><pre><code>数据库读写分离和分库分表\n4.1 读写分离和分库分表\n随着用户量的增加，数据库成为最大的瓶颈，改善数据库性能常用的手段是进行读写分离以及分库分表，读写分离顾名思义就是将数据库分为读库和写库，通过主备功能实现数据同步。分库分表则分为水平切分和垂直切分，水平切分则是对一个数据库特大的表进行拆分，例如用户表。垂直切分则是根据业务的不同来切分，如用户业务、商品业务相关的表放在不同的数据库中。 \n使用NoSQL和搜索引擎\n4.2 使用NoSql数据库和搜索引擎\n对于海量数据的查询和分析，我们使用nosql数据库加上搜索引擎可以达到更好的性能。并不是所有的数据都要放在关系型数据中。常用的NOSQL有mongodb、hbase、redis，搜索引擎有lucene、solr、elasticsearch。 </code></pre><h3 id=\"业务拆分-微服务…\"><a href=\"#业务拆分-微服务…\" class=\"headerlink\" title=\"业务拆分　微服务…\"></a>业务拆分　微服务…</h3><pre><code>随着业务的扩展，应用程序变得非常臃肿，这时我们需要将应用程序进行业务拆分，如百度分为新闻、网页、图片等业务。每个业务应用负责相对独立的业务运作。业务之间通过消息进行通信或者共享数据库来实现。 </code></pre><h3 id=\"分布式系统\"><a href=\"#分布式系统\" class=\"headerlink\" title=\"分布式系统\"></a>分布式系统</h3><pre><code>分布式文件系统\n6.1 分布式文件系统\n用户一天天增加，业务量越来越大，产生的文件越来越多，单台的文件服务器已经不能满足需求，这时就需要分布式文件系统的支撑。常用的分布式文件系统有GFS、HDFS、TFS。\nGFS（Google File System）可以给大量的用户提供总体性能较高的服务\n• 适合部署在廉价的普通硬件上\n• 提供容错功能\n\nHDFS（Hadoop Distributed File System）能提供高吞吐量的数据访问，非常适合大规模数据集上的应用\n• 运行在通用硬件(commodityhardware)\n• 高度容错\n• 适合部署在廉价的机器上\n\nTFS（Taobao Flies System）主要针对海量的非结构化数据，提供高可靠和高并发的存储访问\n• 高可扩展、高可用、高性能\n• 面向互联网服务\n• 适合海量小文件存储\n\n分布式服务\n6.2 分布式服务\n各个业务应用都会使用到一些基本的业务服务，例如用户服务、订单服务、支付服务、安全服务，这些服务是支撑各业务应用的基本要素。我们将这些服务抽取出来利用分部式服务框架搭建分布式服务。阿里的Dubbo是一个不错的选择。</code></pre><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><pre><code>大型网站的架构是根据业务需求不断完善的，根据不同的业务特征会做特定的设计和考虑，本文只是讲述一个常规大型网站会涉及的一些优化技术和手段。</code></pre><p><a href=\"http://geek.csdn.net/news/detail/245449\" target=\"_blank\" rel=\"noopener\">转载原文链接</a><br><a href=\"http://www.cnblogs.com/leefreeman/p/3993449.html\" target=\"_blank\" rel=\"noopener\">转载原文链接</a></p>\n"},{"title":"平安夜的这一天","date":"2016-12-24T13:01:50.000Z","_content":"\n\n## 平安夜\n\n>today is the Christmas Eve. merry Christmas Eve.\n--------\n有个css大师的网站需要经常关注一下  [meyerweb.com](http://meyerweb.com/ 点击可以打开)\nEric Meyer css权威指南的作者  [ericmeyeroncss](http://www.ericmeyeroncss.com )\n\n","source":"_posts/平安夜的这一天.md","raw":"---\ntitle: 平安夜的这一天\ndate: 2016-12-24 21:01:50\ntags:\n---\n\n\n## 平安夜\n\n>today is the Christmas Eve. merry Christmas Eve.\n--------\n有个css大师的网站需要经常关注一下  [meyerweb.com](http://meyerweb.com/ 点击可以打开)\nEric Meyer css权威指南的作者  [ericmeyeroncss](http://www.ericmeyeroncss.com )\n\n","slug":"平安夜的这一天","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zmb00192oi89tpid1dp","content":"<h2 id=\"平安夜\"><a href=\"#平安夜\" class=\"headerlink\" title=\"平安夜\"></a>平安夜</h2><blockquote>\n<p>today is the Christmas Eve. merry Christmas Eve.</p>\n</blockquote>\n<hr>\n<p>有个css大师的网站需要经常关注一下  [meyerweb.com](<a href=\"http://meyerweb.com/\" target=\"_blank\" rel=\"noopener\">http://meyerweb.com/</a> 点击可以打开)<br>Eric Meyer css权威指南的作者  <a href=\"http://www.ericmeyeroncss.com\" target=\"_blank\" rel=\"noopener\">ericmeyeroncss</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"平安夜\"><a href=\"#平安夜\" class=\"headerlink\" title=\"平安夜\"></a>平安夜</h2><blockquote>\n<p>today is the Christmas Eve. merry Christmas Eve.</p>\n</blockquote>\n<hr>\n<p>有个css大师的网站需要经常关注一下  [meyerweb.com](<a href=\"http://meyerweb.com/\" target=\"_blank\" rel=\"noopener\">http://meyerweb.com/</a> 点击可以打开)<br>Eric Meyer css权威指南的作者  <a href=\"http://www.ericmeyeroncss.com\" target=\"_blank\" rel=\"noopener\">ericmeyeroncss</a></p>\n"},{"title":"圣诞节","date":"2016-12-25T03:21:12.000Z","_content":"\n## 今天虽然是圣诞节 但是记忆最深刻却是 抢票 抢票 抢票\n明天早上六点 六点 六点就要起来  [12306](http://www.12306.cn/mormhweb)\n\n#### 抢票之前做好三 + 一 件事\n1. 设置好闹钟五点四十五分钟\n2. 闹钟响后赶紧起来开电脑\n3. 速度买下一张票\n4. 买完票再睡会儿\n\n","source":"_posts/日记20161225.md","raw":"---\ntitle: 圣诞节\ndate: 2016-12-25 11:21:12\ntags:\n---\n\n## 今天虽然是圣诞节 但是记忆最深刻却是 抢票 抢票 抢票\n明天早上六点 六点 六点就要起来  [12306](http://www.12306.cn/mormhweb)\n\n#### 抢票之前做好三 + 一 件事\n1. 设置好闹钟五点四十五分钟\n2. 闹钟响后赶紧起来开电脑\n3. 速度买下一张票\n4. 买完票再睡会儿\n\n","slug":"日记20161225","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zmc001a2oi8120ms4pk","content":"<h2 id=\"今天虽然是圣诞节-但是记忆最深刻却是-抢票-抢票-抢票\"><a href=\"#今天虽然是圣诞节-但是记忆最深刻却是-抢票-抢票-抢票\" class=\"headerlink\" title=\"今天虽然是圣诞节 但是记忆最深刻却是 抢票 抢票 抢票\"></a>今天虽然是圣诞节 但是记忆最深刻却是 抢票 抢票 抢票</h2><p>明天早上六点 六点 六点就要起来  <a href=\"http://www.12306.cn/mormhweb\" target=\"_blank\" rel=\"noopener\">12306</a></p>\n<h4 id=\"抢票之前做好三-一-件事\"><a href=\"#抢票之前做好三-一-件事\" class=\"headerlink\" title=\"抢票之前做好三 + 一 件事\"></a>抢票之前做好三 + 一 件事</h4><ol>\n<li>设置好闹钟五点四十五分钟</li>\n<li>闹钟响后赶紧起来开电脑</li>\n<li>速度买下一张票</li>\n<li>买完票再睡会儿</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"今天虽然是圣诞节-但是记忆最深刻却是-抢票-抢票-抢票\"><a href=\"#今天虽然是圣诞节-但是记忆最深刻却是-抢票-抢票-抢票\" class=\"headerlink\" title=\"今天虽然是圣诞节 但是记忆最深刻却是 抢票 抢票 抢票\"></a>今天虽然是圣诞节 但是记忆最深刻却是 抢票 抢票 抢票</h2><p>明天早上六点 六点 六点就要起来  <a href=\"http://www.12306.cn/mormhweb\" target=\"_blank\" rel=\"noopener\">12306</a></p>\n<h4 id=\"抢票之前做好三-一-件事\"><a href=\"#抢票之前做好三-一-件事\" class=\"headerlink\" title=\"抢票之前做好三 + 一 件事\"></a>抢票之前做好三 + 一 件事</h4><ol>\n<li>设置好闹钟五点四十五分钟</li>\n<li>闹钟响后赶紧起来开电脑</li>\n<li>速度买下一张票</li>\n<li>买完票再睡会儿</li>\n</ol>\n"},{"title":"一首歌","date":"2017-04-17T08:02:29.000Z","_content":"\n\n## 当你孤单你会想起谁\n","source":"_posts/日记20170417.md","raw":"---\ntitle: 一首歌 \ndate: 2017-04-17 16:02:29\ntags:\n---\n\n\n## 当你孤单你会想起谁\n","slug":"日记20170417","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zmc001b2oi8d8dyjybg","content":"<h2 id=\"当你孤单你会想起谁\"><a href=\"#当你孤单你会想起谁\" class=\"headerlink\" title=\"当你孤单你会想起谁\"></a>当你孤单你会想起谁</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"当你孤单你会想起谁\"><a href=\"#当你孤单你会想起谁\" class=\"headerlink\" title=\"当你孤单你会想起谁\"></a>当你孤单你会想起谁</h2>"},{"title":"20171120","date":"2017-11-20T01:43:09.000Z","_content":"","source":"_posts/日记20171120.md","raw":"---\ntitle: 20171120\ndate: 2017-11-20 09:43:09\ntags:\n---\n","slug":"日记20171120","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zmd001c2oi8ivttjt75","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"星期五-平安夜前一天","date":"2016-12-23T02:32:39.000Z","_content":"## 今天是平安夜的前一天\n### 程序员应该吃的食物&& 水果\n1. 苹果 苹果应该多吃一点\n2. 黄瓜  黄瓜在夏天可以多吃一点\n3. 香蕉  香蕉中蕴含丰富的水分\n\n\n","source":"_posts/星期五-平安夜前一天.md","raw":"---\ntitle: 星期五-平安夜前一天\ndate: 2016-12-23 10:32:39\ntags:\n---\n## 今天是平安夜的前一天\n### 程序员应该吃的食物&& 水果\n1. 苹果 苹果应该多吃一点\n2. 黄瓜  黄瓜在夏天可以多吃一点\n3. 香蕉  香蕉中蕴含丰富的水分\n\n\n","slug":"星期五-平安夜前一天","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zme001d2oi8yil5oteu","content":"<h2 id=\"今天是平安夜的前一天\"><a href=\"#今天是平安夜的前一天\" class=\"headerlink\" title=\"今天是平安夜的前一天\"></a>今天是平安夜的前一天</h2><h3 id=\"程序员应该吃的食物-amp-amp-水果\"><a href=\"#程序员应该吃的食物-amp-amp-水果\" class=\"headerlink\" title=\"程序员应该吃的食物&amp;&amp; 水果\"></a>程序员应该吃的食物&amp;&amp; 水果</h3><ol>\n<li>苹果 苹果应该多吃一点</li>\n<li>黄瓜  黄瓜在夏天可以多吃一点</li>\n<li>香蕉  香蕉中蕴含丰富的水分</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"今天是平安夜的前一天\"><a href=\"#今天是平安夜的前一天\" class=\"headerlink\" title=\"今天是平安夜的前一天\"></a>今天是平安夜的前一天</h2><h3 id=\"程序员应该吃的食物-amp-amp-水果\"><a href=\"#程序员应该吃的食物-amp-amp-水果\" class=\"headerlink\" title=\"程序员应该吃的食物&amp;&amp; 水果\"></a>程序员应该吃的食物&amp;&amp; 水果</h3><ol>\n<li>苹果 苹果应该多吃一点</li>\n<li>黄瓜  黄瓜在夏天可以多吃一点</li>\n<li>香蕉  香蕉中蕴含丰富的水分</li>\n</ol>\n"},{"title":"星期四","date":"2016-12-22T09:09:09.000Z","_content":"博客终于搭建好了，以后可以经常谢谢文章发到这上面来。\n希望笔耕不辍，留下一些东西！\n","source":"_posts/星期四.md","raw":"---\ntitle: 星期四\ndate: 2016-12-22 17:09:09\ntags:\n---\n博客终于搭建好了，以后可以经常谢谢文章发到这上面来。\n希望笔耕不辍，留下一些东西！\n","slug":"星期四","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zme001e2oi8q9uuaxz0","content":"<p>博客终于搭建好了，以后可以经常谢谢文章发到这上面来。<br>希望笔耕不辍，留下一些东西！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>博客终于搭建好了，以后可以经常谢谢文章发到这上面来。<br>希望笔耕不辍，留下一些东西！</p>\n"},{"title":"编程笔记","date":"2017-03-13T02:28:22.000Z","_content":"\nresin 的启动\nservice resin start\nservice resin status \n\n\nCENTOS  开放端口号\nfirewall-cmd --permanent --add-port=6600/tcp\n\nfirewall-cmd --permanent --query-port=6800/tcp\n\nfirewall-cmd --list-ports\n\nfirewall-cmd --reload\n\nMongodb  安装启动 配置\n设置mongodb的yum安装源\nCreate a /etc/yum.repos.d/mongodb-org-3.2.repo file so that you can install MongoDB directly, using yum.\n\n[mongodb-org-3.2]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc\n\nsudo yum install -y mongodb-org  yum 方法安装\n/etc/mongod.conf   配置文件地址  \n默认端口：27017 by default.\nsudo service mongod start\nsudo service mongod restart\n日志\n/var/log/mongodb/mongod.log\n数据\n/var/lib/mongo\n\nsudo chkconfig mongod on 设置开机启动\n\nsudo yum erase $(rpm -qa | grep mongodb-org)\n\nsudo rm -r /var/log/mongodb\nsudo rm -r /var/lib/mongo\n\n\nMongodb  数据库操作\n\n导入数据\n移除数据先\nmongoimport --db test --collection restaurants --drop --file primer-dataset.json\n\n设置登录口令后登录命令\nmongo -port 27017 -u \"myadmin\" -p \"zhumin\"   --authenticationDatabase \"admin\"\n\n\n最小化安装完centos 7 之后 需要做的事情\n1. 配置静态 ip  /etc/sysconfig/network-scripts/ 目录下 ipcfg-enXX 文件 查看ip 命令  ip addr show\n\n  一个静态ip 配置案例\n   TYPE=\"Ethernet\"\n   BOOTPROTO=\"static\"\n   IPADDR=10.0.0.10\n   NETWORKING=yes\n  GATEWAY=192.168.1.1\n NETMASK=255.255.255.0\n NM_CONTROLLED=noa\n DEFROUTE=\"yes\"\n PEERDNS=\"yes\"\n PEERROUTES=\"yes\"\n IPV4_FAILURE_FATAL=\"no\"\n IPV6INIT=\"yes\"\n IPV6_AUTOCONF=\"yes\"\n IPV6_DEFROUTE=\"yes\"\n IPV6_PEERDNS=\"yes\"\n  IPV6_PEERROUTES=\"yes\"\n IPV6_FAILURE_FATAL=\"no\"\n NAME=\"enp0s3\"\n UUID=\"17eeb7fe-f11c-4b8b-83be-a9dd2281dda2\"\n DEVICE=\"enp0s3\"\n ONBOOT=\"yes\"\n\n2. 安装软件\n      1). 安装 links  浏览工具  yum install links\n      2). 安装 Apache HTTP 服务器 yum istall httpd 如果你想更改 Apache HTTP 服务器的默认端口号(80)为其它端口，你需要编辑配置文件 ‘/etc/httpd/conf/httpd.conf’ 并查找以下面开始的行：\n            1.LISTEN 80\n     把端口号 ‘80’ 改为其它任何端口(例如 3221)，保存并退出。\n     增加刚才分配给 Apache 的端口通过防火墙，然后重新加载防火墙。\n\n    允许 http 服务通过防火墙(永久)。\n     1.# firewall-cmd –add-service=http\n\n\t\t     允许 3221 号端口通过防火墙(永久)。\n    1.# firewall-cmd –permanent –add-port=3221/tcp\n\n     重新加载防火墙。\n\t     1.# firewall-cmd –reload\n\t     完成上面的所有事情之后，是时候重启 Apache HTTP 服务器了，然后新的端口号才能生效。\n     1.# systemctl restart httpd.service\n        3). yum install lrzsz  \n   4). export JAVA_HOME=/usr/local/java/jdk1.8.0_11 \n          export JRE_HOME=/usr/local/java/jdk1.8.0_11/jre \n                export PATH=$PATH:/usr/local/java/jdk1.8.0_11/bin \n            export CLASSPATH=./:/usr/local/java/jdk1.8.0_11/lib:/usr/local/java/jdk1.8.0_11/jre/lib\n       5). 安装编译环境  $ yum install ncurses-devel  $ yum install gcc\n\n      3.新增用户  useradd  xxxxx  设置密码  passwd xxxxx\n      4. 防火墙   开启80 端口 firewall-cmd --zone=public --add-port=80/tcp --permanent\n         重启防火墙生效：firewall-cmd --reload\n  5. 更新或升级最小化安装的 CentOS  yum update && yum upgrade\n\n   jdk1.8.0_111\n\n\n     修改系统环境变量文件\n     vi + /etc/profile\n\n\n     向文件里面追加以下内容：\n     JAVA_HOME=/usr/java/jdk1.8.0_25\n      JRE_HOME=/usr/java/jdk1.8.0_25/jre\n      PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\n  export JAVA_HOME JRE_HOME PATH CLASSPATH\n\n\n\n\n\n 192.168.1.129\n  安装nginx\n\n  首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装\n\n  yum install gcc-c++  \n yum install pcre pcre-devel  \n yum install zlib zlib-devel  \n  yum install openssl openssl--devel\n\n\t\t  二、安装Nginx\n\n  安装之前，最好检查一下是否已经安装有 nginx\n  find -name nginx\n\n\t  如果系统已经安装了nginx，那么就先卸载\n\t  yum remove nginx\n\n  首先进入 /usr/local 目录\n cd /usr/local\n  从官网下载最新版的nginx\n wget http://nginx.org/download/nginx-1.9.6.tar.gz\n  tar -zxvf nginx-1.9.6.tar.gz\n cd nginx-1.9.6\n\n 接下来安装，使用--prefix参数指定nginx安装的目录,make、make install安装\n\n ./configure  $默认安装在/usr/local/nginx   \n make  \n  make install\n\n  如果没有报错，顺利完成后，最好看一下 nginx 的安装目录\n  whereis nginx\n\n 安装完毕后，进入安装后目录（/usr/local/nginx）便可以启动或停止它了\n\n 使用命令编译nginx\n\n ./configure --sbin-path=/usr/local/nginx/nginx --conf-path=/usr/local/nginx/nginx.conf --pid-path=/usr/local/nginx/nginx.pid --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.38 --with-zlib=/usr/local/src/zlib-1.2.8 --with-openssl=/usr/local/src/openssl-1.0.1q\n  make \n make install\n\n  configure命令是用来检测你的安装平台的目标特征的。它定义了系统的各个方面，包括nginx的被允许使用的连接处理的方法，比如它会检测你是不是有CC或GCC，并不是需要CC或GCC，它是个shell脚本，执行结束时，它会创建一个Makefile文件。nginx的configure命令支持以下参数：\n  –prefix=path    定义一个目录，存放服务器上的文件 ，也就是nginx的安装目录。默认使用 /usr/local/nginx。\n –sbin-path=path 设置nginx的可执行文件的路径，默认为  prefix/sbin/nginx.\n  –conf-path=path  设置在nginx.conf配置文件的路径。nginx允许使用不同的配置文件启动，通过命令行中的-c选项。默认为prefix/conf/nginx.conf.\n  –pid-path=path  设置nginx.pid文件，将存储的主进程的进程号。安装完成后，可以随时改变的文件名 ， 在nginx.conf配置文件中使用 PID指令。默认情况下，文件名 为prefix/logs/nginx.pid.\n  –error-log-path=path 设置主错误，警告，和诊断文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的error_log指令。默认情况下，文件名 为prefix/logs/error.log.\n  –http-log-path=path  设置主请求的HTTP服务器的日志文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的access_log指令。默认情况下，文件名 为prefix/logs/access.log.\n –user=name  设置nginx工作进程的用户。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的用户名是nobody。\n –group=name  设置nginx工作进程的用户组。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的为非特权用户。\n  –with-select_module –without-select_module 启用或禁用构建一个模块来允许服务器使用select()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。\n  –with-poll_module –without-poll_module 启用或禁用构建一个模块来允许服务器使用poll()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。\n –without-http_gzip_module — 不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库。\n  –without-http_rewrite_module  不编译重写模块。编译并运行此模块需要PCRE库支持。\n –without-http_proxy_module — 不编译http_proxy模块。\n  –with-http_ssl_module — 使用https协议模块。默认情况下，该模块没有被构建。建立并运行此模块的OpenSSL库是必需的。\n  –with-pcre=path — 设置PCRE库的源码路径。PCRE库的源码（版本4.4 – 8.30）需要从PCRE网站下载并解压。其余的工作是Nginx的./ configure和make来完成。正则表达式使用在location指令和 ngx_http_rewrite_module 模块中。\n  –with-pcre-jit —编译PCRE包含“just-in-time compilation”（1.1.12中， pcre_jit指令）。\n  –with-zlib=path —设置的zlib库的源码路径。要下载从 zlib（版本1.1.3 – 1.2.5）的并解压。其余的工作是Nginx的./ configure和make完成。ngx_http_gzip_module模块需要使用zlib 。\n  –with-cc-opt=parameters — 设置额外的参数将被添加到CFLAGS变量。例如,当你在FreeBSD上使用PCRE库时需要使用:–with-cc-opt=”-I /usr/local/include。.如需要需要增加 select()支持的文件数量:–with-cc-opt=”-D FD_SETSIZE=2048″.\n –with-ld-opt=parameters —设置附加的参数，将用于在链接期间。例如，当在FreeBSD下使用该系统的PCRE库,应指定:–with-ld-opt=”-L /usr/local/lib”.\n  说明: 说明: 若安装时找不到上述依赖模块，使用–with-openssl=<openssl_dir>、–with-pcre=<pcre_dir>、–with-zlib=<zlib_dir>指定依赖的模块目录。如已安装过，此处的路径为安装目录；若未安装，则此路径为编译安装包路径，nginx将执行模块的默认编译安装。s\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     \n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     db.createUser({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         user: \"root\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     pwd: \"zhumin\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         roles: [{role:\"root\", db: \"admin\"}]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t db.createUser( \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t user: \"mongoRoot\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t pwd: \"testMongoDB2016\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t roles:[{role:\"userAdminAnyDatabase\", db:\"admin\"}] \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t } \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ]\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t rpm -e --nodeps mysql \n\n\n","source":"_posts/编程笔记20170313.md","raw":"---\ntitle: 编程笔记 \ndate: 2017-03-13 10:28:22\ntags:\n---\n\nresin 的启动\nservice resin start\nservice resin status \n\n\nCENTOS  开放端口号\nfirewall-cmd --permanent --add-port=6600/tcp\n\nfirewall-cmd --permanent --query-port=6800/tcp\n\nfirewall-cmd --list-ports\n\nfirewall-cmd --reload\n\nMongodb  安装启动 配置\n设置mongodb的yum安装源\nCreate a /etc/yum.repos.d/mongodb-org-3.2.repo file so that you can install MongoDB directly, using yum.\n\n[mongodb-org-3.2]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc\n\nsudo yum install -y mongodb-org  yum 方法安装\n/etc/mongod.conf   配置文件地址  \n默认端口：27017 by default.\nsudo service mongod start\nsudo service mongod restart\n日志\n/var/log/mongodb/mongod.log\n数据\n/var/lib/mongo\n\nsudo chkconfig mongod on 设置开机启动\n\nsudo yum erase $(rpm -qa | grep mongodb-org)\n\nsudo rm -r /var/log/mongodb\nsudo rm -r /var/lib/mongo\n\n\nMongodb  数据库操作\n\n导入数据\n移除数据先\nmongoimport --db test --collection restaurants --drop --file primer-dataset.json\n\n设置登录口令后登录命令\nmongo -port 27017 -u \"myadmin\" -p \"zhumin\"   --authenticationDatabase \"admin\"\n\n\n最小化安装完centos 7 之后 需要做的事情\n1. 配置静态 ip  /etc/sysconfig/network-scripts/ 目录下 ipcfg-enXX 文件 查看ip 命令  ip addr show\n\n  一个静态ip 配置案例\n   TYPE=\"Ethernet\"\n   BOOTPROTO=\"static\"\n   IPADDR=10.0.0.10\n   NETWORKING=yes\n  GATEWAY=192.168.1.1\n NETMASK=255.255.255.0\n NM_CONTROLLED=noa\n DEFROUTE=\"yes\"\n PEERDNS=\"yes\"\n PEERROUTES=\"yes\"\n IPV4_FAILURE_FATAL=\"no\"\n IPV6INIT=\"yes\"\n IPV6_AUTOCONF=\"yes\"\n IPV6_DEFROUTE=\"yes\"\n IPV6_PEERDNS=\"yes\"\n  IPV6_PEERROUTES=\"yes\"\n IPV6_FAILURE_FATAL=\"no\"\n NAME=\"enp0s3\"\n UUID=\"17eeb7fe-f11c-4b8b-83be-a9dd2281dda2\"\n DEVICE=\"enp0s3\"\n ONBOOT=\"yes\"\n\n2. 安装软件\n      1). 安装 links  浏览工具  yum install links\n      2). 安装 Apache HTTP 服务器 yum istall httpd 如果你想更改 Apache HTTP 服务器的默认端口号(80)为其它端口，你需要编辑配置文件 ‘/etc/httpd/conf/httpd.conf’ 并查找以下面开始的行：\n            1.LISTEN 80\n     把端口号 ‘80’ 改为其它任何端口(例如 3221)，保存并退出。\n     增加刚才分配给 Apache 的端口通过防火墙，然后重新加载防火墙。\n\n    允许 http 服务通过防火墙(永久)。\n     1.# firewall-cmd –add-service=http\n\n\t\t     允许 3221 号端口通过防火墙(永久)。\n    1.# firewall-cmd –permanent –add-port=3221/tcp\n\n     重新加载防火墙。\n\t     1.# firewall-cmd –reload\n\t     完成上面的所有事情之后，是时候重启 Apache HTTP 服务器了，然后新的端口号才能生效。\n     1.# systemctl restart httpd.service\n        3). yum install lrzsz  \n   4). export JAVA_HOME=/usr/local/java/jdk1.8.0_11 \n          export JRE_HOME=/usr/local/java/jdk1.8.0_11/jre \n                export PATH=$PATH:/usr/local/java/jdk1.8.0_11/bin \n            export CLASSPATH=./:/usr/local/java/jdk1.8.0_11/lib:/usr/local/java/jdk1.8.0_11/jre/lib\n       5). 安装编译环境  $ yum install ncurses-devel  $ yum install gcc\n\n      3.新增用户  useradd  xxxxx  设置密码  passwd xxxxx\n      4. 防火墙   开启80 端口 firewall-cmd --zone=public --add-port=80/tcp --permanent\n         重启防火墙生效：firewall-cmd --reload\n  5. 更新或升级最小化安装的 CentOS  yum update && yum upgrade\n\n   jdk1.8.0_111\n\n\n     修改系统环境变量文件\n     vi + /etc/profile\n\n\n     向文件里面追加以下内容：\n     JAVA_HOME=/usr/java/jdk1.8.0_25\n      JRE_HOME=/usr/java/jdk1.8.0_25/jre\n      PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\n CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\n  export JAVA_HOME JRE_HOME PATH CLASSPATH\n\n\n\n\n\n 192.168.1.129\n  安装nginx\n\n  首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装\n\n  yum install gcc-c++  \n yum install pcre pcre-devel  \n yum install zlib zlib-devel  \n  yum install openssl openssl--devel\n\n\t\t  二、安装Nginx\n\n  安装之前，最好检查一下是否已经安装有 nginx\n  find -name nginx\n\n\t  如果系统已经安装了nginx，那么就先卸载\n\t  yum remove nginx\n\n  首先进入 /usr/local 目录\n cd /usr/local\n  从官网下载最新版的nginx\n wget http://nginx.org/download/nginx-1.9.6.tar.gz\n  tar -zxvf nginx-1.9.6.tar.gz\n cd nginx-1.9.6\n\n 接下来安装，使用--prefix参数指定nginx安装的目录,make、make install安装\n\n ./configure  $默认安装在/usr/local/nginx   \n make  \n  make install\n\n  如果没有报错，顺利完成后，最好看一下 nginx 的安装目录\n  whereis nginx\n\n 安装完毕后，进入安装后目录（/usr/local/nginx）便可以启动或停止它了\n\n 使用命令编译nginx\n\n ./configure --sbin-path=/usr/local/nginx/nginx --conf-path=/usr/local/nginx/nginx.conf --pid-path=/usr/local/nginx/nginx.pid --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.38 --with-zlib=/usr/local/src/zlib-1.2.8 --with-openssl=/usr/local/src/openssl-1.0.1q\n  make \n make install\n\n  configure命令是用来检测你的安装平台的目标特征的。它定义了系统的各个方面，包括nginx的被允许使用的连接处理的方法，比如它会检测你是不是有CC或GCC，并不是需要CC或GCC，它是个shell脚本，执行结束时，它会创建一个Makefile文件。nginx的configure命令支持以下参数：\n  –prefix=path    定义一个目录，存放服务器上的文件 ，也就是nginx的安装目录。默认使用 /usr/local/nginx。\n –sbin-path=path 设置nginx的可执行文件的路径，默认为  prefix/sbin/nginx.\n  –conf-path=path  设置在nginx.conf配置文件的路径。nginx允许使用不同的配置文件启动，通过命令行中的-c选项。默认为prefix/conf/nginx.conf.\n  –pid-path=path  设置nginx.pid文件，将存储的主进程的进程号。安装完成后，可以随时改变的文件名 ， 在nginx.conf配置文件中使用 PID指令。默认情况下，文件名 为prefix/logs/nginx.pid.\n  –error-log-path=path 设置主错误，警告，和诊断文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的error_log指令。默认情况下，文件名 为prefix/logs/error.log.\n  –http-log-path=path  设置主请求的HTTP服务器的日志文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的access_log指令。默认情况下，文件名 为prefix/logs/access.log.\n –user=name  设置nginx工作进程的用户。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的用户名是nobody。\n –group=name  设置nginx工作进程的用户组。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的为非特权用户。\n  –with-select_module –without-select_module 启用或禁用构建一个模块来允许服务器使用select()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。\n  –with-poll_module –without-poll_module 启用或禁用构建一个模块来允许服务器使用poll()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。\n –without-http_gzip_module — 不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库。\n  –without-http_rewrite_module  不编译重写模块。编译并运行此模块需要PCRE库支持。\n –without-http_proxy_module — 不编译http_proxy模块。\n  –with-http_ssl_module — 使用https协议模块。默认情况下，该模块没有被构建。建立并运行此模块的OpenSSL库是必需的。\n  –with-pcre=path — 设置PCRE库的源码路径。PCRE库的源码（版本4.4 – 8.30）需要从PCRE网站下载并解压。其余的工作是Nginx的./ configure和make来完成。正则表达式使用在location指令和 ngx_http_rewrite_module 模块中。\n  –with-pcre-jit —编译PCRE包含“just-in-time compilation”（1.1.12中， pcre_jit指令）。\n  –with-zlib=path —设置的zlib库的源码路径。要下载从 zlib（版本1.1.3 – 1.2.5）的并解压。其余的工作是Nginx的./ configure和make完成。ngx_http_gzip_module模块需要使用zlib 。\n  –with-cc-opt=parameters — 设置额外的参数将被添加到CFLAGS变量。例如,当你在FreeBSD上使用PCRE库时需要使用:–with-cc-opt=”-I /usr/local/include。.如需要需要增加 select()支持的文件数量:–with-cc-opt=”-D FD_SETSIZE=2048″.\n –with-ld-opt=parameters —设置附加的参数，将用于在链接期间。例如，当在FreeBSD下使用该系统的PCRE库,应指定:–with-ld-opt=”-L /usr/local/lib”.\n  说明: 说明: 若安装时找不到上述依赖模块，使用–with-openssl=<openssl_dir>、–with-pcre=<pcre_dir>、–with-zlib=<zlib_dir>指定依赖的模块目录。如已安装过，此处的路径为安装目录；若未安装，则此路径为编译安装包路径，nginx将执行模块的默认编译安装。s\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     \n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     db.createUser({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         user: \"root\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t     pwd: \"zhumin\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t         roles: [{role:\"root\", db: \"admin\"}]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t db.createUser( \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t { \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t user: \"mongoRoot\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t pwd: \"testMongoDB2016\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t roles:[{role:\"userAdminAnyDatabase\", db:\"admin\"}] \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t } \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ]\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t rpm -e --nodeps mysql \n\n\n","slug":"编程笔记20170313","published":1,"updated":"2019-07-03T03:52:29.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxqz0zmf001f2oi8bs78wei7","content":"<p>resin 的启动<br>service resin start<br>service resin status </p>\n<p>CENTOS  开放端口号<br>firewall-cmd –permanent –add-port=6600/tcp</p>\n<p>firewall-cmd –permanent –query-port=6800/tcp</p>\n<p>firewall-cmd –list-ports</p>\n<p>firewall-cmd –reload</p>\n<p>Mongodb  安装启动 配置<br>设置mongodb的yum安装源<br>Create a /etc/yum.repos.d/mongodb-org-3.2.repo file so that you can install MongoDB directly, using yum.</p>\n<p>[mongodb-org-3.2]<br>name=MongoDB Repository<br>baseurl=<a href=\"https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\" target=\"_blank\" rel=\"noopener\">https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/</a><br>gpgcheck=1<br>enabled=1<br>gpgkey=<a href=\"https://www.mongodb.org/static/pgp/server-3.2.asc\" target=\"_blank\" rel=\"noopener\">https://www.mongodb.org/static/pgp/server-3.2.asc</a></p>\n<p>sudo yum install -y mongodb-org  yum 方法安装<br>/etc/mongod.conf   配置文件地址<br>默认端口：27017 by default.<br>sudo service mongod start<br>sudo service mongod restart<br>日志<br>/var/log/mongodb/mongod.log<br>数据<br>/var/lib/mongo</p>\n<p>sudo chkconfig mongod on 设置开机启动</p>\n<p>sudo yum erase $(rpm -qa | grep mongodb-org)</p>\n<p>sudo rm -r /var/log/mongodb<br>sudo rm -r /var/lib/mongo</p>\n<p>Mongodb  数据库操作</p>\n<p>导入数据<br>移除数据先<br>mongoimport –db test –collection restaurants –drop –file primer-dataset.json</p>\n<p>设置登录口令后登录命令<br>mongo -port 27017 -u “myadmin” -p “zhumin”   –authenticationDatabase “admin”</p>\n<p>最小化安装完centos 7 之后 需要做的事情</p>\n<ol>\n<li><p>配置静态 ip  /etc/sysconfig/network-scripts/ 目录下 ipcfg-enXX 文件 查看ip 命令  ip addr show</p>\n<p>一个静态ip 配置案例<br>TYPE=”Ethernet”<br>BOOTPROTO=”static”<br>IPADDR=10.0.0.10<br>NETWORKING=yes<br>GATEWAY=192.168.1.1<br>NETMASK=255.255.255.0<br>NM_CONTROLLED=noa<br>DEFROUTE=”yes”<br>PEERDNS=”yes”<br>PEERROUTES=”yes”<br>IPV4_FAILURE_FATAL=”no”<br>IPV6INIT=”yes”<br>IPV6_AUTOCONF=”yes”<br>IPV6_DEFROUTE=”yes”<br>IPV6_PEERDNS=”yes”<br>IPV6_PEERROUTES=”yes”<br>IPV6_FAILURE_FATAL=”no”<br>NAME=”enp0s3”<br>UUID=”17eeb7fe-f11c-4b8b-83be-a9dd2281dda2”<br>DEVICE=”enp0s3”<br>ONBOOT=”yes”</p>\n</li>\n<li><p>安装软件<br>   1). 安装 links  浏览工具  yum install links<br>   2). 安装 Apache HTTP 服务器 yum istall httpd 如果你想更改 Apache HTTP 服务器的默认端口号(80)为其它端口，你需要编辑配置文件 ‘/etc/httpd/conf/httpd.conf’ 并查找以下面开始的行：</p>\n<pre><code>1.LISTEN 80</code></pre><p>  把端口号 ‘80’ 改为其它任何端口(例如 3221)，保存并退出。<br>  增加刚才分配给 Apache 的端口通过防火墙，然后重新加载防火墙。</p>\n<p> 允许 http 服务通过防火墙(永久)。<br>  1.# firewall-cmd –add-service=http</p>\n<pre><code>允许 3221 号端口通过防火墙(永久)。</code></pre><p> 1.# firewall-cmd –permanent –add-port=3221/tcp</p>\n<p>  重新加载防火墙。</p>\n<pre><code>1.# firewall-cmd –reload\n完成上面的所有事情之后，是时候重启 Apache HTTP 服务器了，然后新的端口号才能生效。</code></pre><p>  1.# systemctl restart httpd.service</p>\n<pre><code>3). yum install lrzsz  </code></pre><p>4). export JAVA_HOME=/usr/local/java/jdk1.8.0_11 </p>\n<pre><code>   export JRE_HOME=/usr/local/java/jdk1.8.0_11/jre \n         export PATH=$PATH:/usr/local/java/jdk1.8.0_11/bin \n     export CLASSPATH=./:/usr/local/java/jdk1.8.0_11/lib:/usr/local/java/jdk1.8.0_11/jre/lib\n5). 安装编译环境  $ yum install ncurses-devel  $ yum install gcc</code></pre><p>   3.新增用户  useradd  xxxxx  设置密码  passwd xxxxx</p>\n<ol start=\"4\">\n<li>防火墙   开启80 端口 firewall-cmd –zone=public –add-port=80/tcp –permanent<br>重启防火墙生效：firewall-cmd –reload<ol start=\"5\">\n<li>更新或升级最小化安装的 CentOS  yum update &amp;&amp; yum upgrade</li>\n</ol>\n</li>\n</ol>\n<p>jdk1.8.0_111</p>\n</li>\n</ol>\n<pre><code>修改系统环境变量文件\nvi + /etc/profile\n\n\n向文件里面追加以下内容：\nJAVA_HOME=/usr/java/jdk1.8.0_25\n JRE_HOME=/usr/java/jdk1.8.0_25/jre\n PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</code></pre><p> CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib<br>  export JAVA_HOME JRE_HOME PATH CLASSPATH</p>\n<p> 192.168.1.129<br>  安装nginx</p>\n<p>  首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装</p>\n<p>  yum install gcc-c++<br> yum install pcre pcre-devel<br> yum install zlib zlib-devel<br>  yum install openssl openssl–devel</p>\n<pre><code>二、安装Nginx</code></pre><p>  安装之前，最好检查一下是否已经安装有 nginx<br>  find -name nginx</p>\n<pre><code>如果系统已经安装了nginx，那么就先卸载\nyum remove nginx</code></pre><p>  首先进入 /usr/local 目录<br> cd /usr/local<br>  从官网下载最新版的nginx<br> wget <a href=\"http://nginx.org/download/nginx-1.9.6.tar.gz\" target=\"_blank\" rel=\"noopener\">http://nginx.org/download/nginx-1.9.6.tar.gz</a><br>  tar -zxvf nginx-1.9.6.tar.gz<br> cd nginx-1.9.6</p>\n<p> 接下来安装，使用–prefix参数指定nginx安装的目录,make、make install安装</p>\n<p> ./configure  $默认安装在/usr/local/nginx<br> make<br>  make install</p>\n<p>  如果没有报错，顺利完成后，最好看一下 nginx 的安装目录<br>  whereis nginx</p>\n<p> 安装完毕后，进入安装后目录（/usr/local/nginx）便可以启动或停止它了</p>\n<p> 使用命令编译nginx</p>\n<p> ./configure –sbin-path=/usr/local/nginx/nginx –conf-path=/usr/local/nginx/nginx.conf –pid-path=/usr/local/nginx/nginx.pid –with-http_ssl_module –with-pcre=/usr/local/src/pcre-8.38 –with-zlib=/usr/local/src/zlib-1.2.8 –with-openssl=/usr/local/src/openssl-1.0.1q<br>  make<br> make install</p>\n<p>  configure命令是用来检测你的安装平台的目标特征的。它定义了系统的各个方面，包括nginx的被允许使用的连接处理的方法，比如它会检测你是不是有CC或GCC，并不是需要CC或GCC，它是个shell脚本，执行结束时，它会创建一个Makefile文件。nginx的configure命令支持以下参数：<br>  –prefix=path    定义一个目录，存放服务器上的文件 ，也就是nginx的安装目录。默认使用 /usr/local/nginx。<br> –sbin-path=path 设置nginx的可执行文件的路径，默认为  prefix/sbin/nginx.<br>  –conf-path=path  设置在nginx.conf配置文件的路径。nginx允许使用不同的配置文件启动，通过命令行中的-c选项。默认为prefix/conf/nginx.conf.<br>  –pid-path=path  设置nginx.pid文件，将存储的主进程的进程号。安装完成后，可以随时改变的文件名 ， 在nginx.conf配置文件中使用 PID指令。默认情况下，文件名 为prefix/logs/nginx.pid.<br>  –error-log-path=path 设置主错误，警告，和诊断文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的error_log指令。默认情况下，文件名 为prefix/logs/error.log.<br>  –http-log-path=path  设置主请求的HTTP服务器的日志文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的access_log指令。默认情况下，文件名 为prefix/logs/access.log.<br> –user=name  设置nginx工作进程的用户。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的用户名是nobody。<br> –group=name  设置nginx工作进程的用户组。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的为非特权用户。<br>  –with-select_module –without-select_module 启用或禁用构建一个模块来允许服务器使用select()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。<br>  –with-poll_module –without-poll_module 启用或禁用构建一个模块来允许服务器使用poll()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。<br> –without-http_gzip_module — 不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库。<br>  –without-http_rewrite_module  不编译重写模块。编译并运行此模块需要PCRE库支持。<br> –without-http_proxy_module — 不编译http_proxy模块。<br>  –with-http_ssl_module — 使用https协议模块。默认情况下，该模块没有被构建。建立并运行此模块的OpenSSL库是必需的。<br>  –with-pcre=path — 设置PCRE库的源码路径。PCRE库的源码（版本4.4 – 8.30）需要从PCRE网站下载并解压。其余的工作是Nginx的./ configure和make来完成。正则表达式使用在location指令和 ngx_http_rewrite_module 模块中。<br>  –with-pcre-jit —编译PCRE包含“just-in-time compilation”（1.1.12中， pcre_jit指令）。<br>  –with-zlib=path —设置的zlib库的源码路径。要下载从 zlib（版本1.1.3 – 1.2.5）的并解压。其余的工作是Nginx的./ configure和make完成。ngx_http_gzip_module模块需要使用zlib 。<br>  –with-cc-opt=parameters — 设置额外的参数将被添加到CFLAGS变量。例如,当你在FreeBSD上使用PCRE库时需要使用:–with-cc-opt=”-I /usr/local/include。.如需要需要增加 select()支持的文件数量:–with-cc-opt=”-D FD_SETSIZE=2048″.<br> –with-ld-opt=parameters —设置附加的参数，将用于在链接期间。例如，当在FreeBSD下使用该系统的PCRE库,应指定:–with-ld-opt=”-L /usr/local/lib”.<br>  说明: 说明: 若安装时找不到上述依赖模块，使用–with-openssl=<openssl_dir>、–with-pcre=<pcre_dir>、–with-zlib=<zlib_dir>指定依赖的模块目录。如已安装过，此处的路径为安装目录；若未安装，则此路径为编译安装包路径，nginx将执行模块的默认编译安装。s</zlib_dir></pcre_dir></openssl_dir></p>\n<pre><code>db.createUser({\n    user: &quot;root&quot;,\n    pwd: &quot;zhumin&quot;,\n        roles: [{role:&quot;root&quot;, db: &quot;admin&quot;}]\n    });\n    db.createUser( \n    { \n    user: &quot;mongoRoot&quot;,\n    pwd: &quot;testMongoDB2016&quot;,\n    roles:[{role:&quot;userAdminAnyDatabase&quot;, db:&quot;admin&quot;}] \n    } \n    );\n    ]\n\n    rpm -e --nodeps mysql </code></pre>","site":{"data":{}},"excerpt":"","more":"<p>resin 的启动<br>service resin start<br>service resin status </p>\n<p>CENTOS  开放端口号<br>firewall-cmd –permanent –add-port=6600/tcp</p>\n<p>firewall-cmd –permanent –query-port=6800/tcp</p>\n<p>firewall-cmd –list-ports</p>\n<p>firewall-cmd –reload</p>\n<p>Mongodb  安装启动 配置<br>设置mongodb的yum安装源<br>Create a /etc/yum.repos.d/mongodb-org-3.2.repo file so that you can install MongoDB directly, using yum.</p>\n<p>[mongodb-org-3.2]<br>name=MongoDB Repository<br>baseurl=<a href=\"https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/\" target=\"_blank\" rel=\"noopener\">https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/</a><br>gpgcheck=1<br>enabled=1<br>gpgkey=<a href=\"https://www.mongodb.org/static/pgp/server-3.2.asc\" target=\"_blank\" rel=\"noopener\">https://www.mongodb.org/static/pgp/server-3.2.asc</a></p>\n<p>sudo yum install -y mongodb-org  yum 方法安装<br>/etc/mongod.conf   配置文件地址<br>默认端口：27017 by default.<br>sudo service mongod start<br>sudo service mongod restart<br>日志<br>/var/log/mongodb/mongod.log<br>数据<br>/var/lib/mongo</p>\n<p>sudo chkconfig mongod on 设置开机启动</p>\n<p>sudo yum erase $(rpm -qa | grep mongodb-org)</p>\n<p>sudo rm -r /var/log/mongodb<br>sudo rm -r /var/lib/mongo</p>\n<p>Mongodb  数据库操作</p>\n<p>导入数据<br>移除数据先<br>mongoimport –db test –collection restaurants –drop –file primer-dataset.json</p>\n<p>设置登录口令后登录命令<br>mongo -port 27017 -u “myadmin” -p “zhumin”   –authenticationDatabase “admin”</p>\n<p>最小化安装完centos 7 之后 需要做的事情</p>\n<ol>\n<li><p>配置静态 ip  /etc/sysconfig/network-scripts/ 目录下 ipcfg-enXX 文件 查看ip 命令  ip addr show</p>\n<p>一个静态ip 配置案例<br>TYPE=”Ethernet”<br>BOOTPROTO=”static”<br>IPADDR=10.0.0.10<br>NETWORKING=yes<br>GATEWAY=192.168.1.1<br>NETMASK=255.255.255.0<br>NM_CONTROLLED=noa<br>DEFROUTE=”yes”<br>PEERDNS=”yes”<br>PEERROUTES=”yes”<br>IPV4_FAILURE_FATAL=”no”<br>IPV6INIT=”yes”<br>IPV6_AUTOCONF=”yes”<br>IPV6_DEFROUTE=”yes”<br>IPV6_PEERDNS=”yes”<br>IPV6_PEERROUTES=”yes”<br>IPV6_FAILURE_FATAL=”no”<br>NAME=”enp0s3”<br>UUID=”17eeb7fe-f11c-4b8b-83be-a9dd2281dda2”<br>DEVICE=”enp0s3”<br>ONBOOT=”yes”</p>\n</li>\n<li><p>安装软件<br>   1). 安装 links  浏览工具  yum install links<br>   2). 安装 Apache HTTP 服务器 yum istall httpd 如果你想更改 Apache HTTP 服务器的默认端口号(80)为其它端口，你需要编辑配置文件 ‘/etc/httpd/conf/httpd.conf’ 并查找以下面开始的行：</p>\n<pre><code>1.LISTEN 80</code></pre><p>  把端口号 ‘80’ 改为其它任何端口(例如 3221)，保存并退出。<br>  增加刚才分配给 Apache 的端口通过防火墙，然后重新加载防火墙。</p>\n<p> 允许 http 服务通过防火墙(永久)。<br>  1.# firewall-cmd –add-service=http</p>\n<pre><code>允许 3221 号端口通过防火墙(永久)。</code></pre><p> 1.# firewall-cmd –permanent –add-port=3221/tcp</p>\n<p>  重新加载防火墙。</p>\n<pre><code>1.# firewall-cmd –reload\n完成上面的所有事情之后，是时候重启 Apache HTTP 服务器了，然后新的端口号才能生效。</code></pre><p>  1.# systemctl restart httpd.service</p>\n<pre><code>3). yum install lrzsz  </code></pre><p>4). export JAVA_HOME=/usr/local/java/jdk1.8.0_11 </p>\n<pre><code>   export JRE_HOME=/usr/local/java/jdk1.8.0_11/jre \n         export PATH=$PATH:/usr/local/java/jdk1.8.0_11/bin \n     export CLASSPATH=./:/usr/local/java/jdk1.8.0_11/lib:/usr/local/java/jdk1.8.0_11/jre/lib\n5). 安装编译环境  $ yum install ncurses-devel  $ yum install gcc</code></pre><p>   3.新增用户  useradd  xxxxx  设置密码  passwd xxxxx</p>\n<ol start=\"4\">\n<li>防火墙   开启80 端口 firewall-cmd –zone=public –add-port=80/tcp –permanent<br>重启防火墙生效：firewall-cmd –reload<ol start=\"5\">\n<li>更新或升级最小化安装的 CentOS  yum update &amp;&amp; yum upgrade</li>\n</ol>\n</li>\n</ol>\n<p>jdk1.8.0_111</p>\n</li>\n</ol>\n<pre><code>修改系统环境变量文件\nvi + /etc/profile\n\n\n向文件里面追加以下内容：\nJAVA_HOME=/usr/java/jdk1.8.0_25\n JRE_HOME=/usr/java/jdk1.8.0_25/jre\n PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</code></pre><p> CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib<br>  export JAVA_HOME JRE_HOME PATH CLASSPATH</p>\n<p> 192.168.1.129<br>  安装nginx</p>\n<p>  首先由于nginx的一些模块依赖一些lib库，所以在安装nginx之前，必须先安装这些lib库，这些依赖库主要有g++、gcc、openssl-devel、pcre-devel和zlib-devel 所以执行如下命令安装</p>\n<p>  yum install gcc-c++<br> yum install pcre pcre-devel<br> yum install zlib zlib-devel<br>  yum install openssl openssl–devel</p>\n<pre><code>二、安装Nginx</code></pre><p>  安装之前，最好检查一下是否已经安装有 nginx<br>  find -name nginx</p>\n<pre><code>如果系统已经安装了nginx，那么就先卸载\nyum remove nginx</code></pre><p>  首先进入 /usr/local 目录<br> cd /usr/local<br>  从官网下载最新版的nginx<br> wget <a href=\"http://nginx.org/download/nginx-1.9.6.tar.gz\" target=\"_blank\" rel=\"noopener\">http://nginx.org/download/nginx-1.9.6.tar.gz</a><br>  tar -zxvf nginx-1.9.6.tar.gz<br> cd nginx-1.9.6</p>\n<p> 接下来安装，使用–prefix参数指定nginx安装的目录,make、make install安装</p>\n<p> ./configure  $默认安装在/usr/local/nginx<br> make<br>  make install</p>\n<p>  如果没有报错，顺利完成后，最好看一下 nginx 的安装目录<br>  whereis nginx</p>\n<p> 安装完毕后，进入安装后目录（/usr/local/nginx）便可以启动或停止它了</p>\n<p> 使用命令编译nginx</p>\n<p> ./configure –sbin-path=/usr/local/nginx/nginx –conf-path=/usr/local/nginx/nginx.conf –pid-path=/usr/local/nginx/nginx.pid –with-http_ssl_module –with-pcre=/usr/local/src/pcre-8.38 –with-zlib=/usr/local/src/zlib-1.2.8 –with-openssl=/usr/local/src/openssl-1.0.1q<br>  make<br> make install</p>\n<p>  configure命令是用来检测你的安装平台的目标特征的。它定义了系统的各个方面，包括nginx的被允许使用的连接处理的方法，比如它会检测你是不是有CC或GCC，并不是需要CC或GCC，它是个shell脚本，执行结束时，它会创建一个Makefile文件。nginx的configure命令支持以下参数：<br>  –prefix=path    定义一个目录，存放服务器上的文件 ，也就是nginx的安装目录。默认使用 /usr/local/nginx。<br> –sbin-path=path 设置nginx的可执行文件的路径，默认为  prefix/sbin/nginx.<br>  –conf-path=path  设置在nginx.conf配置文件的路径。nginx允许使用不同的配置文件启动，通过命令行中的-c选项。默认为prefix/conf/nginx.conf.<br>  –pid-path=path  设置nginx.pid文件，将存储的主进程的进程号。安装完成后，可以随时改变的文件名 ， 在nginx.conf配置文件中使用 PID指令。默认情况下，文件名 为prefix/logs/nginx.pid.<br>  –error-log-path=path 设置主错误，警告，和诊断文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的error_log指令。默认情况下，文件名 为prefix/logs/error.log.<br>  –http-log-path=path  设置主请求的HTTP服务器的日志文件的名称。安装完成后，可以随时改变的文件名 ，在nginx.conf配置文件中 使用 的access_log指令。默认情况下，文件名 为prefix/logs/access.log.<br> –user=name  设置nginx工作进程的用户。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的用户名是nobody。<br> –group=name  设置nginx工作进程的用户组。安装完成后，可以随时更改的名称在nginx.conf配置文件中 使用的 user指令。默认的为非特权用户。<br>  –with-select_module –without-select_module 启用或禁用构建一个模块来允许服务器使用select()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。<br>  –with-poll_module –without-poll_module 启用或禁用构建一个模块来允许服务器使用poll()方法。该模块将自动建立，如果平台不支持的kqueue，epoll，rtsig或/dev/poll。<br> –without-http_gzip_module — 不编译压缩的HTTP服务器的响应模块。编译并运行此模块需要zlib库。<br>  –without-http_rewrite_module  不编译重写模块。编译并运行此模块需要PCRE库支持。<br> –without-http_proxy_module — 不编译http_proxy模块。<br>  –with-http_ssl_module — 使用https协议模块。默认情况下，该模块没有被构建。建立并运行此模块的OpenSSL库是必需的。<br>  –with-pcre=path — 设置PCRE库的源码路径。PCRE库的源码（版本4.4 – 8.30）需要从PCRE网站下载并解压。其余的工作是Nginx的./ configure和make来完成。正则表达式使用在location指令和 ngx_http_rewrite_module 模块中。<br>  –with-pcre-jit —编译PCRE包含“just-in-time compilation”（1.1.12中， pcre_jit指令）。<br>  –with-zlib=path —设置的zlib库的源码路径。要下载从 zlib（版本1.1.3 – 1.2.5）的并解压。其余的工作是Nginx的./ configure和make完成。ngx_http_gzip_module模块需要使用zlib 。<br>  –with-cc-opt=parameters — 设置额外的参数将被添加到CFLAGS变量。例如,当你在FreeBSD上使用PCRE库时需要使用:–with-cc-opt=”-I /usr/local/include。.如需要需要增加 select()支持的文件数量:–with-cc-opt=”-D FD_SETSIZE=2048″.<br> –with-ld-opt=parameters —设置附加的参数，将用于在链接期间。例如，当在FreeBSD下使用该系统的PCRE库,应指定:–with-ld-opt=”-L /usr/local/lib”.<br>  说明: 说明: 若安装时找不到上述依赖模块，使用–with-openssl=<openssl_dir>、–with-pcre=<pcre_dir>、–with-zlib=<zlib_dir>指定依赖的模块目录。如已安装过，此处的路径为安装目录；若未安装，则此路径为编译安装包路径，nginx将执行模块的默认编译安装。s</zlib_dir></pcre_dir></openssl_dir></p>\n<pre><code>db.createUser({\n    user: &quot;root&quot;,\n    pwd: &quot;zhumin&quot;,\n        roles: [{role:&quot;root&quot;, db: &quot;admin&quot;}]\n    });\n    db.createUser( \n    { \n    user: &quot;mongoRoot&quot;,\n    pwd: &quot;testMongoDB2016&quot;,\n    roles:[{role:&quot;userAdminAnyDatabase&quot;, db:&quot;admin&quot;}] \n    } \n    );\n    ]\n\n    rpm -e --nodeps mysql </code></pre>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjxqz0zld00032oi89n5ty6gk","tag_id":"cjxqz0zlf00052oi8spvy6o7e","_id":"cjxqz0zlk00092oi8ej7ppnvu"}],"Tag":[{"name":"日志  感悟 生活","_id":"cjxqz0zlf00052oi8spvy6o7e"}]}}